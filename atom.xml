<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[eugenius]]></title>
  <link href="http://eewang.github.com/atom.xml" rel="self"/>
  <link href="http://eewang.github.com/"/>
  <updated>2013-04-17T20:16:10-04:00</updated>
  <id>http://eewang.github.com/</id>
  <author>
    <name><![CDATA[Eugene Wang]]></name>
    <email><![CDATA[eugene.wang@flatironschool.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[In Praise of Project Euler]]></title>
    <link href="http://eewang.github.com/blog/2013/04/17/in-praise-of-project-euler/"/>
    <updated>2013-04-17T16:39:00-04:00</updated>
    <id>http://eewang.github.com/blog/2013/04/17/in-praise-of-project-euler</id>
    <content type="html"><![CDATA[<p>On the suggestion of my Flatiron classmates <a href="http://chickenriceplatter.github.io/" target="_blank">David</a> and <a href="http://andrewcallahan.github.io" target="_blank">Andrew</a>, I started trying out <a href="http://projecteuler.net/" target="_blank">Project Euler</a> recently. For the uninitiated, Project Euler is a series of math problems aptly named after the famed mathemetician Leonhard Euler, known for such learned things like fluid dynamics, number theory and calculus. Project Euler is effectively a database of math problems that are intended to be solved using code (any language can be used; I&#8217;m using Ruby). The questions test your logical thinking skills, and while they&#8217;re named after a mathemetician, the actual math necessary is more along the lines of high school math (e.g., prime numbers, factoring, etc.). This is not to diminish the difficulty of these problems - some of them are quite challenging - but rather to distinguish between the problem solving skills, which Project Euler helps build, versus pure math skill, which is more the province of a graduate school program.</p>

<!--more-->


<p>I&#8217;ve only completed about 5 problems, but I&#8217;m already an advocate of trying them out. I like Project Euler because the problems are challenging enough where they really force you to build a clear, logical problem solving process yet not so obscure that you need to break out your AP Calculus book. Don&#8217;t be turned away from the problems because of the math - the biggest challenge is taking the large problem and breaking it down small-step-by-small-step.</p>

<p>Here&#8217;s an example problem:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>If we list all the natural numbers below 10 that are multiples of 3 or 5, 
</span><span class='line'>we get 3, 5, 6 and 9. The sum of these multiples is 23. 
</span><span class='line'>Find the sum of all the multiples of 3 or 5 below 1000.</span></code></pre></td></tr></table></div></figure>


<p>As you can see, the problems are challenging but manageable. The prompt typically has an example pattern and then asks you to extrapolate that pattern to some large number (in this case, 1000). Here are the main reasons why I think its great to try a few Project Euler problems:</p>

<p><strong>1) Great mental exercise</strong></p>

<p>I&#8217;m trying to average a problem a day as a form of mental exercise. While doing Project Euler problems probably won&#8217;t directly make you a better Rails programmer, it will boost your overall problem solving process. And what else is coding at its core but implementing a clear process to solving problems via technology? Just as going for a 6-mile run today may not keep you from getting a cold tomorrow, doing Project Euler problems won&#8217;t help you solve that nasty bug in your code today, but having a consistent habit of problem solving exercise will make your mind healthier in the long run.</p>

<p><strong>2) Learning core Ruby</strong></p>

<p>Having to solve Project Euler problems has forced me back into the core Ruby documentation to try and find creative solutions. For example, I don&#8217;t typically use Ruby&#8217;s &#8216;inject&#8217; method in my day-to-day coding. Inject is a pretty high-level Ruby function that allows you to specify an initial value and apply a code block to an Enumerable (e.g., an array), the result of which becomes the initial value in the following iteration. Most of the code I&#8217;ve written rely on the less abstract &#8216;collect&#8217; or &#8216;map&#8217; methods in Ruby. However, I&#8217;ve rediscovered the utility of the inject method since Project Euler problems tend to include some sort of iterative sum or product. I won&#8217;t go into the details of the inject method here, but you can find more information about it in <a href="http://blog.jayfields.com/2008/03/ruby-inject.html" target="_blank">this blog post</a> if you&#8217;re interested.</p>

<p><strong>3) Refactoring practice</strong></p>

<p>Refactoring is the near-constant process of changing code without affecting what the user sees. Its the middle part of the &#8220;make it work, make it right, make it fast&#8221; adage. Recognizing patterns and understanding the tradeoffs included in applying certain methods or approaching a problem in a certain way are critical to skillful refactoring. Project Euler problems really help hammer in the practice of always looking over your code and finding ways to refactor it.</p>

<p>I&#8217;ve started taking a three-pronged approach to solving Project Euler problems. First, I&#8217;ll try and solve the problem for a smaller number (e.g., less than 100) with whatever code works. Second, I&#8217;ll solve the problem for the large number stated in the Project Euler prompt. Finally, I&#8217;ll refactor the code into an object-oriented manner, either by creating my own class or monkey-patching an existing Ruby class (often, the Integer class). This three-step process has helped me practice raw problem-solving and get into the habit of breaking down complex problems into small, simple tasks. Refactoring is a universal coding skill, so I&#8217;m hopeful that Project Euler will help me develop a better sense for patterns and make me a better problem solver.</p>

<p><strong>4) Creative problem solving</strong></p>

<p>This reason falls in line with the refactoring practice Project Euler provides. As the cliche goes, there&#8217;s often more than one way to skin a cat, and problem solving is no different. An example of this is the code below (warning: spoiler alert) that I wrote to solve Project Euler problem 8. The problem provides a 1000-digit number and you are required to find the greatest product of any five consecutive digits.</p>

<p>When I was thinking about this problem, I could see a few solutions. One way it could be done would be to go through the number in 5-digit chunks, basically creating sub-arrays out of the number, storing the value into a products array, then returning the maximum value. Another way to solve the problem would be to find the product of 5-digit chunks, store the result in a variable, then replace the value of that variable with subsequent products only if such product is larger. Yet another way to solve the problem would be to calculate the product of a 5-digit chunk, then iteratively check whether the next number is larger than the first number in the 5-digit array (i.e., the next product calculation). If so, then calculate the product. Otherwise, move onto the next number to add.</p>

<p>I think this last process is the most efficient, because each product that is actually calculated is guaranteed to be larger than the previous max product, since all else equal, replacing one number in a 5-digit product with a larger number will result in a larger number. This saves computation time and moves the determination of whether to calculate the product to a less computationally intensive task (comparing two numbers versus multiplication. At least, I think this is the case. I&#8217;m not super well versed in algorithm efficiency, but this makes sense to me at least.</p>

<p>The code I ended up implementing takes the most from the middle process. I could have extended the code further to make it more efficient, but I focused instead on making the code more object-oriented. My below code shows the three-step process I&#8217;m taking toward these problems - first, make it work with a smaller number, then make it work with the actual number, then refactor into an object.</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
<span class='line-number'>143</span>
<span class='line-number'>144</span>
<span class='line-number'>145</span>
<span class='line-number'>146</span>
<span class='line-number'>147</span>
<span class='line-number'>148</span>
<span class='line-number'>149</span>
<span class='line-number'>150</span>
<span class='line-number'>151</span>
<span class='line-number'>152</span>
<span class='line-number'>153</span>
<span class='line-number'>154</span>
<span class='line-number'>155</span>
<span class='line-number'>156</span>
<span class='line-number'>157</span>
<span class='line-number'>158</span>
<span class='line-number'>159</span>
<span class='line-number'>160</span>
<span class='line-number'>161</span>
<span class='line-number'>162</span>
<span class='line-number'>163</span>
<span class='line-number'>164</span>
<span class='line-number'>165</span>
<span class='line-number'>166</span>
<span class='line-number'>167</span>
<span class='line-number'>168</span>
<span class='line-number'>169</span>
<span class='line-number'>170</span>
<span class='line-number'>171</span>
<span class='line-number'>172</span>
<span class='line-number'>173</span>
<span class='line-number'>174</span>
<span class='line-number'>175</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># PROBLEM NUMBER 8</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># PROBLEM NAME</span>
</span><span class='line'><span class="c1"># Largest product in a series</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># PROBLEM DESCRIPTION</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># Find the greatest product of five consecutive digits in the 1000-digit number.</span>
</span><span class='line'><span class="c1"># 73167176531330624919225119674426574742355349194934</span>
</span><span class='line'><span class="c1"># 96983520312774506326239578318016984801869478851843</span>
</span><span class='line'><span class="c1"># 85861560789112949495459501737958331952853208805511</span>
</span><span class='line'><span class="c1"># 12540698747158523863050715693290963295227443043557</span>
</span><span class='line'><span class="c1"># 66896648950445244523161731856403098711121722383113</span>
</span><span class='line'><span class="c1"># 62229893423380308135336276614282806444486645238749</span>
</span><span class='line'><span class="c1"># 30358907296290491560440772390713810515859307960866</span>
</span><span class='line'><span class="c1"># 70172427121883998797908792274921901699720888093776</span>
</span><span class='line'><span class="c1"># 65727333001053367881220235421809751254540594752243</span>
</span><span class='line'><span class="c1"># 52584907711670556013604839586446706324415722155397</span>
</span><span class='line'><span class="c1"># 53697817977846174064955149290862569321978468622482</span>
</span><span class='line'><span class="c1"># 83972241375657056057490261407972968652414535100474</span>
</span><span class='line'><span class="c1"># 82166370484403199890008895243450658541227588666881</span>
</span><span class='line'><span class="c1"># 16427171479924442928230863465674813919123162824586</span>
</span><span class='line'><span class="c1"># 17866458359124566529476545682848912883142607690042</span>
</span><span class='line'><span class="c1"># 24219022671055626321111109370544217506941658960408</span>
</span><span class='line'><span class="c1"># 07198403850962455444362981230987879927244284909188</span>
</span><span class='line'><span class="c1"># 84580156166097919133875499200524063689912560717606</span>
</span><span class='line'><span class="c1"># 05886116467109405077541002256983155200055935729725</span>
</span><span class='line'><span class="c1"># 71636269561882670428252483600823257530420752963450</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># PROCESS</span>
</span><span class='line'><span class="c1"># =&gt; Convert Fixnum to String to Array</span>
</span><span class='line'><span class="c1"># =&gt; Go through first five numbers and find the product</span>
</span><span class='line'><span class="c1"># =&gt; Save the result in a &quot;result&quot; variable</span>
</span><span class='line'><span class="c1"># =&gt; Remove the first number (1) (unshift) and add the 6th number (push)</span>
</span><span class='line'><span class="c1"># =&gt; Find the product of the second set of 5 numbers</span>
</span><span class='line'><span class="c1"># =&gt; If the result is larger than the value of &quot;result&quot;, replace the result value. Otherwise, discard the latest result</span>
</span><span class='line'><span class="c1"># =&gt; Repeat steps 3 to 5 until the end</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># =&gt; With each number that is removed and added, check if the number being added is greater than the number being removed. If so, calculate the product.</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># ANSWER</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># =&gt; 40824</span>
</span><span class='line'>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;pry&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># =&gt; METHOD 1</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># num = 4938294829384</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># num_array = num.to_s.split(&quot;&quot;).collect { |i| i.to_i }</span>
</span><span class='line'><span class="c1"># iterations = num_array.length - 5</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># start = 0</span>
</span><span class='line'><span class="c1"># finish = 4</span>
</span><span class='line'><span class="c1"># product_array = []</span>
</span><span class='line'><span class="c1"># max_product = 0</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># (0..iterations).each do |i|</span>
</span><span class='line'><span class="c1">#   sub_array = (start..finish).collect { |n| num_array[n] }</span>
</span><span class='line'><span class="c1">#   product = sub_array.inject(1) { |result, num| result * num }</span>
</span><span class='line'><span class="c1">#   product_array &lt;&lt; product</span>
</span><span class='line'><span class="c1">#   if product &gt; max_product</span>
</span><span class='line'><span class="c1">#     max_product = product</span>
</span><span class='line'><span class="c1">#   end</span>
</span><span class='line'><span class="c1">#   start += 1</span>
</span><span class='line'><span class="c1">#   finish += 1</span>
</span><span class='line'><span class="c1"># end</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># =&gt; METHOD 2</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># num = &quot;73167176531330624919225119674426574742355349194934</span>
</span><span class='line'><span class="c1"># 96983520312774506326239578318016984801869478851843</span>
</span><span class='line'><span class="c1"># 85861560789112949495459501737958331952853208805511</span>
</span><span class='line'><span class="c1"># 12540698747158523863050715693290963295227443043557</span>
</span><span class='line'><span class="c1"># 66896648950445244523161731856403098711121722383113</span>
</span><span class='line'><span class="c1"># 62229893423380308135336276614282806444486645238749</span>
</span><span class='line'><span class="c1"># 30358907296290491560440772390713810515859307960866</span>
</span><span class='line'><span class="c1"># 70172427121883998797908792274921901699720888093776</span>
</span><span class='line'><span class="c1"># 65727333001053367881220235421809751254540594752243</span>
</span><span class='line'><span class="c1"># 52584907711670556013604839586446706324415722155397</span>
</span><span class='line'><span class="c1"># 53697817977846174064955149290862569321978468622482</span>
</span><span class='line'><span class="c1"># 83972241375657056057490261407972968652414535100474</span>
</span><span class='line'><span class="c1"># 82166370484403199890008895243450658541227588666881</span>
</span><span class='line'><span class="c1"># 16427171479924442928230863465674813919123162824586</span>
</span><span class='line'><span class="c1"># 17866458359124566529476545682848912883142607690042</span>
</span><span class='line'><span class="c1"># 24219022671055626321111109370544217506941658960408</span>
</span><span class='line'><span class="c1"># 07198403850962455444362981230987879927244284909188</span>
</span><span class='line'><span class="c1"># 84580156166097919133875499200524063689912560717606</span>
</span><span class='line'><span class="c1"># 05886116467109405077541002256983155200055935729725</span>
</span><span class='line'><span class="c1"># 71636269561882670428252483600823257530420752963450&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># num_array = num.split(&quot;&quot;).collect { |i| i.to_i }</span>
</span><span class='line'><span class="c1"># iterations = num_array.length - 5</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># start = 0</span>
</span><span class='line'><span class="c1"># finish = 4</span>
</span><span class='line'><span class="c1"># product_array = []</span>
</span><span class='line'><span class="c1"># max_product = 0</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># (0..iterations).each do |i|</span>
</span><span class='line'><span class="c1">#   sub_array = (start..finish).collect { |n| num_array[n] }</span>
</span><span class='line'><span class="c1">#   product = sub_array.inject(1) { |result, num| result * num }</span>
</span><span class='line'><span class="c1">#   product_array &lt;&lt; product</span>
</span><span class='line'><span class="c1">#   if product &gt; max_product</span>
</span><span class='line'><span class="c1">#     max_product = product</span>
</span><span class='line'><span class="c1">#   end</span>
</span><span class='line'><span class="c1">#   start += 1</span>
</span><span class='line'><span class="c1">#   finish += 1</span>
</span><span class='line'><span class="c1"># end</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># =&gt; METHOD 3 (Object Orientation)</span>
</span><span class='line'>
</span><span class='line'><span class="n">num</span> <span class="o">=</span> <span class="s2">&quot;73167176531330624919225119674426574742355349194934</span>
</span><span class='line'><span class="s2">96983520312774506326239578318016984801869478851843</span>
</span><span class='line'><span class="s2">85861560789112949495459501737958331952853208805511</span>
</span><span class='line'><span class="s2">12540698747158523863050715693290963295227443043557</span>
</span><span class='line'><span class="s2">66896648950445244523161731856403098711121722383113</span>
</span><span class='line'><span class="s2">62229893423380308135336276614282806444486645238749</span>
</span><span class='line'><span class="s2">30358907296290491560440772390713810515859307960866</span>
</span><span class='line'><span class="s2">70172427121883998797908792274921901699720888093776</span>
</span><span class='line'><span class="s2">65727333001053367881220235421809751254540594752243</span>
</span><span class='line'><span class="s2">52584907711670556013604839586446706324415722155397</span>
</span><span class='line'><span class="s2">53697817977846174064955149290862569321978468622482</span>
</span><span class='line'><span class="s2">83972241375657056057490261407972968652414535100474</span>
</span><span class='line'><span class="s2">82166370484403199890008895243450658541227588666881</span>
</span><span class='line'><span class="s2">16427171479924442928230863465674813919123162824586</span>
</span><span class='line'><span class="s2">17866458359124566529476545682848912883142607690042</span>
</span><span class='line'><span class="s2">24219022671055626321111109370544217506941658960408</span>
</span><span class='line'><span class="s2">07198403850962455444362981230987879927244284909188</span>
</span><span class='line'><span class="s2">84580156166097919133875499200524063689912560717606</span>
</span><span class='line'><span class="s2">05886116467109405077541002256983155200055935729725</span>
</span><span class='line'><span class="s2">71636269561882670428252483600823257530420752963450&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">Product</span>
</span><span class='line'>  <span class="kp">attr_accessor</span> <span class="ss">:number</span><span class="p">,</span> <span class="ss">:set</span><span class="p">,</span> <span class="ss">:start</span><span class="p">,</span> <span class="ss">:finish</span><span class="p">,</span> <span class="ss">:max_product</span><span class="p">,</span> <span class="ss">:product_array</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="n">set</span><span class="p">)</span>
</span><span class='line'>    <span class="vi">@set</span> <span class="o">=</span> <span class="n">set</span>
</span><span class='line'>    <span class="vi">@start</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'>    <span class="vi">@finish</span> <span class="o">=</span> <span class="n">set</span> <span class="o">-</span> <span class="mi">1</span>
</span><span class='line'>    <span class="vi">@max_product</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'>    <span class="vi">@product_array</span> <span class="o">=</span> <span class="o">[]</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">create_array</span>
</span><span class='line'>    <span class="nb">self</span><span class="o">.</span><span class="n">number</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">collect</span> <span class="p">{</span> <span class="o">|</span><span class="n">i</span><span class="o">|</span> <span class="n">i</span><span class="o">.</span><span class="n">to_i</span> <span class="p">}</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">iteration_count</span>
</span><span class='line'>    <span class="nb">self</span><span class="o">.</span><span class="n">create_array</span><span class="o">.</span><span class="n">length</span> <span class="o">-</span> <span class="nb">self</span><span class="o">.</span><span class="n">set</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">find_max_product</span>
</span><span class='line'>    <span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="n">.self</span><span class="o">.</span><span class="n">iteration_count</span><span class="p">)</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">i</span><span class="o">|</span>
</span><span class='line'>      <span class="n">sub_array</span> <span class="o">=</span> <span class="p">(</span><span class="nb">self</span><span class="o">.</span><span class="n">start</span><span class="o">.</span><span class="n">.self</span><span class="o">.</span><span class="n">finish</span><span class="p">)</span><span class="o">.</span><span class="n">collect</span> <span class="p">{</span> <span class="o">|</span><span class="n">n</span><span class="o">|</span> <span class="nb">self</span><span class="o">.</span><span class="n">create_array</span><span class="o">[</span><span class="n">n</span><span class="o">]</span> <span class="p">}</span>
</span><span class='line'>      <span class="n">product</span> <span class="o">=</span> <span class="n">sub_array</span><span class="o">.</span><span class="n">inject</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span> <span class="p">{</span> <span class="o">|</span><span class="n">result</span><span class="p">,</span> <span class="n">num</span><span class="o">|</span> <span class="n">result</span> <span class="o">*</span> <span class="n">num</span> <span class="p">}</span>
</span><span class='line'>      <span class="nb">self</span><span class="o">.</span><span class="n">max_product</span> <span class="o">=</span> <span class="n">product</span> <span class="k">if</span> <span class="nb">self</span><span class="o">.</span><span class="n">max_product_compare</span><span class="p">(</span><span class="n">product</span><span class="p">)</span>
</span><span class='line'>      <span class="nb">self</span><span class="o">.</span><span class="n">start</span> <span class="o">+=</span> <span class="mi">1</span>
</span><span class='line'>      <span class="nb">self</span><span class="o">.</span><span class="n">finish</span> <span class="o">+=</span> <span class="mi">1</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>    <span class="n">max_product</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">max_product_compare</span><span class="p">(</span><span class="n">num</span><span class="p">)</span>
</span><span class='line'>    <span class="kp">true</span> <span class="k">if</span> <span class="n">num</span> <span class="o">&gt;</span> <span class="nb">self</span><span class="o">.</span><span class="n">max_product</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="nb">p</span> <span class="o">=</span> <span class="no">Product</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="mi">5</span><span class="p">)</span>
</span><span class='line'><span class="nb">p</span><span class="o">.</span><span class="n">number</span> <span class="o">=</span> <span class="n">num</span>
</span><span class='line'><span class="nb">p</span><span class="o">.</span><span class="n">find_max_product</span>
</span><span class='line'>
</span><span class='line'><span class="nb">binding</span><span class="o">.</span><span class="n">pry</span>
</span></code></pre></td></tr></table></div></figure>


<p>As I mentioned above, don&#8217;t be intimidated by the math parts of Project Euler. In retrospect, I wish I had started doing these problems earlier on in the semester, but its never too late to get some good mental exercise in.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Antipatterns in Rails]]></title>
    <link href="http://eewang.github.com/blog/2013/04/13/antipatterns-in-rails/"/>
    <updated>2013-04-13T15:03:00-04:00</updated>
    <id>http://eewang.github.com/blog/2013/04/13/antipatterns-in-rails</id>
    <content type="html"><![CDATA[<p>I recently finished reading Rails Antipatterns, which is a great book that uses commonly abused patterns in Rails to illustrate refactoring opportunities. I recommend the book as a way to improve your &#8220;code smell&#8221;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[TRUE Object-Oriented Design]]></title>
    <link href="http://eewang.github.com/blog/2013/04/13/custom-activerecord-queries-in-rails/"/>
    <updated>2013-04-13T11:23:00-04:00</updated>
    <id>http://eewang.github.com/blog/2013/04/13/custom-activerecord-queries-in-rails</id>
    <content type="html"><![CDATA[<p>Avi always stresses that being a good developer is about more than just being a good coder. Like all professions, coding is only part of the job. What&#8217;s arguably more important than coding are the soft skills that transcend any individual profession. Skills like communication, empathy, diligence and hard work. All good professional jobs help build these skills, and software development is no different.</p>

<!--more-->


<p>But building those skills aren&#8217;t easy, especially when applied to the domain of coding. Clearly and succinctly explaining the internals of a codebase to a newbie is really difficult; it requires not only communication skills but also empathy and patience. As I&#8217;ve been learning how to code, I&#8217;m also trying to broaden my understanding of technology generally through reading, writing and engaging in the community (e.g., meetups, hackathons). Work-work balance is critical; while its important to code most every day when learning the skill, its also important to not just code. Regular coding enables me to get deep into the weeds and determine exactly how to properly route requests through my application, while reading and blogging helps me look at code from a high-level and develop a high-level understanding of software design and structure.</p>

<p>I&#8217;ve started to think of good design like a mountain range. The most abstract/least concrete layers are the most foundational to the application - the base of the mountain, if you will - whereas the least abstract/most concrete layers are the items that you actually see - the peaks. Each peak might represent a different component of your application, yet the base of the mountain represents the shared functionality or code patterns between the peaks. In looking at a mountain range from afar, no one can perceive the geological complexity of the sandstone or granite that allow the peaks to reach the sky. In the same way, good application design hides the complex inner workings of a program, yet it is this complexity that enables the public interface of an well-built application to work so seamlessly. As our teacher Bob Whitney said, the job of a developer is to take in complexity and deliver simplicity.</p>

<p>Admittedly, the mountain range metaphor is a bit contrived, but the same effective design pattern can be seen in other spheres, both natural and artificial. A rainforest&#8217;s beauty is seen from the treetops, but the complexity deep within the roots and vines that create an interlocking and co-dependent ecosystem and enable the treetops to extend high above the earth is hidden from the external observer. A well-functioning corporation requires harmony between its many internal groups in order to provide a service or product to its customers effectively. Software design just takes these common patterns of loose coupling, modularity and composition and applies them in the context of objects, classes and methods.</p>

<p>One book that I&#8217;ve recently finished reading that covers software design best practices is &#8220;Practical Object Oriented Design in Ruby&#8221; by Sandi Metz.
In POODR (her own acronym), Sandi Metz expresses these design patterns in a pithy and effective manner, complete with code examples, comparisons of good and bad design patterns and a common example of designing a bike shop application that weaves the 9 chapters together. POODR is an eminently readable book, and Ms. Metz does a remarkable job balancing deep dives into code with plain English explanations of good application design. As an aside, Ms. Metz&#8217;s day job is as an application developer for my alma mater, Duke University, which makes her all the more awesome.</p>

<p>Here are a few of her most quotable quotables and a few thoughts on how to consider her advice:</p>

<blockquote><p>Code should be transparent, reasonable, usable and exemplary.</p></blockquote>


<p>Sandi Metz is perhaps best known for this pithy guide on how to write code. Programs should be easily understandable, well-suited for their purpose, navigable and malleable and just awesome. TRUE is a useful north star for good code.</p>

<blockquote><p>Depend on things that change less often than you do.</p></blockquote>


<p>Dependencies in code are often unavoidable. Thus, what matters most is picking the right dependencies rather than trying to write entirely dependency-free code. Create dependencies that are manageable by ensuring that classes and objects that will likely change in the future should have proportionately fewer dependencies than code blocks that are more stable. The Ruby core library is a great example of this - it is better to build objects that depend on the String class, for example, than depend on an internal, domain-specific class, since the Ruby String class is pretty well-established and less likely to change going forward.</p>

<p>In a similar vein&#8230;</p>

<blockquote><p>Depend on behavior, not data.</p></blockquote>


<p>Data can take many different formats. A lot of coding is about taking one data item and cutting it up a hundred different ways before its actually displayed to the user. Thus, data will change frequently relative to behavior, which tends to be more consistent. Think of data as rows and behavior as columns in a database - its easier to grow a database vertically than horizontally. This means that its better to depend on behavior rather than data, because behavior is less likely to change.</p>

<blockquote><p>Create public methods that allow senders to get what they want without knowing how your class implements its behavior.</p></blockquote>


<p>Classes should have a well defined public API that enables interaction with other objects without knowing too much about those objects. One example that Sandi Metz uses is the notion of polymorphic interfaces, which are basically methods that can iteract with multiple data types (e.g., arrays or hashes). A common pitfall among new developers is designing methods that only take in a single data type. This requires a class B that might interact with class A to know what type of data class A expects. Oftentimes, its not class B&#8217;s responsibility to know what data class A expects; class A&#8217;s public method should have a polymorphic interface to lessen the dependencies between the two classes.</p>

<blockquote><p>&#8220;This tension between the costs of concretion and the costs of abstraction is fundamental to object-oriented design. Concrete code is easy to understand but costly to extend. Abstract code may initially seem more obscure but, once understood, is far easier to change. Use of a duck type moves your code along the scale from more concrete to more abstract, making the code easier to extend but casting a veil over the underlying class of the duck.&#8221;</p></blockquote>


<p>I love this quote in POODR because it highlights an underlying tradeoff that developers consider whenever refactoring code and applying the priciples of good object-oriented design. On the one end of the spectrum is concrete code that relies on well-defined dataset. On the other end is highly abstract code (e.g., methods that write methods via metaprogramming) that is more powerful and flexible than concrete code, but also often less readable to the untrained eye or freshman developer. A duck type is an object that can be of any type and used within function calls. I&#8217;m sure that&#8217;s not the technical definition, but to me, I think of duck types as abstract objects that can take many different forms, and so methods that can accept duck types need to be written abstractly in order to function properly.</p>

<blockquote><p>&#8220;The ability to tolerate ambiguity about the class of an object is the hallmark of a confident designer. Once you begin to treat your objects as if they are defined by their behavior rather than by their class, you enter into a new realm of expressive<br/>flexible design.&#8221;</p></blockquote>


<p>Fundamental to Sandi Metz&#8217;s software design philosophy seems to be the focus on defining behavior rather than data or data types. I like this quote because it focuses on building a flexible product that can adapt to whatever the future holds for an application. Early on in the development process, ambiguity reigns supreme since programmers cannot know what the product will eventually look like. Thus, a good developer and application designer should be able tolerate and accept that uncertainty and design around the problem. Building abstract frameworks to define object behavior enables an application to grow iteratively and organically as the product specifications change.</p>

<p>One thing I learned from the book is that different tools exist in software design to address different problems. The use of class inheritance, for example, should be used in some instances whereas modules and duck types should be used in others. Its difficult to go into a full example in the length of a blog post, but I would especially recommend reading chapters 5 through 8 about duck typing, inheritance, behavior sharing via modules and object composition. Sandi Metz does a great job of mixing in code examples along with good explanations of the high-level thought process of the pros and cons of each programming technique. Not every tool is right for every job, and so a hallmark of a good developer is being able to spot which tools are right for which jobs.</p>

<p>A lot of being a more experienced developer seems to revolve around this spidey sense about coding design patterns. Avi demonstrates this regularly when he&#8217;ll spend just a few minutes flying between levels of abstraction that take us beginners hours to implement ourselves. In fact, experience in most any profession or skillset can be reflected in the &#8220;sixth sense&#8221; someone has about recognizing patterns. An experienced trader can front-run the market because he or she &#8220;senses&#8221; that prices will move in a certain direction. A branding expert can quickly conceptualize a marketing campaign because he or she can immediately grasp the underlying nature of the message a client wants to convey. In the same way, experience as a developer means that you get better at spotting patterns in code. POODR aims to provide beginners with a jumpstart in finding those patterns.</p>

<p>Two other Ruby/Rails books that I&#8217;m reading are &#8220;Rails Antipatterns&#8221; by Chad Pytel and Tammer Saleh and &#8220;Metaprogramming Ruby&#8221; by Paolo Perrotta. I&#8217;m hoping to write a post on those books as well in the coming week or two, so stay tuned.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Building ViewFinder (Flatiron - Week 9)]]></title>
    <link href="http://eewang.github.com/blog/2013/04/07/building-viewfinder-flatiron-week-9/"/>
    <updated>2013-04-07T14:42:00-04:00</updated>
    <id>http://eewang.github.com/blog/2013/04/07/building-viewfinder-flatiron-week-9</id>
    <content type="html"><![CDATA[<p>The majority of this past week was spent building <a href="http://viewfinder.io" target="_blank">ViewFinder</a>, which is a Rails app that leverages the Instagram API to enable users to guess where photos were taken and gamefies Instagram photo feeds. Building ViewFinder along with <a href="http://www.erinandcode.com" target="_blank">Erin Lee</a> and <a href="http://jlarusso.github.io" target="_blank">Jesse LaRusso</a> has been a pretty great experience; we got way farther than I had expected initially for the NYC on Rails presentation. Looking back at our Trello board, we defined our MVP for the presentation as an app where users could browse tagged photos and write in the address or intersection where they think the photo was taken. What we ended up with was much more than that, and more visually appealing than I could have imagined initially.</p>

<!--more-->


<p><strong>1) Brainstorming and ideation</strong></p>

<p>The idea for ViewFinder came from the View From Your Window (VFYW) game that the blogger Andrew Sullivan has on his blog, <a href="http://dish.andrewsullivan.com/" target="_blank">The Daily Dish</a>. If you haven&#8217;t read the Daily Dish, you should start (and pay for the privilege!). Sully is a coherent and reasoned blogger, and his writing covers a large swath of topics, from public policy and politics, to business, to arts and literature. For his VFYW game, readers will send him photos of their view outside their window and since his readership spans the globe, the photos tend to be from far-flung regions like Japan, Indonesia or Estonia. I&#8217;ve never played the game, because the amount of context clues provided by a VFYW photo are not enough for me to have a reasoned guess of where the photo was taken, given the global scope. However, I&#8217;ve always thought that the concept of the game was fun, and that it could be made more accessible to the average person by adding context, localizing the game and making it social.</p>

<p>I had initially planned to pursue this as a side project during the Flatiron program. Separately, Jesse, Erin and I were considering doing a project for The Disruptor Cup, which is a NYC hackathon that focuses on emergency preparedness. We had discussed an idea centered on analyzing government spending data in the aftermath of Hurricane Sandy and using the d3 Javascript library for data visualization as the interface for users to interact with the data. However, that idea didn&#8217;t get too far, as just getting up to speed with the d3 library such that we could build complex data visualizations presented a pretty steep learning curve. And given the timing of the Disruptor Cup (early/mid-April) relative to our actual class projects, we decided to punt on the hackathon. We figured that there will always be other hackathons to participate in (and civic data is a particular passion for Jesse and I), and we didn&#8217;t want to get too bogged down such that our in-class work quality would fall.</p>

<p>We explored a few other data visualization ideas for the NYC on Rails presentation. Most of these centered on using the NYC Open Data API to build a data visualization or map. However, we couldn&#8217;t quite figure out what we could build that would be a great learning experience, be a functional product and, most importantly, actually be fun to build. We knew that we wanted to work with data and APIs in some form, do something with maps and build an the end product with a well-designed front end.</p>

<p>In the end, I proposed ViewFinder as our NYC on Rails presentation. Erin and Jesse seemed to warm up to the idea pretty quickly, and we brainstormed a lot of ideas and features that we could build. We ended up agreeing to focus on building out a location-based game, where users could guess where Instagram photos were taken by geographic area in New York. Initially, we had Union Square, Times Square and 30 Rock as our main areas, but those gradually evolved into Midtown Manhattan, Downtown Manhattan and Downtown Brooklyn.</p>

<p><strong>2) Schema, design and gameplay</strong></p>

<p>I was happy that I was able to apply various programming techniques and tools that Avi/Bob/Blake have covered over the past few weeks. The two that come most clearly to mind are metaprogramming and asynchronous background job processing. Metaprogramming is a really useful technique to write methods that write their own methods. They are most applicable to code abstract patterns that vary by the data they accept rather than the actual methods that are applied to the data.</p>

<p>The area where I used metaprogramming most actively was in designing the Instagram API calls and connecting that to the gameplay. For the Instagram API calls, there are a few different ways to access the API - you can search by tag, by geographic location, by user or by popular media. For each of these calls, I needed to filter the data to remove any images that were not geotagged, as non-geotagged photos would be useless in a location guessing game. Thus, in my Instagram wrapper class - which wraps the Instagram gem, which itself directly accesses the Instagram API - I have the following code:</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># instagram_wrapper.rb</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">acts_as_locatable</span><span class="p">(</span><span class="o">*</span><span class="n">queries</span><span class="p">)</span>
</span><span class='line'>  <span class="n">queries</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">query</span><span class="o">|</span>
</span><span class='line'>    <span class="n">define_method</span> <span class="s2">&quot;filter_</span><span class="si">#{</span><span class="n">query</span><span class="si">}</span><span class="s2">&quot;</span> <span class="k">do</span> <span class="o">|</span><span class="n">options</span><span class="o">|</span>
</span><span class='line'>      <span class="n">location_images</span> <span class="o">=</span> <span class="nb">self</span><span class="o">.</span><span class="n">send</span><span class="p">(</span><span class="n">query</span><span class="p">,</span> <span class="n">options</span><span class="p">)</span><span class="o">.</span><span class="n">delete_if</span> <span class="p">{</span> <span class="o">|</span><span class="n">i</span><span class="o">|</span> <span class="n">i</span><span class="o">.</span><span class="n">location</span><span class="o">.</span><span class="n">nil?</span><span class="p">}</span>
</span><span class='line'>      <span class="n">location_images</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">acts_as_locatable</span> <span class="ss">:tag_recent_media</span><span class="p">,</span> <span class="ss">:media_search</span><span class="p">,</span> <span class="ss">:user_recent_media</span><span class="p">,</span> <span class="ss">:media_popular</span><span class="p">,</span> <span class="ss">:user_media_feed</span>
</span></code></pre></td></tr></table></div></figure>


<p>&#8220;acts_as_locatable&#8221; at the end of the above code block is a class method that takes in an arbitrary number of arguments and is executed at runtime. For each argument, it creates a method with the name of the argument prefixed with &#8220;filter_&#8221;. Each of these filter methods strip away the non-geotagged results of any of the Instagram API queries defined by the parameters passed to the acts_as_locatable class method. These methods flow into the photo model, which then takes the results of the filtered Instagram query and saves them to the database.</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">acts_as_instagrammable</span><span class="p">(</span><span class="o">*</span><span class="n">queries</span><span class="p">)</span>
</span><span class='line'>  <span class="n">queries</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">query</span><span class="o">|</span>
</span><span class='line'>    <span class="n">define_singleton_method</span> <span class="s2">&quot;instagram_</span><span class="si">#{</span><span class="n">query</span><span class="si">}</span><span class="s2">&quot;</span> <span class="k">do</span> <span class="o">|</span><span class="n">options</span><span class="o">|</span>
</span><span class='line'>      <span class="n">i</span> <span class="o">=</span> <span class="no">InstagramWrapper</span><span class="o">.</span><span class="n">new</span>
</span><span class='line'>      <span class="n">filtered_images</span> <span class="o">=</span> <span class="n">i</span><span class="o">.</span><span class="n">send</span><span class="p">(</span><span class="s2">&quot;filter_</span><span class="si">#{</span><span class="n">query</span><span class="si">}</span><span class="s2">&quot;</span><span class="p">,</span> <span class="n">options</span><span class="p">)</span>
</span><span class='line'>      <span class="n">filtered_images</span><span class="o">.</span><span class="n">collect</span> <span class="k">do</span> <span class="o">|</span><span class="n">pic</span><span class="o">|</span>
</span><span class='line'>        <span class="no">Photo</span><span class="o">.</span><span class="n">save_instagram_photos</span><span class="p">(</span><span class="n">pic</span><span class="p">)</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">acts_as_instagrammable</span> <span class="ss">:media_search</span><span class="p">,</span> <span class="ss">:tag_recent_media</span><span class="p">,</span> <span class="ss">:media_popular</span><span class="p">,</span> <span class="ss">:user_media_feed</span><span class="p">,</span> <span class="ss">:user_recent_media</span>
</span></code></pre></td></tr></table></div></figure>


<p>Like in the first code block, &#8220;acts_as_instagrammable&#8221; is a class method that creates a new instance of the Instagram wrapper, calls the relevant filtered Instagram API call and saves the photos to the database. This way, I know that whenever I want to get photos from Instagram, I can use their method names (e.g., tag_recent_media) and know that what I ultimately get back are instances of my photo database, which will only include geotagged items.</p>

<p>Finally, the below meta-method is the crux of the gameplay, and queries the database for photos while simultaneously initiating a background processing job via Sidekiq to get more data from Instagram.</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">location_games</span><span class="p">(</span><span class="o">*</span><span class="n">games</span><span class="p">)</span>
</span><span class='line'>  <span class="n">games</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">game</span><span class="o">|</span>
</span><span class='line'>    <span class="n">define_method</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">game</span><span class="si">}</span><span class="s2">&quot;</span> <span class="k">do</span>
</span><span class='line'>      <span class="vi">@game</span> <span class="o">=</span> <span class="n">game</span>
</span><span class='line'>      <span class="vi">@coordinates</span> <span class="o">=</span> <span class="no">LOCATION_GAMES</span><span class="o">[</span><span class="n">game</span><span class="o">.</span><span class="n">to_sym</span><span class="o">][</span><span class="ss">:coordinates</span><span class="o">]</span>
</span><span class='line'>      <span class="n">radius</span> <span class="o">=</span> <span class="no">LOCATION_GAMES</span><span class="o">[</span><span class="n">game</span><span class="o">.</span><span class="n">to_sym</span><span class="o">][</span><span class="ss">:radius</span><span class="o">]</span>
</span><span class='line'>      <span class="n">size</span> <span class="o">=</span> <span class="no">LOCATION_GAMES</span><span class="o">[</span><span class="n">game</span><span class="o">.</span><span class="n">to_sym</span><span class="o">][</span><span class="ss">:size</span><span class="o">]</span>
</span><span class='line'>      <span class="n">user</span> <span class="o">=</span> <span class="n">current_user</span>
</span><span class='line'>      <span class="vi">@photos</span> <span class="o">=</span> <span class="no">Photo</span><span class="o">.</span><span class="n">game_photos_random</span><span class="p">(</span><span class="vi">@coordinates</span><span class="p">,</span> <span class="n">radius</span><span class="p">,</span> <span class="n">user</span><span class="p">,</span> <span class="n">size</span><span class="p">)</span>
</span><span class='line'>      <span class="vi">@photos</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="nb">p</span><span class="o">|</span>
</span><span class='line'>        <span class="nb">p</span><span class="o">.</span><span class="n">locale_lat</span> <span class="o">=</span> <span class="no">LOCATION_GAMES</span><span class="o">[</span><span class="n">game</span><span class="o">.</span><span class="n">to_sym</span><span class="o">][</span><span class="ss">:coordinates</span><span class="o">][</span><span class="mi">0</span><span class="o">]</span>
</span><span class='line'>        <span class="nb">p</span><span class="o">.</span><span class="n">locale_lon</span> <span class="o">=</span> <span class="no">LOCATION_GAMES</span><span class="o">[</span><span class="n">game</span><span class="o">.</span><span class="n">to_sym</span><span class="o">][</span><span class="ss">:coordinates</span><span class="o">][</span><span class="mi">1</span><span class="o">]</span>
</span><span class='line'>        <span class="nb">p</span><span class="o">.</span><span class="n">save</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>      <span class="nb">self</span><span class="o">.</span><span class="n">create_game</span><span class="p">({</span><span class="ss">:game</span> <span class="o">=&gt;</span> <span class="vi">@game</span><span class="p">,</span> <span class="ss">:coordinates</span> <span class="o">=&gt;</span> <span class="vi">@coordinates</span><span class="p">,</span> <span class="ss">:photos</span> <span class="o">=&gt;</span> <span class="vi">@photos</span><span class="p">})</span>
</span><span class='line'>      <span class="vi">@start_photo</span> <span class="o">=</span> <span class="n">session</span><span class="o">[</span><span class="n">game</span><span class="o">][</span><span class="ss">:photos</span><span class="o">].</span><span class="n">empty?</span> <span class="p">?</span> <span class="mi">0</span> <span class="p">:</span> <span class="no">Photo</span><span class="o">.</span><span class="n">first_unguessed_photo</span><span class="p">(</span><span class="n">session</span><span class="o">[</span><span class="n">game</span><span class="o">][</span><span class="ss">:photos</span><span class="o">]</span><span class="p">,</span> <span class="n">current_user</span><span class="p">)</span>
</span><span class='line'>      <span class="vi">@guessed_count</span> <span class="o">=</span> <span class="vi">@photos</span><span class="o">.</span><span class="n">count</span> <span class="p">{</span> <span class="o">|</span><span class="nb">p</span><span class="o">|</span> <span class="nb">p</span><span class="o">.</span><span class="n">guessed_by?</span><span class="p">(</span><span class="n">current_user</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'>      <span class="no">InstagramWorker</span><span class="o">.</span><span class="n">perform_async</span><span class="p">(</span><span class="vi">@coordinates</span><span class="p">)</span>
</span><span class='line'>      <span class="n">render</span> <span class="s2">&quot;index&quot;</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">location_games</span> <span class="ss">:downtown</span><span class="p">,</span> <span class="ss">:midtown</span><span class="p">,</span> <span class="ss">:downtown_brooklyn</span> <span class="c1">#, :world_trade, :dumbo</span>
</span></code></pre></td></tr></table></div></figure>


<p>The above block does a number of things, and is admittedly probably a decent candidate for additional refactoring. This meta-method creates a method for each game that is created. Initially, we just defined three games in a hash (not shown here) called LOCATION_GAMES, but eventually we think it would be cool for users to create their own games. For example, someone who is really into architecture or beautiful aboreal landscapes can tag photos on Instagram with #viewfinder and another tag and basically create themed games. Additionally, we imagine that this game can be replicated across most any geography, so we wanted to have a flexible design where you could quickly define the parameters of a game and have that flow into the application. Currently, games are defined within the context of a photo, but I think we are looking to break out games into their own game model and make ViewFinder more solidly object-oriented.</p>

<p>Anyways, the above code is activated when a user clicks on a location-based game on the ViewFinder landing page. For each game, the method will determine the game parameters (i.e., coordinates, radius and photo set size), go to the database and get a random set of photos that have not been guesesd by the logged in user, are tagged with #viewfinder or #vfyw and are within the defined radius of the coordinates. Simultaneously, the method will set off a background job to get more data from Instagram within the location parameters of the game. This way, as more people play and demand for a given game scales, the application should theoretically make more API calls and thus get more real-time data from Instagram, all without impacting the user experience as the arduous task of accessing the Instagram API and saving photos to the database is disassociated from the photos that are loaded on the front-end.</p>

<p>There are definitely many areas where we can do additional refactoring and clean up the code. One place specifically where I think we can do better is in using view helper methods more actively, as well as moving more logic to our controllers. With the NYC on Rails presentation coming up on Thursday, I&#8217;ll admit that we took a few shortcuts in the middle of the week just to get stuff working. In the next few weeks, I hope to go back through the code from start to finish and refactor extensively.</p>

<p>In terms of the front-end design of the application, we wanted to make the user interface highly visual and intuitive for new users to quickly get up to speed on the game. We went through several iterations of design that used various photo carousel options. We eventually rotated back to Twitter Bootstrap&#8217;s carousel, and I&#8217;m pretty happy with how the design ended up.</p>

<p><strong>3) Technical challenges</strong></p>

<p>Probably the biggest technical challenge that we faced was in figuring out how to use the Google Maps API to drag and drop a map marker that then posts to our guesses controller to create a photo location guess. We had to delve deeper into Javascript than we had previously in class, and we also learned how to use AJAX in the process. The map that is displayed when a user decides to guess on a photo is centered on the game that the user is playing. When a user decides to play the Midtown game, for example, the photos that get loaded into the game are tagged with the coordinates of the game origin. This way, when the guess map is loaded, the map is centered and zoomed in accordingly.</p>

<p>After figuring out how to load the map correctly, we needed to be able to post the coordinates of the map marker to create a guess. To do this, we used Javascript to recalculate the map marker coordinates whenever the map changed (the map marker automatically moves to the center of the map) and AJAX to create a guess with the respective coordinates when the user pressed &#8220;GUESS&#8221;. Then, when the next page is loaded (i.e., the guesses show page), the map contains a marker for each guess that has been made on that photo. Figuring out how to make Rails and Javascript play nice in terms of transferring data between the two was challenging, but now that we were able to do that successfully, it&#8217;s a great feeling to know that I now have that skill in my toolbelt.</p>

<p>Another challenge we faced was working with Instagram authentication and enabling users to sign-in via Instagram and display their user feed and friend feeds. This challenge tied in with the difficulty of designing a clean, intuitive user flow - from choosing a game all the way to viewing the results after making a guess. The first thing I tried to do actually when working on ViewFinder was to try and set up Instagram authentication. I used the Omniauth gem to do this, but it was a frustrating experience. I learned eventually that I was over-programming, in a sense, and needed to just let Omniauth take care of the authentication process. Building an intuitive user experience with Instagram authentication is still something we&#8217;re working on, and I think that making the gameplay more object-oriented will help in that regard.</p>

<p><strong>4) Future extensions</strong></p>

<p>I think it would be great to enable users to create their own games. Eventually, I&#8217;d like it for people passionate about sculptures, for example, to be able to take pictures across the globe and tag their pics with #sculpture and #viewfinder and have the application pick that up for their followers to guess where they&#8217;ve been. In general, I like the notion of themed games as a way to enable people that are passionate about whatever to better express that passion.</p>

<p>Also, it would be really cool if users could play timed games on ViewFinder, or challenge their friends to see who can best guess a set of 10 photos in a fixed amount of time. Another feature that I&#8217;d like to work on is to build out the analytics of the game and tap into the competitive nature of people. I&#8217;m a bit of a data analytics geek, and it would be super cool if we could use user data from the game to create cool data visualizations.</p>

<p>On the technical side, there is a certain amount of technical debt that got built up with the rush to deploy before the NYC on Rails presentation. I don&#8217;t think the debt is insurmountable, but the app can definitely benefit from some refactoring. Using view helpers more effectively, moving some code into modules for shared functionality and making gameplay more object-oriented are all changes that I think would make the codebase cleaner and the user experience more fluid.</p>

<p>I definitely would like to continue developing ViewFinder and building out new features. I&#8217;ve enjoyed the process of designing the product, working in a team and writing code. There&#8217;s an undefinable joy in having an idea and being able to execute on that idea and see the results. Like many creative ventures, coding is hard enough so that its always challenging, but its also accessible and progress is possible with concerted effort. And to steal a phrase from Avi, coding is all about taking complexity and delivering simplicity. A simple, sensible user interface hides the complexity within a codebase, and now being able to understand how that complexity creates simplicity has been fantastic.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Agile Product Development (Flatiron - Week 7)]]></title>
    <link href="http://eewang.github.com/blog/2013/03/23/flatiron-week-7/"/>
    <updated>2013-03-23T22:56:00-04:00</updated>
    <id>http://eewang.github.com/blog/2013/03/23/flatiron-week-7</id>
    <content type="html"><![CDATA[<p>We spent this past week focused mostly on getting our group projects off the ground. We didn&#8217;t really have lecture this week; each day was spent pair programming and building our applications using agile development best practices. My group, which consists of myself, <a href="http://janeeats.github.com" target="_blank">Jane Vora</a>, <a href="http://anthonywijnen.com" target="_blank">Anthony Wijnen</a> and <a href="http://ei-lene.github.com" target="_blank">Ei-lene Heng</a>, is building an app to structure and streamline the process of asking questions in class during group work. The current process of just raising your hand and hoping that a teacher is free is pretty inefficient and awards the lucky students rather than students who have an especially urgent question or have been waiting a long time.</p>

<!--more-->


<p>Since this was the first week at Flatiron devoted to building applications, I learned a lot about how to work effectively in a group and maintain an agile approach to building web products. Here are a few lessons I learned this past week:</p>

<p><strong>1) Design a good group workflow that holds people accountable</strong></p>

<p>Our team this past week developed a pretty solid workflow. Each day, we pair programming with a different teammate. This enabled us to get an understanding of how each person codes, while switching roles periodically such that whomever was coding in the morning became the person giving instructions in the afternoon. Also, we established a rule such that every code commit to Github must be to a feature branch with a pull request to the master branch. This way, the team submitting the pull request would have to walk the other pair through the changes so that the other pair could ask questions, understand the code changes and ultimately be responsible for approving the request.</p>

<p>I think this is an effective group workflow because it forces developers to explain and clearly articulate the purpose of the code they wrote. It helps the entire team spot patterns and refactoring opportunities, while holding individual team members accountable for the code they write. Oftentimes in the process of reviewing the other pair&#8217;s pull request, we would find opportunities to more efficiently merge code or enter into a discussion of how a feature will actually behave. While I&#8217;ve come to appreciate the Git/Github process and workflow (after much wall head-banging, no doubt), it doesn&#8217;t replace actual in-person communication, which is how features are flushed out and errors spotted.</p>

<p><strong>2) Explore rabbit holes but don&#8217;t dive in</strong></p>

<p>Avi often talks about the notion of a programming &#8220;rabbit hole&#8221; - a non-core path in building an application that lead to great frustration without actual productive learning opportunities. These are often littered throughout the application building process - using gems, for example, can become a rabbit hole when trying to properly configure a gem or customize its functionality in a certain way. I don&#8217;t think rabbit holes should be avoided entirely; often, you don&#8217;t know something is a rabbit hole until you&#8217;ve started going down it. Rather, what&#8217;s more important is to have discipline and perception in recognizing what is a rabbit hole, knowing how far to go down it and establishing a clear path out.</p>

<p>An example of a rabbit hole I encountered this past week was in using <a href="https://github.com/intridea/omniauth-github" target="_blank">OmniAuth for Github</a>. OmniAuth enables applications to permit users to authenticate using third-party applications, like Facebook, Twitter or Github. This allows developers to build off the Facebook platform, for example, and extend its functionality using Facebook data. OmniAuth is an incredibly useful tool and streamlines login/logout functionality shared by nearly every application.</p>

<p>However, OmniAuth does its magic by working in the Rack middleware in Rails, which is an area that I don&#8217;t feel particularly strong in. Also, after learning authentication just over a week ago, we&#8217;ve been working mostly on building our own simple authentication systems rather than applying a third-party auth system. Needless to say, trying to implement OmniAuth for Github this past week was a challenge. I had to improve my understanding of authentication generally while also implementing the OmniAuth gem and exploring the Github API. It felt a bit overwhelming. As I tried to implement OmniAuth for Github, error messages kept popping up and it seemed like I was going nowhere with it. I had come across a rabbit hole, at least for the moment. Eventually, Github integration will be a necessary component of our application (so that users can create gists and share code snippets when asking questions through the app), but its not necessarily a core feature. By putting off the implementation of OmniAuth for Github until I have a better understanding of OmniAuth generally (i.e., this week, hopefully), I can be more efficient in building my app by focusing on the MVP functionality.</p>

<p>Knowing when exploration turns into a rabbit hole and being disciplined about turning back is hard. My natural tendency is to just plow through and try and solve the problem, regardless of how much time I spent on it and even if taking a step back and learning more about the underlying problem before is the more efficient strategy in the long-run. You get that nagging feeling that you just can&#8217;t step away from the code, even if you know you should stop going down the rabbit hole. That&#8217;s how I&#8217;ll end up coding late into the night, by trying to climb out of a rabbit hole - an exercise in futility at 3 am in the morning.</p>

<p>I&#8217;ve come to realize that its better to just take a step back, calm down, re-evaluate and pick it back up in the morning. A good night&#8217;s sleep helps refocus the mind. But having that discipline to stop working is often as hard to develop as the motivation to begin work.</p>

<p><strong>3) Embrace the uncertainty that comes with agile development</strong></p>

<p>With this past week being our first extended experience with an agile development process, I learned not to be too beholden to individual features or processes, but rather to maintain flexibility and get comfortable with not knowing. Early on in the development process, not only do you not know what the end product will look like, you don&#8217;t even know what you don&#8217;t know about the obstacles, challenges and opportunities along the way. Thus, instead of writing out long, detailed specs about every feature of the product, its better to work iteratively with tight, short feedback loops to boost software responsiveness.</p>

<p>In our daily work, we&#8217;ve tried to work in short sprints using <a href="http://www.trello.com" target="_blank">Trello</a> as our project management tool. Checking in regularly with the other team also enabled us to keep moving in the right direction while avoiding rabbit holes. I appreciate the iterative process of software development, as it emphasizes flexibility, testing and product feedback rather than grand design and extensive planning before actual coding. This next week we&#8217;ll go back to splitting up the day between lecture and groupwork; I&#8217;m eager to get into some more advanced Rails topics that we can hopefully apply immediately to our projects.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to hack Lollapalooza and still not get tickets]]></title>
    <link href="http://eewang.github.com/blog/2013/03/21/how-to-hack-lollapalooza-and-still-not-get-tickets/"/>
    <updated>2013-03-21T17:50:00-04:00</updated>
    <id>http://eewang.github.com/blog/2013/03/21/how-to-hack-lollapalooza-and-still-not-get-tickets</id>
    <content type="html"><![CDATA[<p>As a Chicago native (and by &#8220;native&#8221; I mean a resident of a leafy suburb about 45 minutes away), my secret shame is that I&#8217;ve never been to <a href="http://www.lollapalooza.com" target="_blank">Lollapalooza</a>. Whenever I talk to people not from Chicago about Chicago, they always seem to mention that one time they went to Lolla and had a blast rocking out all night along Lake Shore Drive just a stone&#8217;s throw away from the Sears (that&#8217;s right, Sears) Tower. Conversations like these tend to end awkwardly when I can&#8217;t match their enthusiasm for the premier music festival in my home city.</p>

<!--more-->


<p>Thus, I was pretty excited when I got an e-mail this week from the Lollapalooza organizing people that tickets would go on sale shortly for the August festival. Specifically, &#8220;Souvenir&#8221; tickets for $75 would go on sale at some unannounced time this week. Early bird tickets go for $200 and regular tickets for $225, so I definitely wanted to try and get steep discount by snagging a Souvenir ticket. However, I didn&#8217;t want to have to constantly be refreshing the Lollapalooza site every moment of the day just to get a chance to buy the discount tickets. So, I figured I&#8217;d put to good use my developer skills and hack together a Ruby script that would monitor the Lollapalooza site for me and notify me if anything related to the Souvenir tickets changed.</p>

<p>I wanted this script to basically do three things:</p>

<p>  1) Know what elements on the Lollapalooza site were likely to change<br>
  2) Check the site on a frequent basis<br>
  3) Contact me when the site changes per #1<br></p>

<p>In order to do this, I used Nokogiri to scrape the Lollapalooza site, the Whenever gem to monitor the site and the Twilio API to text me if something changed. My first step was to use Nokogiri and the Chrome Inspector to examine the structure of the Lolla home page. I toyed around with a number of Nokogiri methods to try and pinpoint the exact location of the words &#8220;SOON&#8221; and &#8220;Souvenir&#8221;, as those were the main keywords that identified the sale of discounted tickets. I assumed that the moment Souvenir tickets would start selling on the site, either the location of the &#8220;Souvenir&#8221; text would move to a more prominent position on the page or the accompanying word &#8220;SOON&#8221; would change, since &#8220;SOON&#8221; as an indicator of when tickets would go on sale would become irrelevant once they actually started selling tickets. Finally, I assumed that the text itself would change into a link to the ticket purchase site once tickets went on sale.</p>

<p>Taking these three assumptions - that the position of &#8220;SOON&#8221; or &#8220;Souvenir&#8221; would change, or the entire element would be converted into a link - as my event triggers, I used Nokogiri to first determine where the current text positions of these words were in the entirety of the HTML using the following code:</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># lolla.rb </span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">Lolla</span>
</span><span class='line'>
</span><span class='line'>  <span class="vc">@@source</span> <span class="o">=</span> <span class="s2">&quot;http://www.lollapalooza.com&quot;</span>
</span><span class='line'>
</span><span class='line'>  <span class="vc">@@doc</span> <span class="o">=</span> <span class="ss">Nokogiri</span><span class="p">:</span><span class="ss">:XML</span><span class="p">(</span><span class="nb">open</span><span class="p">(</span><span class="vc">@@source</span><span class="p">))</span>
</span><span class='line'>  <span class="c1"># ...</span>
</span><span class='line'>  <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">search_index</span><span class="p">(</span><span class="n">string</span><span class="p">)</span>
</span><span class='line'>    <span class="vc">@@doc</span><span class="o">.</span><span class="n">text</span><span class="o">.</span><span class="n">index</span><span class="p">(</span><span class="n">string</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>  <span class="c1"># ...</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>This returned 764 and 743 as the array index positions where &#8220;SOON&#8221; and &#8220;Souvenir&#8221; began if the entirety of the site&#8217;s text was strung together. So, I set these values as the values that I would check the site against periodically, so that if the words changed position (or disappeared entirely), that would mean that discounted tickets were available for purchase. I recognize that this is a pretty hairpin trigger, as in if a single letter was added to the text before the two keywords I was targeting, this would shoot off a text message to me. However, I figured that I&#8217;d rather have the script be too sensitive and notify me to check the site too often than to miss an opportunity to buy a ticket.</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># lolla.rb</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">Lolla</span>
</span><span class='line'>
</span><span class='line'>  <span class="no">INDEX_CHECK</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>    <span class="ss">:SOON</span> <span class="o">=&gt;</span> <span class="mi">764</span><span class="p">,</span>
</span><span class='line'>    <span class="ss">:Souvenir</span> <span class="o">=&gt;</span> <span class="mi">743</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="c1"># ...</span>
</span><span class='line'>  <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">index</span><span class="p">(</span><span class="n">string</span><span class="p">)</span>
</span><span class='line'>    <span class="no">Lolla</span><span class="o">.</span><span class="n">index_check</span><span class="o">[</span><span class="n">string</span><span class="o">.</span><span class="n">to_sym</span><span class="o">]</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">index_check</span>
</span><span class='line'>    <span class="no">INDEX_CHECK</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>  <span class="c1"># ...</span>
</span><span class='line'>  <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">index_changed?</span><span class="p">(</span><span class="n">string</span><span class="p">)</span>
</span><span class='line'>    <span class="k">if</span> <span class="no">Lolla</span><span class="o">.</span><span class="n">search_index</span><span class="p">(</span><span class="n">string</span><span class="p">)</span> <span class="o">!=</span> <span class="no">Lolla</span><span class="o">.</span><span class="n">index</span><span class="p">(</span><span class="n">string</span><span class="p">)</span>
</span><span class='line'>      <span class="k">return</span> <span class="kp">true</span>
</span><span class='line'>    <span class="k">else</span>
</span><span class='line'>      <span class="k">return</span> <span class="kp">false</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>  <span class="c1"># ...</span>
</span><span class='line'>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Then, I examined the structure of the element that encapsulated the Souvenir ticket indicator. I wrote a few methods that would check if an anchor tag or href attribute was added to the parent span. This way, if the organizers added a link to buy the tickets but for some reason forgot to change text, the notification would still trigger.</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># lolla.rb</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">Lolla</span>
</span><span class='line'>
</span><span class='line'>  <span class="vc">@@lolla_node</span> <span class="o">=</span> <span class="vc">@@doc</span><span class="o">.</span><span class="n">children</span><span class="o">[</span><span class="mi">1</span><span class="o">].</span><span class="n">children</span><span class="o">[</span><span class="mi">3</span><span class="o">].</span><span class="n">children</span><span class="o">[</span><span class="mi">1</span><span class="o">].</span><span class="n">children</span><span class="o">[</span><span class="mi">1</span><span class="o">].</span><span class="n">children</span><span class="o">[</span><span class="mi">7</span><span class="o">].</span><span class="n">children</span><span class="o">[</span><span class="mi">0</span><span class="o">].</span><span class="n">children</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span>
</span><span class='line'>  <span class="c1"># ...</span>
</span><span class='line'>  <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">node_names</span>
</span><span class='line'>    <span class="n">children_names</span> <span class="o">=</span> <span class="o">[]</span>
</span><span class='line'>    <span class="no">Lolla</span><span class="o">.</span><span class="n">check_link</span><span class="o">.</span><span class="n">children</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">node</span><span class="o">|</span>
</span><span class='line'>      <span class="n">children_names</span> <span class="o">&lt;&lt;</span> <span class="n">node</span><span class="o">.</span><span class="n">name</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>    <span class="n">children_names</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>  <span class="c1"># ...</span>
</span><span class='line'>  <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">node_contains_link?</span>
</span><span class='line'>    <span class="k">if</span> <span class="no">Lolla</span><span class="o">.</span><span class="n">node_names</span><span class="o">.</span><span class="n">include?</span><span class="p">(</span><span class="s2">&quot;a&quot;</span><span class="p">)</span> <span class="o">||</span> <span class="no">Lolla</span><span class="o">.</span><span class="n">node_names</span><span class="o">.</span><span class="n">include?</span><span class="p">(</span><span class="s2">&quot;href&quot;</span><span class="p">)</span>
</span><span class='line'>      <span class="k">return</span> <span class="kp">true</span>
</span><span class='line'>    <span class="k">else</span>
</span><span class='line'>      <span class="k">return</span> <span class="kp">false</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Finally, I put it all together with the Twilio API and some control flow so that the script would check each of the three conditions sequentially and if they changed from their initial state, it would send me an SMS text message. If the condition didn&#8217;t change, it would print to a log notifying me that there were no changes to report along with a timestamp so that I could confirm when the script ran successfully.</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># lolla.rb</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">Lolla</span>
</span><span class='line'>  <span class="c1"># ...</span>
</span><span class='line'>  <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">check</span>
</span><span class='line'>    <span class="k">if</span> <span class="no">Lolla</span><span class="o">.</span><span class="n">index_changed?</span><span class="p">(</span><span class="s2">&quot;SOON&quot;</span><span class="p">)</span>
</span><span class='line'>      <span class="no">Lolla</span><span class="o">.</span><span class="n">notify</span><span class="p">(</span><span class="s2">&quot;The placement of &#39;SOON&#39; changed on the Lollapalooza site!&quot;</span><span class="p">)</span>
</span><span class='line'>      <span class="nb">puts</span> <span class="s2">&quot;Site changed! &#39;SOON&#39; was at </span><span class="si">#{</span><span class="no">Lolla</span><span class="o">.</span><span class="n">index_check</span><span class="o">[</span><span class="ss">:SOON</span><span class="o">]</span><span class="si">}</span><span class="s2"> before, now at </span><span class="si">#{</span><span class="no">Lolla</span><span class="o">.</span><span class="n">search_index</span><span class="p">(</span><span class="s2">&quot;SOON&quot;</span><span class="p">)</span><span class="si">}</span><span class="s2">.&quot;</span>
</span><span class='line'>    <span class="k">elsif</span> <span class="no">Lolla</span><span class="o">.</span><span class="n">index_changed?</span><span class="p">(</span><span class="s2">&quot;Souvenir&quot;</span><span class="p">)</span>
</span><span class='line'>      <span class="no">Lolla</span><span class="o">.</span><span class="n">notify</span><span class="p">(</span><span class="s2">&quot;The placement of &#39;Souvenir&#39; changed on the Lollapalooza site!&quot;</span><span class="p">)</span>
</span><span class='line'>      <span class="nb">puts</span> <span class="s2">&quot;Site changed! &#39;SOON&#39; was at </span><span class="si">#{</span><span class="no">Lolla</span><span class="o">.</span><span class="n">index_check</span><span class="o">[</span><span class="ss">:Souvenir</span><span class="o">]</span><span class="si">}</span><span class="s2"> before, now at </span><span class="si">#{</span><span class="no">Lolla</span><span class="o">.</span><span class="n">search_index</span><span class="p">(</span><span class="s2">&quot;Souvenir&quot;</span><span class="p">)</span><span class="si">}</span><span class="s2">.&quot;</span>
</span><span class='line'>    <span class="k">elsif</span> <span class="no">Lolla</span><span class="o">.</span><span class="n">node_contains_link?</span>
</span><span class='line'>      <span class="no">Lolla</span><span class="o">.</span><span class="n">notify</span><span class="p">(</span><span class="s2">&quot;A link has been added to the node on the Lollapalooza site!&quot;</span><span class="p">)</span>
</span><span class='line'>      <span class="nb">puts</span> <span class="s2">&quot;Site changed!&quot;</span>
</span><span class='line'>    <span class="k">else</span>
</span><span class='line'>      <span class="nb">puts</span> <span class="s2">&quot;Checked at </span><span class="si">#{</span><span class="no">DateTime</span><span class="o">.</span><span class="n">now</span><span class="si">}</span><span class="s2"> - No changes to report&quot;</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Here is the entire script:</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># lolla.rb</span>
</span><span class='line'>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;twilio-ruby&#39;</span>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;nokogiri&#39;</span>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;open-uri&#39;</span>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;pry&#39;</span>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;date&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># =&gt; Notify in the event of the following:</span>
</span><span class='line'>  <span class="c1"># =&gt; Initial location of &quot;Souvenir&quot; changes</span>
</span><span class='line'>  <span class="c1"># =&gt; Initial location of &quot;SOON&quot; changes</span>
</span><span class='line'>  <span class="c1"># =&gt; Addition of a link to the &quot;Souvenir&quot; text</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">Lolla</span>
</span><span class='line'>
</span><span class='line'>  <span class="vc">@@account_sid</span> <span class="o">=</span> <span class="s1">&#39;################################&#39;</span>
</span><span class='line'>  <span class="vc">@@auth_token</span> <span class="o">=</span> <span class="s1">&#39;##############################&#39;</span>
</span><span class='line'>  <span class="vc">@@client</span> <span class="o">=</span> <span class="ss">Twilio</span><span class="p">:</span><span class="ss">:REST</span><span class="o">::</span><span class="no">Client</span><span class="o">.</span><span class="n">new</span> <span class="vc">@@account_sid</span><span class="p">,</span> <span class="vc">@@auth_token</span>
</span><span class='line'>
</span><span class='line'>  <span class="vc">@@source</span> <span class="o">=</span> <span class="s2">&quot;http://www.lollapalooza.com&quot;</span>
</span><span class='line'>
</span><span class='line'>  <span class="vc">@@doc</span> <span class="o">=</span> <span class="ss">Nokogiri</span><span class="p">:</span><span class="ss">:XML</span><span class="p">(</span><span class="nb">open</span><span class="p">(</span><span class="vc">@@source</span><span class="p">))</span>
</span><span class='line'>
</span><span class='line'>  <span class="vc">@@lolla_node</span> <span class="o">=</span> <span class="vc">@@doc</span><span class="o">.</span><span class="n">children</span><span class="o">[</span><span class="mi">1</span><span class="o">].</span><span class="n">children</span><span class="o">[</span><span class="mi">3</span><span class="o">].</span><span class="n">children</span><span class="o">[</span><span class="mi">1</span><span class="o">].</span><span class="n">children</span><span class="o">[</span><span class="mi">1</span><span class="o">].</span><span class="n">children</span><span class="o">[</span><span class="mi">7</span><span class="o">].</span><span class="n">children</span><span class="o">[</span><span class="mi">0</span><span class="o">].</span><span class="n">children</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span>
</span><span class='line'>
</span><span class='line'>  <span class="no">INDEX_CHECK</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>    <span class="ss">:SOON</span> <span class="o">=&gt;</span> <span class="mi">764</span><span class="p">,</span>
</span><span class='line'>    <span class="ss">:Souvenir</span> <span class="o">=&gt;</span> <span class="mi">743</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">document</span>
</span><span class='line'>    <span class="vc">@@doc</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">search_index</span><span class="p">(</span><span class="n">string</span><span class="p">)</span>
</span><span class='line'>    <span class="vc">@@doc</span><span class="o">.</span><span class="n">text</span><span class="o">.</span><span class="n">index</span><span class="p">(</span><span class="n">string</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">index_changed?</span><span class="p">(</span><span class="n">string</span><span class="p">)</span>
</span><span class='line'>    <span class="k">if</span> <span class="no">Lolla</span><span class="o">.</span><span class="n">search_index</span><span class="p">(</span><span class="n">string</span><span class="p">)</span> <span class="o">!=</span> <span class="no">Lolla</span><span class="o">.</span><span class="n">index</span><span class="p">(</span><span class="n">string</span><span class="p">)</span>
</span><span class='line'>      <span class="k">return</span> <span class="kp">true</span>
</span><span class='line'>    <span class="k">else</span>
</span><span class='line'>      <span class="k">return</span> <span class="kp">false</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">index</span><span class="p">(</span><span class="n">string</span><span class="p">)</span>
</span><span class='line'>    <span class="no">Lolla</span><span class="o">.</span><span class="n">index_check</span><span class="o">[</span><span class="n">string</span><span class="o">.</span><span class="n">to_sym</span><span class="o">]</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">index_check</span>
</span><span class='line'>    <span class="no">INDEX_CHECK</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">notify</span><span class="p">(</span><span class="n">msg</span><span class="p">)</span>
</span><span class='line'>    <span class="n">message</span> <span class="o">=</span> <span class="vc">@@client</span><span class="o">.</span><span class="n">account</span><span class="o">.</span><span class="n">sms</span><span class="o">.</span><span class="n">messages</span><span class="o">.</span><span class="n">create</span><span class="p">(</span><span class="ss">:body</span> <span class="o">=&gt;</span> <span class="n">msg</span><span class="p">,</span>
</span><span class='line'>        <span class="ss">:to</span> <span class="o">=&gt;</span> <span class="s2">&quot;+16303791842&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="ss">:from</span> <span class="o">=&gt;</span> <span class="s2">&quot;+17082219589&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;Message sent!&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">check_link</span>
</span><span class='line'>    <span class="vc">@@lolla_node</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">node_names</span>
</span><span class='line'>    <span class="n">children_names</span> <span class="o">=</span> <span class="o">[]</span>
</span><span class='line'>    <span class="no">Lolla</span><span class="o">.</span><span class="n">check_link</span><span class="o">.</span><span class="n">children</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">node</span><span class="o">|</span>
</span><span class='line'>      <span class="n">children_names</span> <span class="o">&lt;&lt;</span> <span class="n">node</span><span class="o">.</span><span class="n">name</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>    <span class="n">children_names</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">node_contains_link?</span>
</span><span class='line'>    <span class="k">if</span> <span class="no">Lolla</span><span class="o">.</span><span class="n">node_names</span><span class="o">.</span><span class="n">include?</span><span class="p">(</span><span class="s2">&quot;a&quot;</span><span class="p">)</span> <span class="o">||</span> <span class="no">Lolla</span><span class="o">.</span><span class="n">node_names</span><span class="o">.</span><span class="n">include?</span><span class="p">(</span><span class="s2">&quot;href&quot;</span><span class="p">)</span>
</span><span class='line'>      <span class="k">return</span> <span class="kp">true</span>
</span><span class='line'>    <span class="k">else</span>
</span><span class='line'>      <span class="k">return</span> <span class="kp">false</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">check</span>
</span><span class='line'>    <span class="k">if</span> <span class="no">Lolla</span><span class="o">.</span><span class="n">index_changed?</span><span class="p">(</span><span class="s2">&quot;SOON&quot;</span><span class="p">)</span>
</span><span class='line'>      <span class="no">Lolla</span><span class="o">.</span><span class="n">notify</span><span class="p">(</span><span class="s2">&quot;The placement of &#39;SOON&#39; changed on the Lollapalooza site!&quot;</span><span class="p">)</span>
</span><span class='line'>      <span class="nb">puts</span> <span class="s2">&quot;Site changed! &#39;SOON&#39; was at </span><span class="si">#{</span><span class="no">Lolla</span><span class="o">.</span><span class="n">index_check</span><span class="o">[</span><span class="ss">:SOON</span><span class="o">]</span><span class="si">}</span><span class="s2"> before, now at </span><span class="si">#{</span><span class="no">Lolla</span><span class="o">.</span><span class="n">search_index</span><span class="p">(</span><span class="s2">&quot;SOON&quot;</span><span class="p">)</span><span class="si">}</span><span class="s2">.&quot;</span>
</span><span class='line'>    <span class="k">elsif</span> <span class="no">Lolla</span><span class="o">.</span><span class="n">index_changed?</span><span class="p">(</span><span class="s2">&quot;Souvenir&quot;</span><span class="p">)</span>
</span><span class='line'>      <span class="no">Lolla</span><span class="o">.</span><span class="n">notify</span><span class="p">(</span><span class="s2">&quot;The placement of &#39;Souvenir&#39; changed on the Lollapalooza site!&quot;</span><span class="p">)</span>
</span><span class='line'>      <span class="nb">puts</span> <span class="s2">&quot;Site changed! &#39;SOON&#39; was at </span><span class="si">#{</span><span class="no">Lolla</span><span class="o">.</span><span class="n">index_check</span><span class="o">[</span><span class="ss">:Souvenir</span><span class="o">]</span><span class="si">}</span><span class="s2"> before, now at </span><span class="si">#{</span><span class="no">Lolla</span><span class="o">.</span><span class="n">search_index</span><span class="p">(</span><span class="s2">&quot;Souvenir&quot;</span><span class="p">)</span><span class="si">}</span><span class="s2">.&quot;</span>
</span><span class='line'>    <span class="k">elsif</span> <span class="no">Lolla</span><span class="o">.</span><span class="n">node_contains_link?</span>
</span><span class='line'>      <span class="no">Lolla</span><span class="o">.</span><span class="n">notify</span><span class="p">(</span><span class="s2">&quot;A link has been added to the node on the Lollapalooza site!&quot;</span><span class="p">)</span>
</span><span class='line'>      <span class="nb">puts</span> <span class="s2">&quot;Site changed!&quot;</span>
</span><span class='line'>    <span class="k">else</span>
</span><span class='line'>      <span class="nb">puts</span> <span class="s2">&quot;Checked at </span><span class="si">#{</span><span class="no">DateTime</span><span class="o">.</span><span class="n">now</span><span class="si">}</span><span class="s2"> - No changes to report&quot;</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>With the script completed and working (I tested it first with my own blog - setting initial position values via Nokogiri then changing a few words and confirming that I got a text message from Twilio notifying me of the change), I then moved on to scheduling the task using Whenever. In case you don&#8217;t know what Whenever is, it&#8217;s a great, easy-to-use gem to schedule tasks (see <a href="http://eewang.github.com/blog/2013/03/12/how-to-schedule-tasks-using-whenever/" target="_blank">this blog post</a> for a more detailed explanation). All I did was create a rake task to run the &#8220;check&#8221; class method every minute and add the rake task to my cron task list using the schedule.rb file.</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># lolla.rake</span>
</span><span class='line'>
</span><span class='line'><span class="n">namespace</span> <span class="ss">:lolla</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">desc</span> <span class="s2">&quot;Check Lollapalooza site&quot;</span>
</span><span class='line'>  <span class="n">task</span> <span class="ss">:check</span> <span class="o">=&gt;</span> <span class="ss">:environment</span> <span class="k">do</span>
</span><span class='line'>    <span class="no">Lolla</span><span class="o">.</span><span class="n">check</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># schedule.rb</span>
</span><span class='line'>
</span><span class='line'><span class="n">set</span> <span class="ss">:environment</span><span class="p">,</span> <span class="s2">&quot;development&quot;</span>
</span><span class='line'><span class="n">set</span> <span class="ss">:output</span><span class="p">,</span> <span class="p">{</span><span class="ss">:error</span> <span class="o">=&gt;</span> <span class="s2">&quot;log/cron_error_log.log&quot;</span><span class="p">,</span> <span class="ss">:standard</span> <span class="o">=&gt;</span> <span class="s2">&quot;log/cron_log.log&quot;</span><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">every</span> <span class="mi">1</span><span class="o">.</span><span class="n">minute</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">rake</span> <span class="s2">&quot;lolla:check&quot;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>And that was it! After setting up the script to run every minute, I just needed to keep my computer connected to the Internet and check the log periodically to confirm that it was running. There were a few timeout errors here and there, but for the most part, the script ran successfully every minute. Also, the script threw one false positive around 12:15 pm on Wednesday, which sent me scrambling to the site to buy tickets, only to find that in actuality, the script&#8217;s notification functionality was triggered by a minor change in the position of &#8220;SOON&#8221; and &#8220;Souvenir&#8221; on the site.</p>

<p>Writing a script to try and buy discounted tickets was a bittersweet experience. On the one hand, the script worked perfectly and notified me right when the site changed. On the other hand, I wasn&#8217;t able to get tickets. I&#8217;ll let these three screenshots and timestamps tell the story.</p>

<p><strong>5:34 pm</strong></p>

<p><img src="http://eewang.github.com/images/post_images/lollapalooza/lolla_before_2.png"></img></p>

<p><strong>5:35 pm</strong></p>

<p><img src="http://eewang.github.com/images/post_images/lollapalooza/lolla_frontgate.png"></img></p>

<p><strong>5:36 pm</strong></p>

<p><img src="http://eewang.github.com/images/post_images/lollapalooza/lolla_after_2.png"></img></p>

<p>The lesson here is that tickets sell out super fast. Next time I try and get an edge in buying tickets, I&#8217;ll try to optimize more for performance and maybe try and find a way to decrease the periodicity of my task to less than a minute, although I&#8217;d probably have more timeout errors and probably piss off the Lollapalooza system admins in the process. Also, since I wrote this script as quickly as I could (since the tickets could post at any minute), I could have also refactored and cleaned-up my code a bit more.</p>

<p>I&#8217;ve posted below my full scrape log. You&#8217;ll notice that there were some moments when the scrape wasn&#8217;t running - namely when my computer was turned off or I was not connected to the Internet. Despite the one false alarm, the script performed its task admirably - it notified me right when Souvenir tickets went on sale, at some point between 5:33 pm and  5:34 pm today. Unfortunately, my trigger finger was not fast enough, and even though I was able to click on the link to buy tickets (i.e., before they sold out), after Front Gate Tickets processed my request there were no more tickets remaining.</p>

<p>Oh well, I guess I&#8217;ll just have to wait in line with everybody else when Early Bird tickets go on sale next Tuesday at 10 am CST.</p>

<hr />

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
<span class='line-number'>143</span>
<span class='line-number'>144</span>
<span class='line-number'>145</span>
<span class='line-number'>146</span>
<span class='line-number'>147</span>
<span class='line-number'>148</span>
<span class='line-number'>149</span>
<span class='line-number'>150</span>
<span class='line-number'>151</span>
<span class='line-number'>152</span>
<span class='line-number'>153</span>
<span class='line-number'>154</span>
<span class='line-number'>155</span>
<span class='line-number'>156</span>
<span class='line-number'>157</span>
<span class='line-number'>158</span>
<span class='line-number'>159</span>
<span class='line-number'>160</span>
<span class='line-number'>161</span>
<span class='line-number'>162</span>
<span class='line-number'>163</span>
<span class='line-number'>164</span>
<span class='line-number'>165</span>
<span class='line-number'>166</span>
<span class='line-number'>167</span>
<span class='line-number'>168</span>
<span class='line-number'>169</span>
<span class='line-number'>170</span>
<span class='line-number'>171</span>
<span class='line-number'>172</span>
<span class='line-number'>173</span>
<span class='line-number'>174</span>
<span class='line-number'>175</span>
<span class='line-number'>176</span>
<span class='line-number'>177</span>
<span class='line-number'>178</span>
<span class='line-number'>179</span>
<span class='line-number'>180</span>
<span class='line-number'>181</span>
<span class='line-number'>182</span>
<span class='line-number'>183</span>
<span class='line-number'>184</span>
<span class='line-number'>185</span>
<span class='line-number'>186</span>
<span class='line-number'>187</span>
<span class='line-number'>188</span>
<span class='line-number'>189</span>
<span class='line-number'>190</span>
<span class='line-number'>191</span>
<span class='line-number'>192</span>
<span class='line-number'>193</span>
<span class='line-number'>194</span>
<span class='line-number'>195</span>
<span class='line-number'>196</span>
<span class='line-number'>197</span>
<span class='line-number'>198</span>
<span class='line-number'>199</span>
<span class='line-number'>200</span>
<span class='line-number'>201</span>
<span class='line-number'>202</span>
<span class='line-number'>203</span>
<span class='line-number'>204</span>
<span class='line-number'>205</span>
<span class='line-number'>206</span>
<span class='line-number'>207</span>
<span class='line-number'>208</span>
<span class='line-number'>209</span>
<span class='line-number'>210</span>
<span class='line-number'>211</span>
<span class='line-number'>212</span>
<span class='line-number'>213</span>
<span class='line-number'>214</span>
<span class='line-number'>215</span>
<span class='line-number'>216</span>
<span class='line-number'>217</span>
<span class='line-number'>218</span>
<span class='line-number'>219</span>
<span class='line-number'>220</span>
<span class='line-number'>221</span>
<span class='line-number'>222</span>
<span class='line-number'>223</span>
<span class='line-number'>224</span>
<span class='line-number'>225</span>
<span class='line-number'>226</span>
<span class='line-number'>227</span>
<span class='line-number'>228</span>
<span class='line-number'>229</span>
<span class='line-number'>230</span>
<span class='line-number'>231</span>
<span class='line-number'>232</span>
<span class='line-number'>233</span>
<span class='line-number'>234</span>
<span class='line-number'>235</span>
<span class='line-number'>236</span>
<span class='line-number'>237</span>
<span class='line-number'>238</span>
<span class='line-number'>239</span>
<span class='line-number'>240</span>
<span class='line-number'>241</span>
<span class='line-number'>242</span>
<span class='line-number'>243</span>
<span class='line-number'>244</span>
<span class='line-number'>245</span>
<span class='line-number'>246</span>
<span class='line-number'>247</span>
<span class='line-number'>248</span>
<span class='line-number'>249</span>
<span class='line-number'>250</span>
<span class='line-number'>251</span>
<span class='line-number'>252</span>
<span class='line-number'>253</span>
<span class='line-number'>254</span>
<span class='line-number'>255</span>
<span class='line-number'>256</span>
<span class='line-number'>257</span>
<span class='line-number'>258</span>
<span class='line-number'>259</span>
<span class='line-number'>260</span>
<span class='line-number'>261</span>
<span class='line-number'>262</span>
<span class='line-number'>263</span>
<span class='line-number'>264</span>
<span class='line-number'>265</span>
<span class='line-number'>266</span>
<span class='line-number'>267</span>
<span class='line-number'>268</span>
<span class='line-number'>269</span>
<span class='line-number'>270</span>
<span class='line-number'>271</span>
<span class='line-number'>272</span>
<span class='line-number'>273</span>
<span class='line-number'>274</span>
<span class='line-number'>275</span>
<span class='line-number'>276</span>
<span class='line-number'>277</span>
<span class='line-number'>278</span>
<span class='line-number'>279</span>
<span class='line-number'>280</span>
<span class='line-number'>281</span>
<span class='line-number'>282</span>
<span class='line-number'>283</span>
<span class='line-number'>284</span>
<span class='line-number'>285</span>
<span class='line-number'>286</span>
<span class='line-number'>287</span>
<span class='line-number'>288</span>
<span class='line-number'>289</span>
<span class='line-number'>290</span>
<span class='line-number'>291</span>
<span class='line-number'>292</span>
<span class='line-number'>293</span>
<span class='line-number'>294</span>
<span class='line-number'>295</span>
<span class='line-number'>296</span>
<span class='line-number'>297</span>
<span class='line-number'>298</span>
<span class='line-number'>299</span>
<span class='line-number'>300</span>
<span class='line-number'>301</span>
<span class='line-number'>302</span>
<span class='line-number'>303</span>
<span class='line-number'>304</span>
<span class='line-number'>305</span>
<span class='line-number'>306</span>
<span class='line-number'>307</span>
<span class='line-number'>308</span>
<span class='line-number'>309</span>
<span class='line-number'>310</span>
<span class='line-number'>311</span>
<span class='line-number'>312</span>
<span class='line-number'>313</span>
<span class='line-number'>314</span>
<span class='line-number'>315</span>
<span class='line-number'>316</span>
<span class='line-number'>317</span>
<span class='line-number'>318</span>
<span class='line-number'>319</span>
<span class='line-number'>320</span>
<span class='line-number'>321</span>
<span class='line-number'>322</span>
<span class='line-number'>323</span>
<span class='line-number'>324</span>
<span class='line-number'>325</span>
<span class='line-number'>326</span>
<span class='line-number'>327</span>
<span class='line-number'>328</span>
<span class='line-number'>329</span>
<span class='line-number'>330</span>
<span class='line-number'>331</span>
<span class='line-number'>332</span>
<span class='line-number'>333</span>
<span class='line-number'>334</span>
<span class='line-number'>335</span>
<span class='line-number'>336</span>
<span class='line-number'>337</span>
<span class='line-number'>338</span>
<span class='line-number'>339</span>
<span class='line-number'>340</span>
<span class='line-number'>341</span>
<span class='line-number'>342</span>
<span class='line-number'>343</span>
<span class='line-number'>344</span>
<span class='line-number'>345</span>
<span class='line-number'>346</span>
<span class='line-number'>347</span>
<span class='line-number'>348</span>
<span class='line-number'>349</span>
<span class='line-number'>350</span>
<span class='line-number'>351</span>
<span class='line-number'>352</span>
<span class='line-number'>353</span>
<span class='line-number'>354</span>
<span class='line-number'>355</span>
<span class='line-number'>356</span>
<span class='line-number'>357</span>
<span class='line-number'>358</span>
<span class='line-number'>359</span>
<span class='line-number'>360</span>
<span class='line-number'>361</span>
<span class='line-number'>362</span>
<span class='line-number'>363</span>
<span class='line-number'>364</span>
<span class='line-number'>365</span>
<span class='line-number'>366</span>
<span class='line-number'>367</span>
<span class='line-number'>368</span>
<span class='line-number'>369</span>
<span class='line-number'>370</span>
<span class='line-number'>371</span>
<span class='line-number'>372</span>
<span class='line-number'>373</span>
<span class='line-number'>374</span>
<span class='line-number'>375</span>
<span class='line-number'>376</span>
<span class='line-number'>377</span>
<span class='line-number'>378</span>
<span class='line-number'>379</span>
<span class='line-number'>380</span>
<span class='line-number'>381</span>
<span class='line-number'>382</span>
<span class='line-number'>383</span>
<span class='line-number'>384</span>
<span class='line-number'>385</span>
<span class='line-number'>386</span>
<span class='line-number'>387</span>
<span class='line-number'>388</span>
<span class='line-number'>389</span>
<span class='line-number'>390</span>
<span class='line-number'>391</span>
<span class='line-number'>392</span>
<span class='line-number'>393</span>
<span class='line-number'>394</span>
<span class='line-number'>395</span>
<span class='line-number'>396</span>
<span class='line-number'>397</span>
<span class='line-number'>398</span>
<span class='line-number'>399</span>
<span class='line-number'>400</span>
<span class='line-number'>401</span>
<span class='line-number'>402</span>
<span class='line-number'>403</span>
<span class='line-number'>404</span>
<span class='line-number'>405</span>
<span class='line-number'>406</span>
<span class='line-number'>407</span>
<span class='line-number'>408</span>
<span class='line-number'>409</span>
<span class='line-number'>410</span>
<span class='line-number'>411</span>
<span class='line-number'>412</span>
<span class='line-number'>413</span>
<span class='line-number'>414</span>
<span class='line-number'>415</span>
<span class='line-number'>416</span>
<span class='line-number'>417</span>
<span class='line-number'>418</span>
<span class='line-number'>419</span>
<span class='line-number'>420</span>
<span class='line-number'>421</span>
<span class='line-number'>422</span>
<span class='line-number'>423</span>
<span class='line-number'>424</span>
<span class='line-number'>425</span>
<span class='line-number'>426</span>
<span class='line-number'>427</span>
<span class='line-number'>428</span>
<span class='line-number'>429</span>
<span class='line-number'>430</span>
<span class='line-number'>431</span>
<span class='line-number'>432</span>
<span class='line-number'>433</span>
<span class='line-number'>434</span>
<span class='line-number'>435</span>
<span class='line-number'>436</span>
<span class='line-number'>437</span>
<span class='line-number'>438</span>
<span class='line-number'>439</span>
<span class='line-number'>440</span>
<span class='line-number'>441</span>
<span class='line-number'>442</span>
<span class='line-number'>443</span>
<span class='line-number'>444</span>
<span class='line-number'>445</span>
<span class='line-number'>446</span>
<span class='line-number'>447</span>
<span class='line-number'>448</span>
<span class='line-number'>449</span>
<span class='line-number'>450</span>
<span class='line-number'>451</span>
<span class='line-number'>452</span>
<span class='line-number'>453</span>
<span class='line-number'>454</span>
<span class='line-number'>455</span>
<span class='line-number'>456</span>
<span class='line-number'>457</span>
<span class='line-number'>458</span>
<span class='line-number'>459</span>
<span class='line-number'>460</span>
<span class='line-number'>461</span>
<span class='line-number'>462</span>
<span class='line-number'>463</span>
<span class='line-number'>464</span>
<span class='line-number'>465</span>
<span class='line-number'>466</span>
<span class='line-number'>467</span>
<span class='line-number'>468</span>
<span class='line-number'>469</span>
<span class='line-number'>470</span>
<span class='line-number'>471</span>
<span class='line-number'>472</span>
<span class='line-number'>473</span>
<span class='line-number'>474</span>
<span class='line-number'>475</span>
<span class='line-number'>476</span>
<span class='line-number'>477</span>
<span class='line-number'>478</span>
<span class='line-number'>479</span>
<span class='line-number'>480</span>
<span class='line-number'>481</span>
<span class='line-number'>482</span>
<span class='line-number'>483</span>
<span class='line-number'>484</span>
<span class='line-number'>485</span>
<span class='line-number'>486</span>
<span class='line-number'>487</span>
<span class='line-number'>488</span>
<span class='line-number'>489</span>
<span class='line-number'>490</span>
<span class='line-number'>491</span>
<span class='line-number'>492</span>
<span class='line-number'>493</span>
<span class='line-number'>494</span>
<span class='line-number'>495</span>
<span class='line-number'>496</span>
<span class='line-number'>497</span>
<span class='line-number'>498</span>
<span class='line-number'>499</span>
<span class='line-number'>500</span>
<span class='line-number'>501</span>
<span class='line-number'>502</span>
<span class='line-number'>503</span>
<span class='line-number'>504</span>
<span class='line-number'>505</span>
<span class='line-number'>506</span>
<span class='line-number'>507</span>
<span class='line-number'>508</span>
<span class='line-number'>509</span>
<span class='line-number'>510</span>
<span class='line-number'>511</span>
<span class='line-number'>512</span>
<span class='line-number'>513</span>
<span class='line-number'>514</span>
<span class='line-number'>515</span>
<span class='line-number'>516</span>
<span class='line-number'>517</span>
<span class='line-number'>518</span>
<span class='line-number'>519</span>
<span class='line-number'>520</span>
<span class='line-number'>521</span>
<span class='line-number'>522</span>
<span class='line-number'>523</span>
<span class='line-number'>524</span>
<span class='line-number'>525</span>
<span class='line-number'>526</span>
<span class='line-number'>527</span>
<span class='line-number'>528</span>
<span class='line-number'>529</span>
<span class='line-number'>530</span>
<span class='line-number'>531</span>
<span class='line-number'>532</span>
<span class='line-number'>533</span>
<span class='line-number'>534</span>
<span class='line-number'>535</span>
<span class='line-number'>536</span>
<span class='line-number'>537</span>
<span class='line-number'>538</span>
<span class='line-number'>539</span>
<span class='line-number'>540</span>
<span class='line-number'>541</span>
<span class='line-number'>542</span>
<span class='line-number'>543</span>
<span class='line-number'>544</span>
<span class='line-number'>545</span>
<span class='line-number'>546</span>
<span class='line-number'>547</span>
<span class='line-number'>548</span>
<span class='line-number'>549</span>
<span class='line-number'>550</span>
<span class='line-number'>551</span>
<span class='line-number'>552</span>
<span class='line-number'>553</span>
<span class='line-number'>554</span>
<span class='line-number'>555</span>
<span class='line-number'>556</span>
<span class='line-number'>557</span>
<span class='line-number'>558</span>
<span class='line-number'>559</span>
<span class='line-number'>560</span>
<span class='line-number'>561</span>
<span class='line-number'>562</span>
<span class='line-number'>563</span>
<span class='line-number'>564</span>
<span class='line-number'>565</span>
<span class='line-number'>566</span>
<span class='line-number'>567</span>
<span class='line-number'>568</span>
<span class='line-number'>569</span>
<span class='line-number'>570</span>
<span class='line-number'>571</span>
<span class='line-number'>572</span>
<span class='line-number'>573</span>
<span class='line-number'>574</span>
<span class='line-number'>575</span>
<span class='line-number'>576</span>
<span class='line-number'>577</span>
<span class='line-number'>578</span>
<span class='line-number'>579</span>
<span class='line-number'>580</span>
<span class='line-number'>581</span>
<span class='line-number'>582</span>
<span class='line-number'>583</span>
<span class='line-number'>584</span>
<span class='line-number'>585</span>
<span class='line-number'>586</span>
<span class='line-number'>587</span>
<span class='line-number'>588</span>
<span class='line-number'>589</span>
<span class='line-number'>590</span>
<span class='line-number'>591</span>
<span class='line-number'>592</span>
<span class='line-number'>593</span>
<span class='line-number'>594</span>
<span class='line-number'>595</span>
<span class='line-number'>596</span>
<span class='line-number'>597</span>
<span class='line-number'>598</span>
<span class='line-number'>599</span>
<span class='line-number'>600</span>
<span class='line-number'>601</span>
<span class='line-number'>602</span>
<span class='line-number'>603</span>
<span class='line-number'>604</span>
<span class='line-number'>605</span>
<span class='line-number'>606</span>
<span class='line-number'>607</span>
<span class='line-number'>608</span>
<span class='line-number'>609</span>
<span class='line-number'>610</span>
<span class='line-number'>611</span>
<span class='line-number'>612</span>
<span class='line-number'>613</span>
<span class='line-number'>614</span>
<span class='line-number'>615</span>
<span class='line-number'>616</span>
<span class='line-number'>617</span>
<span class='line-number'>618</span>
<span class='line-number'>619</span>
<span class='line-number'>620</span>
<span class='line-number'>621</span>
<span class='line-number'>622</span>
<span class='line-number'>623</span>
<span class='line-number'>624</span>
<span class='line-number'>625</span>
<span class='line-number'>626</span>
<span class='line-number'>627</span>
<span class='line-number'>628</span>
<span class='line-number'>629</span>
<span class='line-number'>630</span>
<span class='line-number'>631</span>
<span class='line-number'>632</span>
<span class='line-number'>633</span>
<span class='line-number'>634</span>
<span class='line-number'>635</span>
<span class='line-number'>636</span>
<span class='line-number'>637</span>
<span class='line-number'>638</span>
<span class='line-number'>639</span>
<span class='line-number'>640</span>
<span class='line-number'>641</span>
<span class='line-number'>642</span>
<span class='line-number'>643</span>
<span class='line-number'>644</span>
<span class='line-number'>645</span>
<span class='line-number'>646</span>
<span class='line-number'>647</span>
<span class='line-number'>648</span>
<span class='line-number'>649</span>
<span class='line-number'>650</span>
<span class='line-number'>651</span>
<span class='line-number'>652</span>
<span class='line-number'>653</span>
<span class='line-number'>654</span>
<span class='line-number'>655</span>
<span class='line-number'>656</span>
<span class='line-number'>657</span>
<span class='line-number'>658</span>
<span class='line-number'>659</span>
<span class='line-number'>660</span>
<span class='line-number'>661</span>
<span class='line-number'>662</span>
<span class='line-number'>663</span>
<span class='line-number'>664</span>
<span class='line-number'>665</span>
<span class='line-number'>666</span>
<span class='line-number'>667</span>
<span class='line-number'>668</span>
<span class='line-number'>669</span>
<span class='line-number'>670</span>
<span class='line-number'>671</span>
<span class='line-number'>672</span>
<span class='line-number'>673</span>
<span class='line-number'>674</span>
<span class='line-number'>675</span>
<span class='line-number'>676</span>
<span class='line-number'>677</span>
<span class='line-number'>678</span>
<span class='line-number'>679</span>
<span class='line-number'>680</span>
<span class='line-number'>681</span>
<span class='line-number'>682</span>
<span class='line-number'>683</span>
<span class='line-number'>684</span>
<span class='line-number'>685</span>
<span class='line-number'>686</span>
<span class='line-number'>687</span>
<span class='line-number'>688</span>
<span class='line-number'>689</span>
<span class='line-number'>690</span>
<span class='line-number'>691</span>
<span class='line-number'>692</span>
<span class='line-number'>693</span>
<span class='line-number'>694</span>
<span class='line-number'>695</span>
<span class='line-number'>696</span>
<span class='line-number'>697</span>
<span class='line-number'>698</span>
<span class='line-number'>699</span>
<span class='line-number'>700</span>
<span class='line-number'>701</span>
<span class='line-number'>702</span>
<span class='line-number'>703</span>
<span class='line-number'>704</span>
<span class='line-number'>705</span>
<span class='line-number'>706</span>
<span class='line-number'>707</span>
<span class='line-number'>708</span>
<span class='line-number'>709</span>
<span class='line-number'>710</span>
<span class='line-number'>711</span>
<span class='line-number'>712</span>
<span class='line-number'>713</span>
<span class='line-number'>714</span>
<span class='line-number'>715</span>
<span class='line-number'>716</span>
<span class='line-number'>717</span>
<span class='line-number'>718</span>
<span class='line-number'>719</span>
<span class='line-number'>720</span>
<span class='line-number'>721</span>
<span class='line-number'>722</span>
<span class='line-number'>723</span>
<span class='line-number'>724</span>
<span class='line-number'>725</span>
<span class='line-number'>726</span>
<span class='line-number'>727</span>
<span class='line-number'>728</span>
<span class='line-number'>729</span>
<span class='line-number'>730</span>
<span class='line-number'>731</span>
<span class='line-number'>732</span>
<span class='line-number'>733</span>
<span class='line-number'>734</span>
<span class='line-number'>735</span>
<span class='line-number'>736</span>
<span class='line-number'>737</span>
<span class='line-number'>738</span>
<span class='line-number'>739</span>
<span class='line-number'>740</span>
<span class='line-number'>741</span>
<span class='line-number'>742</span>
<span class='line-number'>743</span>
<span class='line-number'>744</span>
<span class='line-number'>745</span>
<span class='line-number'>746</span>
<span class='line-number'>747</span>
<span class='line-number'>748</span>
<span class='line-number'>749</span>
<span class='line-number'>750</span>
<span class='line-number'>751</span>
<span class='line-number'>752</span>
<span class='line-number'>753</span>
<span class='line-number'>754</span>
<span class='line-number'>755</span>
<span class='line-number'>756</span>
<span class='line-number'>757</span>
<span class='line-number'>758</span>
<span class='line-number'>759</span>
<span class='line-number'>760</span>
<span class='line-number'>761</span>
<span class='line-number'>762</span>
<span class='line-number'>763</span>
<span class='line-number'>764</span>
<span class='line-number'>765</span>
<span class='line-number'>766</span>
<span class='line-number'>767</span>
<span class='line-number'>768</span>
<span class='line-number'>769</span>
<span class='line-number'>770</span>
<span class='line-number'>771</span>
<span class='line-number'>772</span>
<span class='line-number'>773</span>
<span class='line-number'>774</span>
<span class='line-number'>775</span>
<span class='line-number'>776</span>
<span class='line-number'>777</span>
<span class='line-number'>778</span>
<span class='line-number'>779</span>
<span class='line-number'>780</span>
<span class='line-number'>781</span>
<span class='line-number'>782</span>
<span class='line-number'>783</span>
<span class='line-number'>784</span>
<span class='line-number'>785</span>
<span class='line-number'>786</span>
<span class='line-number'>787</span>
<span class='line-number'>788</span>
<span class='line-number'>789</span>
<span class='line-number'>790</span>
<span class='line-number'>791</span>
<span class='line-number'>792</span>
<span class='line-number'>793</span>
<span class='line-number'>794</span>
<span class='line-number'>795</span>
<span class='line-number'>796</span>
<span class='line-number'>797</span>
<span class='line-number'>798</span>
<span class='line-number'>799</span>
<span class='line-number'>800</span>
<span class='line-number'>801</span>
<span class='line-number'>802</span>
<span class='line-number'>803</span>
<span class='line-number'>804</span>
<span class='line-number'>805</span>
<span class='line-number'>806</span>
<span class='line-number'>807</span>
<span class='line-number'>808</span>
<span class='line-number'>809</span>
<span class='line-number'>810</span>
<span class='line-number'>811</span>
<span class='line-number'>812</span>
<span class='line-number'>813</span>
<span class='line-number'>814</span>
<span class='line-number'>815</span>
<span class='line-number'>816</span>
<span class='line-number'>817</span>
<span class='line-number'>818</span>
<span class='line-number'>819</span>
<span class='line-number'>820</span>
<span class='line-number'>821</span>
<span class='line-number'>822</span>
<span class='line-number'>823</span>
<span class='line-number'>824</span>
<span class='line-number'>825</span>
<span class='line-number'>826</span>
<span class='line-number'>827</span>
<span class='line-number'>828</span>
<span class='line-number'>829</span>
<span class='line-number'>830</span>
<span class='line-number'>831</span>
<span class='line-number'>832</span>
<span class='line-number'>833</span>
<span class='line-number'>834</span>
<span class='line-number'>835</span>
<span class='line-number'>836</span>
<span class='line-number'>837</span>
<span class='line-number'>838</span>
<span class='line-number'>839</span>
<span class='line-number'>840</span>
<span class='line-number'>841</span>
<span class='line-number'>842</span>
<span class='line-number'>843</span>
<span class='line-number'>844</span>
<span class='line-number'>845</span>
<span class='line-number'>846</span>
<span class='line-number'>847</span>
<span class='line-number'>848</span>
<span class='line-number'>849</span>
<span class='line-number'>850</span>
<span class='line-number'>851</span>
<span class='line-number'>852</span>
<span class='line-number'>853</span>
<span class='line-number'>854</span>
<span class='line-number'>855</span>
<span class='line-number'>856</span>
<span class='line-number'>857</span>
<span class='line-number'>858</span>
<span class='line-number'>859</span>
<span class='line-number'>860</span>
<span class='line-number'>861</span>
<span class='line-number'>862</span>
<span class='line-number'>863</span>
<span class='line-number'>864</span>
<span class='line-number'>865</span>
<span class='line-number'>866</span>
<span class='line-number'>867</span>
<span class='line-number'>868</span>
<span class='line-number'>869</span>
<span class='line-number'>870</span>
<span class='line-number'>871</span>
<span class='line-number'>872</span>
<span class='line-number'>873</span>
<span class='line-number'>874</span>
<span class='line-number'>875</span>
<span class='line-number'>876</span>
<span class='line-number'>877</span>
<span class='line-number'>878</span>
<span class='line-number'>879</span>
<span class='line-number'>880</span>
<span class='line-number'>881</span>
<span class='line-number'>882</span>
<span class='line-number'>883</span>
<span class='line-number'>884</span>
<span class='line-number'>885</span>
<span class='line-number'>886</span>
<span class='line-number'>887</span>
<span class='line-number'>888</span>
<span class='line-number'>889</span>
<span class='line-number'>890</span>
<span class='line-number'>891</span>
<span class='line-number'>892</span>
<span class='line-number'>893</span>
<span class='line-number'>894</span>
<span class='line-number'>895</span>
<span class='line-number'>896</span>
<span class='line-number'>897</span>
<span class='line-number'>898</span>
<span class='line-number'>899</span>
<span class='line-number'>900</span>
<span class='line-number'>901</span>
<span class='line-number'>902</span>
<span class='line-number'>903</span>
<span class='line-number'>904</span>
<span class='line-number'>905</span>
<span class='line-number'>906</span>
<span class='line-number'>907</span>
<span class='line-number'>908</span>
<span class='line-number'>909</span>
<span class='line-number'>910</span>
<span class='line-number'>911</span>
<span class='line-number'>912</span>
<span class='line-number'>913</span>
<span class='line-number'>914</span>
<span class='line-number'>915</span>
<span class='line-number'>916</span>
<span class='line-number'>917</span>
<span class='line-number'>918</span>
<span class='line-number'>919</span>
<span class='line-number'>920</span>
<span class='line-number'>921</span>
<span class='line-number'>922</span>
<span class='line-number'>923</span>
<span class='line-number'>924</span>
<span class='line-number'>925</span>
<span class='line-number'>926</span>
<span class='line-number'>927</span>
<span class='line-number'>928</span>
<span class='line-number'>929</span>
<span class='line-number'>930</span>
<span class='line-number'>931</span>
<span class='line-number'>932</span>
<span class='line-number'>933</span>
<span class='line-number'>934</span>
<span class='line-number'>935</span>
<span class='line-number'>936</span>
<span class='line-number'>937</span>
<span class='line-number'>938</span>
<span class='line-number'>939</span>
<span class='line-number'>940</span>
<span class='line-number'>941</span>
<span class='line-number'>942</span>
<span class='line-number'>943</span>
<span class='line-number'>944</span>
<span class='line-number'>945</span>
<span class='line-number'>946</span>
<span class='line-number'>947</span>
<span class='line-number'>948</span>
<span class='line-number'>949</span>
<span class='line-number'>950</span>
<span class='line-number'>951</span>
<span class='line-number'>952</span>
<span class='line-number'>953</span>
<span class='line-number'>954</span>
<span class='line-number'>955</span>
<span class='line-number'>956</span>
<span class='line-number'>957</span>
<span class='line-number'>958</span>
<span class='line-number'>959</span>
<span class='line-number'>960</span>
<span class='line-number'>961</span>
<span class='line-number'>962</span>
<span class='line-number'>963</span>
<span class='line-number'>964</span>
<span class='line-number'>965</span>
<span class='line-number'>966</span>
<span class='line-number'>967</span>
<span class='line-number'>968</span>
<span class='line-number'>969</span>
<span class='line-number'>970</span>
<span class='line-number'>971</span>
<span class='line-number'>972</span>
<span class='line-number'>973</span>
<span class='line-number'>974</span>
<span class='line-number'>975</span>
<span class='line-number'>976</span>
<span class='line-number'>977</span>
<span class='line-number'>978</span>
<span class='line-number'>979</span>
<span class='line-number'>980</span>
<span class='line-number'>981</span>
<span class='line-number'>982</span>
<span class='line-number'>983</span>
<span class='line-number'>984</span>
<span class='line-number'>985</span>
<span class='line-number'>986</span>
<span class='line-number'>987</span>
<span class='line-number'>988</span>
<span class='line-number'>989</span>
<span class='line-number'>990</span>
<span class='line-number'>991</span>
<span class='line-number'>992</span>
<span class='line-number'>993</span>
<span class='line-number'>994</span>
<span class='line-number'>995</span>
<span class='line-number'>996</span>
<span class='line-number'>997</span>
<span class='line-number'>998</span>
<span class='line-number'>999</span>
<span class='line-number'>1000</span>
<span class='line-number'>1001</span>
<span class='line-number'>1002</span>
<span class='line-number'>1003</span>
<span class='line-number'>1004</span>
<span class='line-number'>1005</span>
<span class='line-number'>1006</span>
<span class='line-number'>1007</span>
<span class='line-number'>1008</span>
<span class='line-number'>1009</span>
<span class='line-number'>1010</span>
<span class='line-number'>1011</span>
<span class='line-number'>1012</span>
<span class='line-number'>1013</span>
<span class='line-number'>1014</span>
<span class='line-number'>1015</span>
<span class='line-number'>1016</span>
<span class='line-number'>1017</span>
<span class='line-number'>1018</span>
<span class='line-number'>1019</span>
<span class='line-number'>1020</span>
<span class='line-number'>1021</span>
<span class='line-number'>1022</span>
<span class='line-number'>1023</span>
<span class='line-number'>1024</span>
<span class='line-number'>1025</span>
<span class='line-number'>1026</span>
<span class='line-number'>1027</span>
<span class='line-number'>1028</span>
<span class='line-number'>1029</span>
<span class='line-number'>1030</span>
<span class='line-number'>1031</span>
<span class='line-number'>1032</span>
<span class='line-number'>1033</span>
<span class='line-number'>1034</span>
<span class='line-number'>1035</span>
<span class='line-number'>1036</span>
<span class='line-number'>1037</span>
<span class='line-number'>1038</span>
<span class='line-number'>1039</span>
<span class='line-number'>1040</span>
<span class='line-number'>1041</span>
<span class='line-number'>1042</span>
<span class='line-number'>1043</span>
<span class='line-number'>1044</span>
<span class='line-number'>1045</span>
<span class='line-number'>1046</span>
<span class='line-number'>1047</span>
<span class='line-number'>1048</span>
<span class='line-number'>1049</span>
<span class='line-number'>1050</span>
<span class='line-number'>1051</span>
<span class='line-number'>1052</span>
<span class='line-number'>1053</span>
<span class='line-number'>1054</span>
<span class='line-number'>1055</span>
<span class='line-number'>1056</span>
<span class='line-number'>1057</span>
<span class='line-number'>1058</span>
<span class='line-number'>1059</span>
<span class='line-number'>1060</span>
<span class='line-number'>1061</span>
<span class='line-number'>1062</span>
<span class='line-number'>1063</span>
<span class='line-number'>1064</span>
<span class='line-number'>1065</span>
<span class='line-number'>1066</span>
<span class='line-number'>1067</span>
<span class='line-number'>1068</span>
<span class='line-number'>1069</span>
<span class='line-number'>1070</span>
<span class='line-number'>1071</span>
<span class='line-number'>1072</span>
<span class='line-number'>1073</span>
<span class='line-number'>1074</span>
<span class='line-number'>1075</span>
<span class='line-number'>1076</span>
<span class='line-number'>1077</span>
<span class='line-number'>1078</span>
<span class='line-number'>1079</span>
<span class='line-number'>1080</span>
<span class='line-number'>1081</span>
<span class='line-number'>1082</span>
<span class='line-number'>1083</span>
<span class='line-number'>1084</span>
<span class='line-number'>1085</span>
<span class='line-number'>1086</span>
<span class='line-number'>1087</span>
<span class='line-number'>1088</span>
<span class='line-number'>1089</span>
<span class='line-number'>1090</span>
<span class='line-number'>1091</span>
<span class='line-number'>1092</span>
<span class='line-number'>1093</span>
<span class='line-number'>1094</span>
<span class='line-number'>1095</span>
<span class='line-number'>1096</span>
<span class='line-number'>1097</span>
<span class='line-number'>1098</span>
<span class='line-number'>1099</span>
<span class='line-number'>1100</span>
<span class='line-number'>1101</span>
<span class='line-number'>1102</span>
<span class='line-number'>1103</span>
<span class='line-number'>1104</span>
<span class='line-number'>1105</span>
<span class='line-number'>1106</span>
<span class='line-number'>1107</span>
<span class='line-number'>1108</span>
<span class='line-number'>1109</span>
<span class='line-number'>1110</span>
<span class='line-number'>1111</span>
<span class='line-number'>1112</span>
<span class='line-number'>1113</span>
<span class='line-number'>1114</span>
<span class='line-number'>1115</span>
<span class='line-number'>1116</span>
<span class='line-number'>1117</span>
<span class='line-number'>1118</span>
<span class='line-number'>1119</span>
<span class='line-number'>1120</span>
<span class='line-number'>1121</span>
<span class='line-number'>1122</span>
<span class='line-number'>1123</span>
<span class='line-number'>1124</span>
<span class='line-number'>1125</span>
<span class='line-number'>1126</span>
<span class='line-number'>1127</span>
<span class='line-number'>1128</span>
<span class='line-number'>1129</span>
<span class='line-number'>1130</span>
<span class='line-number'>1131</span>
<span class='line-number'>1132</span>
<span class='line-number'>1133</span>
<span class='line-number'>1134</span>
<span class='line-number'>1135</span>
<span class='line-number'>1136</span>
<span class='line-number'>1137</span>
<span class='line-number'>1138</span>
<span class='line-number'>1139</span>
<span class='line-number'>1140</span>
<span class='line-number'>1141</span>
<span class='line-number'>1142</span>
<span class='line-number'>1143</span>
<span class='line-number'>1144</span>
<span class='line-number'>1145</span>
<span class='line-number'>1146</span>
<span class='line-number'>1147</span>
<span class='line-number'>1148</span>
<span class='line-number'>1149</span>
<span class='line-number'>1150</span>
<span class='line-number'>1151</span>
<span class='line-number'>1152</span>
<span class='line-number'>1153</span>
<span class='line-number'>1154</span>
<span class='line-number'>1155</span>
<span class='line-number'>1156</span>
<span class='line-number'>1157</span>
<span class='line-number'>1158</span>
<span class='line-number'>1159</span>
<span class='line-number'>1160</span>
<span class='line-number'>1161</span>
<span class='line-number'>1162</span>
<span class='line-number'>1163</span>
<span class='line-number'>1164</span>
<span class='line-number'>1165</span>
<span class='line-number'>1166</span>
<span class='line-number'>1167</span>
<span class='line-number'>1168</span>
<span class='line-number'>1169</span>
<span class='line-number'>1170</span>
<span class='line-number'>1171</span>
<span class='line-number'>1172</span>
<span class='line-number'>1173</span>
<span class='line-number'>1174</span>
<span class='line-number'>1175</span>
<span class='line-number'>1176</span>
<span class='line-number'>1177</span>
<span class='line-number'>1178</span>
<span class='line-number'>1179</span>
<span class='line-number'>1180</span>
<span class='line-number'>1181</span>
<span class='line-number'>1182</span>
<span class='line-number'>1183</span>
<span class='line-number'>1184</span>
<span class='line-number'>1185</span>
<span class='line-number'>1186</span>
<span class='line-number'>1187</span>
<span class='line-number'>1188</span>
<span class='line-number'>1189</span>
<span class='line-number'>1190</span>
<span class='line-number'>1191</span>
<span class='line-number'>1192</span>
<span class='line-number'>1193</span>
<span class='line-number'>1194</span>
<span class='line-number'>1195</span>
<span class='line-number'>1196</span>
<span class='line-number'>1197</span>
<span class='line-number'>1198</span>
<span class='line-number'>1199</span>
<span class='line-number'>1200</span>
<span class='line-number'>1201</span>
<span class='line-number'>1202</span>
<span class='line-number'>1203</span>
<span class='line-number'>1204</span>
<span class='line-number'>1205</span>
<span class='line-number'>1206</span>
<span class='line-number'>1207</span>
<span class='line-number'>1208</span>
<span class='line-number'>1209</span>
<span class='line-number'>1210</span>
<span class='line-number'>1211</span>
<span class='line-number'>1212</span>
<span class='line-number'>1213</span>
<span class='line-number'>1214</span>
<span class='line-number'>1215</span>
<span class='line-number'>1216</span>
<span class='line-number'>1217</span>
<span class='line-number'>1218</span>
<span class='line-number'>1219</span>
<span class='line-number'>1220</span>
<span class='line-number'>1221</span>
<span class='line-number'>1222</span>
<span class='line-number'>1223</span>
<span class='line-number'>1224</span>
<span class='line-number'>1225</span>
<span class='line-number'>1226</span>
<span class='line-number'>1227</span>
<span class='line-number'>1228</span>
<span class='line-number'>1229</span>
<span class='line-number'>1230</span>
<span class='line-number'>1231</span>
<span class='line-number'>1232</span>
<span class='line-number'>1233</span>
<span class='line-number'>1234</span>
<span class='line-number'>1235</span>
<span class='line-number'>1236</span>
<span class='line-number'>1237</span>
<span class='line-number'>1238</span>
<span class='line-number'>1239</span>
<span class='line-number'>1240</span>
<span class='line-number'>1241</span>
<span class='line-number'>1242</span>
<span class='line-number'>1243</span>
<span class='line-number'>1244</span>
<span class='line-number'>1245</span>
<span class='line-number'>1246</span>
<span class='line-number'>1247</span>
<span class='line-number'>1248</span>
<span class='line-number'>1249</span>
<span class='line-number'>1250</span>
<span class='line-number'>1251</span>
<span class='line-number'>1252</span>
<span class='line-number'>1253</span>
<span class='line-number'>1254</span>
<span class='line-number'>1255</span>
<span class='line-number'>1256</span>
<span class='line-number'>1257</span>
<span class='line-number'>1258</span>
<span class='line-number'>1259</span>
<span class='line-number'>1260</span>
<span class='line-number'>1261</span>
<span class='line-number'>1262</span>
<span class='line-number'>1263</span>
<span class='line-number'>1264</span>
<span class='line-number'>1265</span>
<span class='line-number'>1266</span>
<span class='line-number'>1267</span>
<span class='line-number'>1268</span>
<span class='line-number'>1269</span>
<span class='line-number'>1270</span>
<span class='line-number'>1271</span>
<span class='line-number'>1272</span>
<span class='line-number'>1273</span>
<span class='line-number'>1274</span>
<span class='line-number'>1275</span>
<span class='line-number'>1276</span>
<span class='line-number'>1277</span>
<span class='line-number'>1278</span>
<span class='line-number'>1279</span>
<span class='line-number'>1280</span>
<span class='line-number'>1281</span>
<span class='line-number'>1282</span>
<span class='line-number'>1283</span>
<span class='line-number'>1284</span>
<span class='line-number'>1285</span>
<span class='line-number'>1286</span>
<span class='line-number'>1287</span>
<span class='line-number'>1288</span>
<span class='line-number'>1289</span>
<span class='line-number'>1290</span>
<span class='line-number'>1291</span>
<span class='line-number'>1292</span>
<span class='line-number'>1293</span>
<span class='line-number'>1294</span>
<span class='line-number'>1295</span>
<span class='line-number'>1296</span>
<span class='line-number'>1297</span>
<span class='line-number'>1298</span>
<span class='line-number'>1299</span>
<span class='line-number'>1300</span>
<span class='line-number'>1301</span>
<span class='line-number'>1302</span>
<span class='line-number'>1303</span>
<span class='line-number'>1304</span>
<span class='line-number'>1305</span>
<span class='line-number'>1306</span>
<span class='line-number'>1307</span>
<span class='line-number'>1308</span>
<span class='line-number'>1309</span>
<span class='line-number'>1310</span>
<span class='line-number'>1311</span>
<span class='line-number'>1312</span>
<span class='line-number'>1313</span>
<span class='line-number'>1314</span>
<span class='line-number'>1315</span>
<span class='line-number'>1316</span>
<span class='line-number'>1317</span>
<span class='line-number'>1318</span>
<span class='line-number'>1319</span>
<span class='line-number'>1320</span>
<span class='line-number'>1321</span>
<span class='line-number'>1322</span>
<span class='line-number'>1323</span>
<span class='line-number'>1324</span>
<span class='line-number'>1325</span>
<span class='line-number'>1326</span>
<span class='line-number'>1327</span>
<span class='line-number'>1328</span>
<span class='line-number'>1329</span>
<span class='line-number'>1330</span>
<span class='line-number'>1331</span>
<span class='line-number'>1332</span>
<span class='line-number'>1333</span>
<span class='line-number'>1334</span>
<span class='line-number'>1335</span>
<span class='line-number'>1336</span>
<span class='line-number'>1337</span>
<span class='line-number'>1338</span>
<span class='line-number'>1339</span>
<span class='line-number'>1340</span>
<span class='line-number'>1341</span>
<span class='line-number'>1342</span>
<span class='line-number'>1343</span>
<span class='line-number'>1344</span>
<span class='line-number'>1345</span>
<span class='line-number'>1346</span>
<span class='line-number'>1347</span>
<span class='line-number'>1348</span>
<span class='line-number'>1349</span>
<span class='line-number'>1350</span>
<span class='line-number'>1351</span>
<span class='line-number'>1352</span>
<span class='line-number'>1353</span>
<span class='line-number'>1354</span>
<span class='line-number'>1355</span>
<span class='line-number'>1356</span>
<span class='line-number'>1357</span>
<span class='line-number'>1358</span>
<span class='line-number'>1359</span>
<span class='line-number'>1360</span>
<span class='line-number'>1361</span>
<span class='line-number'>1362</span>
<span class='line-number'>1363</span>
<span class='line-number'>1364</span>
<span class='line-number'>1365</span>
<span class='line-number'>1366</span>
<span class='line-number'>1367</span>
<span class='line-number'>1368</span>
<span class='line-number'>1369</span>
<span class='line-number'>1370</span>
<span class='line-number'>1371</span>
<span class='line-number'>1372</span>
<span class='line-number'>1373</span>
<span class='line-number'>1374</span>
<span class='line-number'>1375</span>
<span class='line-number'>1376</span>
<span class='line-number'>1377</span>
<span class='line-number'>1378</span>
<span class='line-number'>1379</span>
<span class='line-number'>1380</span>
<span class='line-number'>1381</span>
<span class='line-number'>1382</span>
<span class='line-number'>1383</span>
<span class='line-number'>1384</span>
<span class='line-number'>1385</span>
<span class='line-number'>1386</span>
<span class='line-number'>1387</span>
<span class='line-number'>1388</span>
<span class='line-number'>1389</span>
<span class='line-number'>1390</span>
<span class='line-number'>1391</span>
<span class='line-number'>1392</span>
<span class='line-number'>1393</span>
<span class='line-number'>1394</span>
<span class='line-number'>1395</span>
<span class='line-number'>1396</span>
<span class='line-number'>1397</span>
<span class='line-number'>1398</span>
<span class='line-number'>1399</span>
<span class='line-number'>1400</span>
<span class='line-number'>1401</span>
<span class='line-number'>1402</span>
<span class='line-number'>1403</span>
<span class='line-number'>1404</span>
<span class='line-number'>1405</span>
<span class='line-number'>1406</span>
<span class='line-number'>1407</span>
<span class='line-number'>1408</span>
<span class='line-number'>1409</span>
<span class='line-number'>1410</span>
<span class='line-number'>1411</span>
<span class='line-number'>1412</span>
<span class='line-number'>1413</span>
<span class='line-number'>1414</span>
<span class='line-number'>1415</span>
<span class='line-number'>1416</span>
<span class='line-number'>1417</span>
<span class='line-number'>1418</span>
<span class='line-number'>1419</span>
<span class='line-number'>1420</span>
<span class='line-number'>1421</span>
<span class='line-number'>1422</span>
<span class='line-number'>1423</span>
<span class='line-number'>1424</span>
<span class='line-number'>1425</span>
<span class='line-number'>1426</span>
<span class='line-number'>1427</span>
<span class='line-number'>1428</span>
<span class='line-number'>1429</span>
<span class='line-number'>1430</span>
<span class='line-number'>1431</span>
<span class='line-number'>1432</span>
<span class='line-number'>1433</span>
<span class='line-number'>1434</span>
<span class='line-number'>1435</span>
<span class='line-number'>1436</span>
<span class='line-number'>1437</span>
<span class='line-number'>1438</span>
<span class='line-number'>1439</span>
<span class='line-number'>1440</span>
<span class='line-number'>1441</span>
<span class='line-number'>1442</span>
<span class='line-number'>1443</span>
<span class='line-number'>1444</span>
<span class='line-number'>1445</span>
<span class='line-number'>1446</span>
<span class='line-number'>1447</span>
<span class='line-number'>1448</span>
<span class='line-number'>1449</span>
<span class='line-number'>1450</span>
<span class='line-number'>1451</span>
<span class='line-number'>1452</span>
<span class='line-number'>1453</span>
<span class='line-number'>1454</span>
<span class='line-number'>1455</span>
<span class='line-number'>1456</span>
<span class='line-number'>1457</span>
<span class='line-number'>1458</span>
<span class='line-number'>1459</span>
<span class='line-number'>1460</span>
<span class='line-number'>1461</span>
<span class='line-number'>1462</span>
<span class='line-number'>1463</span>
<span class='line-number'>1464</span>
<span class='line-number'>1465</span>
<span class='line-number'>1466</span>
<span class='line-number'>1467</span>
<span class='line-number'>1468</span>
<span class='line-number'>1469</span>
<span class='line-number'>1470</span>
<span class='line-number'>1471</span>
<span class='line-number'>1472</span>
<span class='line-number'>1473</span>
<span class='line-number'>1474</span>
<span class='line-number'>1475</span>
<span class='line-number'>1476</span>
<span class='line-number'>1477</span>
<span class='line-number'>1478</span>
<span class='line-number'>1479</span>
<span class='line-number'>1480</span>
<span class='line-number'>1481</span>
<span class='line-number'>1482</span>
<span class='line-number'>1483</span>
<span class='line-number'>1484</span>
<span class='line-number'>1485</span>
<span class='line-number'>1486</span>
<span class='line-number'>1487</span>
<span class='line-number'>1488</span>
<span class='line-number'>1489</span>
<span class='line-number'>1490</span>
<span class='line-number'>1491</span>
<span class='line-number'>1492</span>
<span class='line-number'>1493</span>
<span class='line-number'>1494</span>
<span class='line-number'>1495</span>
<span class='line-number'>1496</span>
<span class='line-number'>1497</span>
<span class='line-number'>1498</span>
<span class='line-number'>1499</span>
<span class='line-number'>1500</span>
<span class='line-number'>1501</span>
<span class='line-number'>1502</span>
<span class='line-number'>1503</span>
<span class='line-number'>1504</span>
<span class='line-number'>1505</span>
<span class='line-number'>1506</span>
<span class='line-number'>1507</span>
<span class='line-number'>1508</span>
<span class='line-number'>1509</span>
<span class='line-number'>1510</span>
<span class='line-number'>1511</span>
<span class='line-number'>1512</span>
<span class='line-number'>1513</span>
<span class='line-number'>1514</span>
<span class='line-number'>1515</span>
<span class='line-number'>1516</span>
<span class='line-number'>1517</span>
<span class='line-number'>1518</span>
<span class='line-number'>1519</span>
<span class='line-number'>1520</span>
<span class='line-number'>1521</span>
<span class='line-number'>1522</span>
<span class='line-number'>1523</span>
<span class='line-number'>1524</span>
<span class='line-number'>1525</span>
<span class='line-number'>1526</span>
<span class='line-number'>1527</span>
<span class='line-number'>1528</span>
<span class='line-number'>1529</span>
<span class='line-number'>1530</span>
<span class='line-number'>1531</span>
<span class='line-number'>1532</span>
<span class='line-number'>1533</span>
<span class='line-number'>1534</span>
<span class='line-number'>1535</span>
<span class='line-number'>1536</span>
<span class='line-number'>1537</span>
<span class='line-number'>1538</span>
<span class='line-number'>1539</span>
<span class='line-number'>1540</span>
<span class='line-number'>1541</span>
<span class='line-number'>1542</span>
<span class='line-number'>1543</span>
<span class='line-number'>1544</span>
<span class='line-number'>1545</span>
<span class='line-number'>1546</span>
<span class='line-number'>1547</span>
<span class='line-number'>1548</span>
<span class='line-number'>1549</span>
<span class='line-number'>1550</span>
<span class='line-number'>1551</span>
<span class='line-number'>1552</span>
<span class='line-number'>1553</span>
<span class='line-number'>1554</span>
<span class='line-number'>1555</span>
<span class='line-number'>1556</span>
<span class='line-number'>1557</span>
<span class='line-number'>1558</span>
<span class='line-number'>1559</span>
<span class='line-number'>1560</span>
<span class='line-number'>1561</span>
<span class='line-number'>1562</span>
<span class='line-number'>1563</span>
<span class='line-number'>1564</span>
<span class='line-number'>1565</span>
<span class='line-number'>1566</span>
<span class='line-number'>1567</span>
<span class='line-number'>1568</span>
<span class='line-number'>1569</span>
<span class='line-number'>1570</span>
<span class='line-number'>1571</span>
<span class='line-number'>1572</span>
<span class='line-number'>1573</span>
<span class='line-number'>1574</span>
<span class='line-number'>1575</span>
<span class='line-number'>1576</span>
<span class='line-number'>1577</span>
<span class='line-number'>1578</span>
<span class='line-number'>1579</span>
<span class='line-number'>1580</span>
<span class='line-number'>1581</span>
<span class='line-number'>1582</span>
<span class='line-number'>1583</span>
<span class='line-number'>1584</span>
<span class='line-number'>1585</span>
<span class='line-number'>1586</span>
<span class='line-number'>1587</span>
<span class='line-number'>1588</span>
<span class='line-number'>1589</span>
<span class='line-number'>1590</span>
<span class='line-number'>1591</span>
<span class='line-number'>1592</span>
<span class='line-number'>1593</span>
<span class='line-number'>1594</span>
<span class='line-number'>1595</span>
<span class='line-number'>1596</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Checked at 2013-03-19T22:46:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-19T22:47:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-19T22:48:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-19T22:49:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-19T22:50:05-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-19T22:52:07-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-19T22:54:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-19T22:55:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-19T22:56:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-19T22:57:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-19T22:58:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-19T22:59:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-19T23:00:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-19T23:01:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-19T23:02:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-19T23:03:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-19T23:04:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-19T23:05:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-19T23:06:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-19T23:07:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-19T23:08:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T00:09:09-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T00:10:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T00:11:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T00:13:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T01:14:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T01:15:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T01:16:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T01:17:05-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T01:18:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T01:19:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T01:20:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T01:21:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T01:22:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T01:23:05-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T01:24:05-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T02:25:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T06:50:09-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T06:51:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T06:52:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T06:53:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T06:54:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T06:55:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T06:56:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T06:57:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T06:58:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T06:59:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T07:00:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T07:01:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T07:02:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T07:03:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T07:04:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T07:05:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T07:06:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T07:07:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T07:08:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T07:09:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T07:10:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T07:11:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T07:12:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T07:13:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T07:14:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T07:15:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T07:16:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T07:17:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T07:18:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T07:19:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T07:20:07-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T07:21:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T07:22:05-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T07:23:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T07:24:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T07:25:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T07:26:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T07:27:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T07:28:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T07:46:25-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T07:47:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T07:48:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T07:49:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T07:50:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T07:51:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T07:52:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T07:53:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T07:54:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T07:55:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T07:56:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T07:57:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T07:58:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T08:09:32-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T08:10:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T08:11:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T08:12:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T08:13:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T08:14:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T08:15:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T08:16:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T08:17:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T08:18:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T08:19:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T08:20:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T08:21:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T08:47:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T08:48:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T08:49:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T08:50:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T08:51:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T08:52:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T08:53:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T08:54:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T08:55:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T08:56:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T08:57:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T08:58:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T08:59:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T09:00:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T09:01:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T09:02:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T09:03:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T09:04:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T09:05:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T09:06:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T09:07:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T09:08:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T09:09:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T09:10:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T09:11:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T09:12:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T09:13:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T09:14:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T09:15:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T09:16:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T09:17:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T09:18:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T09:19:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T09:20:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T09:21:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T09:22:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T09:23:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T09:24:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T09:25:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T09:26:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T09:27:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T09:28:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T09:29:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T09:30:05-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T09:31:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T09:32:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T09:33:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T09:34:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T09:35:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T09:36:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T09:37:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T09:38:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T09:39:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T09:54:05-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T09:55:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T09:56:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T09:57:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T09:58:27-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T09:59:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T10:00:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T10:01:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T10:02:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T10:03:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T10:04:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T10:05:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T10:06:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T10:07:05-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T10:08:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T10:09:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T10:10:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T10:11:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T10:12:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T10:13:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T10:14:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T10:15:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T10:16:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T10:17:07-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T10:18:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T10:19:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T10:20:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T10:21:05-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T10:30:59-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T10:31:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T10:32:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T10:33:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T10:34:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T10:35:05-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T10:36:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T10:37:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T10:38:05-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T10:39:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T10:40:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T10:41:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T10:42:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T10:43:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T10:44:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T10:45:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T10:46:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T10:47:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T10:48:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T10:49:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T10:51:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T10:52:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T10:53:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T10:54:06-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T10:55:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T10:56:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T10:57:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T10:58:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T10:59:05-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T11:00:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T11:01:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T11:02:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T11:03:07-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T11:04:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T11:05:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T11:06:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T11:07:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T11:08:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T11:09:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T11:10:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T11:11:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T11:12:05-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T11:13:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T11:14:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T11:15:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T11:16:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T11:17:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T11:18:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T11:19:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T11:20:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T11:21:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T11:22:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T11:23:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T11:24:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T11:25:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T11:26:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T11:27:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T11:28:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T11:29:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T11:30:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T11:32:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T11:34:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T11:35:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T11:36:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T11:37:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T11:38:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T11:39:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T11:40:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T11:41:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T11:42:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T11:43:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T11:44:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T11:45:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T11:46:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T11:47:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T11:48:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T11:49:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T11:50:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T11:51:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T11:52:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T11:53:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T11:54:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T11:55:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T11:56:07-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T11:57:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T11:58:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T11:59:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T12:00:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T12:01:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T12:02:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T12:03:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T12:04:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T12:05:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T12:06:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T12:07:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T12:08:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T12:09:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T12:10:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T12:11:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T12:12:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T12:13:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T12:14:03-04:00 - No changes to report
</span><span class='line'>Message sent!
</span><span class='line'>Site changed!
</span><span class='line'>Message sent!
</span><span class='line'>Site changed!
</span><span class='line'>Message sent!
</span><span class='line'>Site changed!
</span><span class='line'>Message sent!
</span><span class='line'>Site changed!
</span><span class='line'>Checked at 2013-03-20T12:29:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T12:30:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T12:31:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T12:32:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T12:33:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T12:34:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T12:35:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T12:36:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T12:37:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T12:38:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T12:39:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T12:40:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T12:41:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T12:42:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T12:43:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T12:44:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T12:45:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T12:46:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T12:47:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T12:48:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T12:50:07-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T12:51:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T12:52:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T12:53:05-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T12:54:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T12:56:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T12:57:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T12:58:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T12:59:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T13:00:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T13:01:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T13:02:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T13:03:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T13:04:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T13:05:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T13:06:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T13:07:05-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T13:08:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T13:09:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T13:10:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T13:11:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T13:12:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T13:13:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T13:14:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T13:15:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T13:16:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T13:17:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T13:18:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T13:19:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T13:20:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T13:21:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T13:22:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T13:23:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T13:24:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T13:25:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T13:26:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T13:27:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T13:28:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T13:29:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T13:30:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T13:31:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T13:32:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T13:33:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T13:34:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T13:35:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T13:36:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T13:37:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T13:38:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T13:39:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T13:40:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T13:41:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T13:42:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T13:43:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T13:44:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T13:45:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T13:46:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T13:47:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T13:48:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T13:49:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T13:50:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T13:51:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T13:52:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T13:53:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T13:54:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T13:55:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T13:56:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T13:57:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T13:58:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T13:59:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T14:00:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T14:01:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T14:02:07-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T14:03:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T14:04:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T14:05:05-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T14:06:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T14:07:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T14:08:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T14:09:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T14:10:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T14:11:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T14:12:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T14:13:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T14:14:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T14:15:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T14:16:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T14:17:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T14:18:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T14:19:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T14:20:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T14:21:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T14:22:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T14:23:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T14:24:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T14:25:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T14:26:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T14:27:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T14:28:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T14:29:06-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T14:30:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T14:31:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T14:32:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T14:33:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T14:34:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T14:35:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T14:36:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T14:37:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T14:38:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T14:39:05-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T14:40:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T14:41:05-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T14:42:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T14:43:05-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T14:44:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T14:45:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T14:46:05-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T14:47:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T14:48:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T14:49:06-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T14:50:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T14:51:05-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T14:52:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T14:53:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T14:54:05-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T14:55:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T14:56:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T14:57:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T14:58:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T14:59:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T15:00:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T15:01:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T15:02:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T15:03:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T15:04:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T15:05:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T15:06:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T15:07:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T15:08:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T15:09:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T15:10:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T15:11:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T15:12:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T15:13:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T15:14:05-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T15:15:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T15:16:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T15:17:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T15:18:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T15:19:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T15:20:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T15:21:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T15:22:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T15:23:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T15:24:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T15:25:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T15:26:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T15:27:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T15:28:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T15:29:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T15:30:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T15:31:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T15:32:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T15:33:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T15:34:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T15:35:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T15:36:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T15:37:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T15:38:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T15:39:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T15:40:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T15:41:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T15:42:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T15:43:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T15:44:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T15:45:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T15:46:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T15:47:06-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T15:48:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T15:49:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T15:50:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T15:51:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T15:52:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T15:53:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T15:54:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T15:55:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T15:56:06-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T15:57:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T15:58:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T15:59:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T16:00:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T16:01:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T16:02:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T16:03:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T16:04:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T16:05:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T16:06:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T16:07:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T16:08:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T16:09:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T16:10:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T16:11:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T16:12:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T16:13:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T16:14:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T16:15:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T16:16:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T16:17:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T16:18:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T16:19:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T16:20:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T16:21:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T16:22:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T16:23:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T16:24:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T16:25:07-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T16:26:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T16:27:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T16:28:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T16:29:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T16:30:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T16:31:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T16:32:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T16:33:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T16:34:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T16:35:06-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T16:36:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T16:37:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T16:38:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T16:39:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T16:40:05-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T16:41:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T16:42:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T16:43:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T16:44:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T16:45:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T16:46:05-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T16:47:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T16:48:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T16:49:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T16:50:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T16:51:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T16:52:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T16:53:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T16:54:05-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T16:55:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T16:56:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T16:57:06-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T16:58:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T16:59:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T17:00:05-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T17:01:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T17:02:05-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T17:03:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T17:04:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T17:05:05-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T17:06:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T17:07:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T17:08:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T17:09:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T17:10:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T17:11:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T17:12:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T17:13:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T17:14:05-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T17:15:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T17:16:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T17:17:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T17:18:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T17:19:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T17:20:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T17:21:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T17:22:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T17:23:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T17:24:05-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T17:25:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T17:26:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T17:27:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T17:28:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T17:29:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T17:30:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T17:31:05-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T17:32:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T17:33:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T17:34:06-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T17:35:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T17:36:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T17:37:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T17:38:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T17:39:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T17:40:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T17:41:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T17:42:05-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T17:43:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T17:44:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T17:45:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T17:46:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T17:47:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T17:48:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T17:49:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T17:50:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T17:51:05-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T17:52:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T17:53:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T17:54:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T17:55:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T17:56:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T17:57:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T17:58:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T17:59:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T18:00:06-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T18:01:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T18:02:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T18:03:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T18:04:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T18:05:07-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T18:06:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T18:07:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T18:08:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T18:09:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T18:10:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T18:11:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T18:12:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T18:13:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T18:14:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T18:15:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T18:16:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T18:17:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T18:18:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T18:19:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T18:20:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T18:21:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T18:22:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T18:23:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T18:24:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T18:25:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T18:26:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T18:27:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T18:28:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T18:29:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T18:30:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T18:31:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T18:32:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T18:33:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T18:34:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T18:35:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T18:36:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T18:37:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T18:38:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T18:39:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T18:40:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T18:41:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T18:42:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T18:43:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T18:44:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T18:45:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T21:36:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T21:37:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T21:38:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T21:39:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T21:40:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T21:41:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T21:42:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T21:43:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T21:44:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T21:45:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T21:46:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T21:47:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T21:48:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T21:49:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T21:50:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T21:51:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T21:52:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T21:53:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T21:54:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T21:55:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T21:56:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T21:57:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T21:58:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T21:59:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T22:00:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T22:01:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T22:02:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T22:03:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T22:04:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T22:05:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T22:35:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T22:36:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T22:37:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T22:38:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T22:39:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T22:40:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T22:41:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T22:42:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T22:43:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T22:44:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T22:49:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T22:50:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T22:51:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T22:52:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T22:53:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T22:54:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T22:55:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T22:56:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T22:57:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T22:58:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T22:59:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T23:00:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T23:01:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T23:02:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T23:03:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T23:04:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T23:05:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T23:06:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T23:07:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T23:08:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T23:09:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T23:10:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T23:11:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T23:12:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T23:13:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T23:14:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T23:15:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T23:16:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T23:17:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T23:18:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T23:19:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T23:20:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T23:21:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T23:22:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T23:23:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T23:24:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T23:25:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T23:26:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T23:27:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T23:28:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T23:29:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T23:30:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T23:31:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T23:32:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T23:33:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T23:34:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T23:35:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T23:36:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T23:37:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T23:38:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T23:39:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T23:40:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T23:41:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T23:42:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T23:43:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T23:44:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T23:45:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T23:46:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T23:47:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T23:48:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T23:49:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T23:50:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T23:51:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T23:52:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T23:53:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T23:54:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T23:55:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T23:56:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T23:57:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T23:58:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-20T23:59:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T00:00:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T00:30:17-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T00:31:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T00:32:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T00:33:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T00:34:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T00:35:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T00:36:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T00:37:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T00:38:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T00:39:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T00:40:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T00:41:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T00:42:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T00:43:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T00:44:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T00:45:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T00:46:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T00:47:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T00:48:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T00:49:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T00:50:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T00:51:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T00:52:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T00:53:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T00:54:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T00:55:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T00:56:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T00:57:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T00:58:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T00:59:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T01:00:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T01:01:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T01:02:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T01:03:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T01:04:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T01:05:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T01:06:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T01:07:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T01:08:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T01:09:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T01:10:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T01:11:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T01:12:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T01:13:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T01:14:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T01:15:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T01:16:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T01:17:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T01:18:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T01:19:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T01:20:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T01:21:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T01:22:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T01:23:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T01:24:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T01:25:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T01:26:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T01:27:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T01:28:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T01:29:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T01:30:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T01:40:05-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T01:41:08-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T01:48:07-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T01:48:13-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T01:49:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T01:50:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T01:51:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T01:52:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T01:53:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T01:54:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T01:55:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T01:56:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T01:57:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T01:58:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T01:59:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T02:00:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T02:07:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T02:08:07-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T02:09:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T02:10:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T02:11:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T02:12:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T02:13:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T02:14:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T02:15:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T02:16:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T02:18:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T02:21:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T02:27:05-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T02:29:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T02:30:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T02:31:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T02:32:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T02:33:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T02:34:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T02:35:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T02:36:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T02:37:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T02:38:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T02:39:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T02:40:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T02:41:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T02:42:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T02:43:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T02:44:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T02:45:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T02:46:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T02:47:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T02:48:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T02:49:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T02:50:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T02:51:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T02:52:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T02:53:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T02:54:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T02:55:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T02:56:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T02:57:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T02:58:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T02:59:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T03:00:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T03:01:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T03:02:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T03:03:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T03:04:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T03:05:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T03:06:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T03:07:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T03:08:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T03:09:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T03:10:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T03:11:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T03:12:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T03:13:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T03:14:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T03:15:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T03:18:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T03:19:23-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T03:20:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T03:24:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T03:31:15-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T03:32:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T03:35:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T03:36:16-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T03:37:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T03:39:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T03:41:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T03:46:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T03:49:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T03:58:05-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T04:00:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T04:04:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T04:05:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T04:06:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T04:09:08-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T04:10:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T04:11:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T04:16:06-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T04:18:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T04:19:05-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T04:20:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T04:21:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T04:23:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T04:29:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T04:31:40-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T04:33:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T04:34:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T04:37:05-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T04:40:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T04:41:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T04:42:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T04:45:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T04:46:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T04:47:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T04:48:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T04:49:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T04:50:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T04:51:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T04:52:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T04:53:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T04:54:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T04:55:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T04:56:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T04:57:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T04:58:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T04:59:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T05:00:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T05:01:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T05:02:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T05:03:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T05:04:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T05:05:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T05:06:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T05:07:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T05:08:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T05:09:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T05:10:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T05:11:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T05:12:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T05:13:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T05:14:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T05:15:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T05:16:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T05:17:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T05:18:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T05:19:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T05:20:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T05:21:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T05:22:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T05:23:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T05:24:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T05:25:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T05:26:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T05:27:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T05:28:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T05:29:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T05:30:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T05:31:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T05:32:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T05:33:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T05:34:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T05:35:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T05:36:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T05:37:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T05:38:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T05:39:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T05:40:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T05:41:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T05:42:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T05:43:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T05:44:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T05:45:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T05:46:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T05:47:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T05:50:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T05:51:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T05:52:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T05:53:21-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T05:55:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T05:57:05-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T05:59:07-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T06:01:23-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T06:02:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T06:03:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T06:04:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T06:05:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T06:06:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T06:07:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T06:08:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T06:09:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T06:10:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T06:11:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T06:12:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T06:13:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T06:14:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T06:15:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T06:16:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T06:17:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T06:18:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T06:19:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T06:20:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T06:21:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T06:22:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T06:23:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T06:24:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T06:25:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T06:26:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T06:27:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T06:28:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T06:29:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T06:30:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T06:31:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T06:32:05-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T06:33:05-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T06:34:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T06:35:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T06:37:05-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T06:39:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T06:40:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T06:44:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T06:45:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T06:47:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T06:48:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T06:49:05-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T06:50:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T06:51:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T06:52:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T06:53:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T06:54:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T06:55:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T06:56:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T06:57:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T06:58:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T06:59:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T07:00:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T07:01:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T07:02:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T07:03:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T07:04:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T07:05:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T07:06:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T07:07:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T07:08:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T07:09:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T07:10:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T07:11:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T07:12:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T07:13:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T07:14:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T07:15:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T07:16:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T07:17:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T07:18:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T07:19:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T07:20:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T07:21:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T07:22:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T07:23:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T07:24:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T07:25:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T07:26:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T07:27:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T07:28:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T07:29:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T07:30:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T07:31:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T07:37:21-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T07:38:16-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T07:39:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T07:40:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T07:41:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T07:45:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T07:47:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T07:54:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T07:55:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T07:56:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T07:57:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T07:58:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T07:59:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T08:00:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T08:01:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T08:02:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T08:03:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T08:04:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T08:05:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T08:06:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T08:07:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T08:08:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T08:09:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T08:10:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T08:11:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T08:12:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T08:13:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T08:14:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T08:15:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T08:16:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T08:17:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T08:18:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T08:19:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T08:20:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T08:21:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T08:22:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T08:23:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T08:24:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T08:25:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T08:26:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T08:27:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T08:28:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T08:29:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T08:30:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T08:31:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T08:32:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T08:33:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T08:34:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T08:35:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T08:36:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T09:04:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T09:05:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T09:06:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T09:07:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T09:08:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T09:09:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T09:10:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T09:11:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T09:12:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T09:13:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T09:14:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T09:15:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T09:16:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T09:17:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T09:18:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T09:19:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T09:20:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T09:21:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T09:22:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T09:23:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T09:24:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T09:25:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T09:26:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T09:27:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T09:28:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T09:29:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T09:30:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T09:31:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T09:32:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T09:33:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T09:34:06-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T09:35:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T09:36:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T09:37:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T09:38:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T09:39:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T09:40:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T09:41:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T09:42:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T09:43:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T09:44:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T09:45:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T09:46:07-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T09:47:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T09:48:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T09:49:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T09:50:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T09:51:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T09:52:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T09:53:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T09:54:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T09:55:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T09:56:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T09:57:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T09:58:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T09:59:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T10:00:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T10:01:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T10:02:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T10:03:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T10:04:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T10:05:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T10:06:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T10:07:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T10:08:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T10:09:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T10:10:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T10:11:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T10:12:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T10:13:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T10:14:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T10:15:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T10:16:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T10:17:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T10:18:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T10:19:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T10:20:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T10:21:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T10:22:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T10:23:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T10:24:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T10:25:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T10:26:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T10:27:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T10:28:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T10:29:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T10:30:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T10:31:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T10:32:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T10:33:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T10:34:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T10:35:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T10:36:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T10:37:05-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T10:38:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T10:39:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T10:40:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T10:41:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T10:42:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T10:43:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T10:44:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T10:45:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T10:46:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T10:47:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T10:48:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T10:49:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T10:50:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T10:51:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T10:52:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T10:53:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T10:54:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T10:55:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T10:56:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T10:57:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T10:58:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T10:59:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T11:00:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T11:01:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T11:02:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T11:03:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T11:04:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T11:05:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T11:06:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T11:07:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T11:08:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T11:09:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T11:10:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T11:11:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T11:12:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T11:13:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T11:14:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T11:15:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T11:16:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T11:17:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T11:18:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T11:19:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T11:20:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T11:21:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T11:22:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T11:23:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T11:24:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T11:25:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T11:26:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T11:27:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T11:28:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T11:29:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T11:30:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T11:31:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T11:32:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T11:33:05-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T11:34:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T11:35:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T11:36:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T11:37:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T11:38:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T11:39:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T11:40:05-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T11:41:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T11:42:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T11:43:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T11:44:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T11:45:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T11:46:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T11:47:05-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T11:48:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T11:49:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T11:50:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T11:51:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T11:52:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T11:53:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T11:54:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T11:55:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T11:56:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T11:57:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T11:58:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T11:59:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T12:00:08-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T12:01:05-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T13:21:05-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T13:22:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T13:23:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T13:24:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T13:25:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T13:26:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T13:27:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T13:28:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T13:29:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T13:30:05-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T13:31:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T13:32:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T13:33:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T13:34:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T13:35:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T13:36:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T13:37:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T13:38:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T13:39:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T13:40:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T13:41:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T13:42:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T13:43:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T13:44:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T13:45:05-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T13:46:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T13:47:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T13:48:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T13:49:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T13:50:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T13:51:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T13:52:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T13:53:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T13:54:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T13:55:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T13:56:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T13:57:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T13:58:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T13:59:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T14:00:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T14:01:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T14:02:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T14:03:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T14:04:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T14:05:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T14:06:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T14:07:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T14:08:05-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T14:09:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T14:10:05-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T14:11:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T14:12:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T14:13:06-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T14:14:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T14:15:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T14:16:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T14:17:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T14:18:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T14:19:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T14:20:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T14:21:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T14:22:06-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T14:23:05-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T14:24:05-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T14:25:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T14:26:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T14:27:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T14:28:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T14:29:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T14:30:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T14:31:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T14:32:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T14:33:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T14:34:05-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T14:35:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T14:36:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T14:37:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T14:38:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T14:39:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T14:40:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T14:41:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T14:42:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T14:43:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T14:44:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T14:45:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T14:46:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T14:47:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T14:48:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T14:49:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T14:50:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T14:51:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T14:52:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T14:53:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T14:54:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T14:55:05-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T14:56:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T14:57:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T14:58:05-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T14:59:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T15:00:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T15:01:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T15:02:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T15:03:05-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T15:04:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T15:05:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T15:06:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T15:07:06-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T15:08:05-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T15:09:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T15:10:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T15:11:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T15:12:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T15:13:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T15:14:06-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T15:15:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T15:16:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T15:17:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T15:18:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T15:19:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T15:20:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T15:21:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T15:22:06-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T15:23:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T15:24:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T15:25:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T15:26:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T15:27:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T15:28:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T15:29:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T15:30:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T15:31:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T15:32:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T15:33:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T15:34:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T15:35:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T15:36:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T15:37:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T15:38:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T15:39:05-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T15:40:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T15:41:05-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T15:42:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T15:43:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T15:44:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T15:45:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T15:46:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T15:47:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T15:48:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T15:49:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T15:50:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T15:51:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T15:52:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T15:53:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T15:54:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T15:55:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T15:56:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T15:57:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T15:58:07-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T15:59:06-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T16:00:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T16:01:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T16:02:05-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T16:03:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T16:04:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T16:05:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T16:06:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T16:07:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T16:08:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T16:09:05-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T16:10:05-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T16:11:05-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T16:12:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T16:13:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T16:14:08-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T16:15:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T16:16:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T16:17:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T16:18:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T16:19:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T16:20:06-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T16:21:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T16:22:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T16:23:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T16:24:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T16:25:06-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T16:26:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T16:27:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T16:28:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T16:29:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T16:30:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T16:31:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T16:32:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T16:33:06-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T16:34:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T16:35:05-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T16:36:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T16:37:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T16:38:05-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T16:39:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T16:40:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T16:41:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T16:42:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T16:43:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T16:44:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T16:45:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T16:46:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T16:47:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T16:48:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T16:49:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T16:50:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T16:51:05-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T16:52:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T16:53:06-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T16:54:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T16:55:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T16:56:05-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T16:57:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T16:58:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T16:59:05-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T17:00:06-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T17:01:07-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T17:02:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T17:03:02-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T17:04:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T17:05:06-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T17:06:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T17:07:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T17:08:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T17:09:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T17:10:06-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T17:11:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T17:12:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T17:13:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T17:14:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T17:15:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T17:16:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T17:17:06-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T17:18:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T17:19:05-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T17:20:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T17:21:06-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T17:22:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T17:23:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T17:24:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T17:25:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T17:26:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T17:27:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T17:28:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T17:29:04-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T17:30:06-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T17:31:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T17:32:03-04:00 - No changes to report
</span><span class='line'>Checked at 2013-03-21T17:33:05-04:00 - No changes to report
</span><span class='line'>Message sent!
</span><span class='line'>Site changed! 'SOON' was at 764 before, now at 797.
</span><span class='line'>Message sent!
</span><span class='line'>Site changed! 'SOON' was at 764 before, now at 797.
</span><span class='line'>Message sent!
</span><span class='line'>Site changed! 'SOON' was at 764 before, now at 797.
</span><span class='line'>Message sent!
</span><span class='line'>Site changed! 'SOON' was at 764 before, now at 797.</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Flatiron - Week 6]]></title>
    <link href="http://eewang.github.com/blog/2013/03/17/flatiron-week-6/"/>
    <updated>2013-03-17T10:14:00-04:00</updated>
    <id>http://eewang.github.com/blog/2013/03/17/flatiron-week-6</id>
    <content type="html"><![CDATA[<p>Today marked the half-way point for the Flatiron program. This past week was heavy on Ruby on Rails instruction; Avi wanted to hammer into us the importance of understanding complex forms and working with multiple, associated models. On Monday, we brainstormed ideas for our final group projects and went through a planning session where we discussed ideas at a high-level - the features, technical obstacles and work sprints that we could tackle within the short timeframe for development.</p>

<!--more-->


<p>Throughout the week, I tried to implement the lecture content into my side project. Learning forms was challenging, and I&#8217;m glad that Avi and Bob spent a lot of time on the topic. The previous week, I had tried to implement a &#8220;favorites&#8221; form for users of my ticket tracker application, basically allowing users to tag sporting events or concerts as favorites. Eventually, I want this functionality to drive my API calls and analytics; rather than make a large number of unnecessary API calls, I want users to tell me what they want to look for and then enable the application to retrieve the data they want. Attempting to build out the form before covering the topic in class was difficult - I could never quite get the params hash working correctly, and I hadn&#8217;t made the proper inter-model associations. However, after much lecture and review this past week, I was finally able to get that functionality working in my application.</p>

<p>In addition to working on forms this week, I also restructured my schema and models. In previous iterations of my application, I had been retrieving data on a periodic basis and saving all the data to a single table. This created considerable data duplication, as many attributes for a given concert or sporting event are not going to change on a daily basis (e.g., event date or venue). I came to the realization that a single API call for a given concert on a given day actually could be broken down into three tables - one for the actual concert, one for the concert listing and one for the concert listing quote for that specific day. Thus, I restarted my application with this in mind and broke up the process of saving data into a three-step waterfall so that I would get all necessary data, but nothing more.</p>

<p>For example, say I make a call to the Stubhub API for event information about <a href="http://electricdaisycarnival.com/NewYork/" target="_blank">Electric Daisy Carnival - New York</a> (EDC). That API call actually returns to me information about 4 separate &#8220;events&#8221; - EDC 3-Day Pass, EDC Friday Only, EDC Saturday Only and EDC Sunday Only. The data is structured as JSON, and each hash has data fields that cover both daily static information - event date, venue, city, etc. - and daily dynamic information - minimum price, total tickets available, etc. Before, I had been saving all this information in the same table, but this past week, I broke it out into three tables, so that an API call for EDC will create 1 row in my concerts table, 4 rows in my concert_listings table and 4 rows in my concert_listing_quotes table. An API call tomorrow will create 4 new rows only in my concert_listing_quotes table, assuming that there are no new concert listings (an example might be EDC - NY After Party Tickets). I refactored my code so that each API call goes through a waterfall, checking for whether the relevant level of concert abstraction (a concert, concert listing or concert listing quote) already exists in the tables. If it does, great - move on. If it doesn&#8217;t, save a row to the database.</p>

<p>Refactoring the code in this way plus adding in the proper associations (a concert has many concert listings, which have many concert listing quotes) made it much easier for me to traverse my models and move quickly from an individual user instance to what he or she favorited, through a FavoriteConcert model. My API calls take less time to run, and my application loads faster. All in all, I got a good lesson in the value of refactoring this past week and the benefit of adding reasonable layers of abstraction.</p>

<p>In addition to coding, I&#8217;ve been reading Sandi Metz&#8217;s book on design - Practical Object Oriented Design in Ruby, or POODR. Going through POODR has been great in conceptualizing design best practices and taking a step back from coding to think through how to balance technical specificity with product flexibility. Sandi Metz has a great way of interjecting pithy, memorable statements about design that are great to keep in the back of your mind while designing an application. I&#8217;m hoping to finish up the book this week, at which point I&#8217;ll write a longer post with my review and thoughts on the book.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to Schedule Tasks Using 'Whenever']]></title>
    <link href="http://eewang.github.com/blog/2013/03/12/how-to-schedule-tasks-using-whenever/"/>
    <updated>2013-03-12T20:49:00-04:00</updated>
    <id>http://eewang.github.com/blog/2013/03/12/how-to-schedule-tasks-using-whenever</id>
    <content type="html"><![CDATA[<p>In building out my ticket tracker application, I realized that I needed to be able to automatically run scripts at certain intervals throughout the week. I wanted my application to execute a call to Stubhub&#8217;s API and pull data on events periodically so that I didn&#8217;t have to do it myself each day. In looking on <a href="http://ruby-toolbox.org" target="_blank">Ruby Toolbox</a>, I came across a gem called <a href="https://github.com/javan/whenever" target="_blank">Whenever</a> that allows you to quickly and easily schedule tasks using a nifty tool called a cron log.</p>

<!--more-->


<p>Whenever serves as a wrapper for the cron job processor, which is functionality inherent to your operating system that allows for scheduling jobs to run periodically. According to <a href="http://en.wikipedia.org/wiki/Cron" target="_blank">Wikipedia</a>, cron tasks are often used to automate system maintenance or administration, though it can be used for other purposes, like connecting to the Internet or downloading e-mail. Apparently you can set up cron tasks independently of Ruby or any web application; Whenever enables you to manipulate standard functionality of your machine using Ruby code.</p>

<p>To get started with Whenever, you need to install the gem. Like any other gem, this is a pretty simple installation process:</p>

<p><strong>1) Set up Whenever gem</strong></p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>gem install whenever
</span></code></pre></td></tr></table></div></figure>


<p>Once you have the gem installed, you need to &#8220;wheneverize&#8221; your application. You can do this by going into the root directory of your application and using the following console command:</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>wheneverize .
</span></code></pre></td></tr></table></div></figure>


<p>This command creates a &#8220;schedule.rb&#8221; file in your config folder, which you&#8217;ll be using to manage your application&#8217;s automated tasks.</p>

<p><strong>2) Create a rake task</strong></p>

<p>There are several ways to set up cron tasks to run automatically using Whenever, but I found the simplest way to be to just write a rake task in your Rails app&#8217;s tasks folder.</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">namespace</span> <span class="ss">:events</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">desc</span> <span class="s2">&quot;Rake task to get events data&quot;</span>
</span><span class='line'>  <span class="n">task</span> <span class="ss">:fetch</span> <span class="o">=&gt;</span> <span class="ss">:environment</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">events</span> <span class="o">=</span> <span class="no">Event</span><span class="o">.</span><span class="n">nba_search</span>
</span><span class='line'>    <span class="n">events</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">item</span><span class="o">|</span>
</span><span class='line'>      <span class="n">item</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="nb">hash</span><span class="o">|</span>
</span><span class='line'>        <span class="vi">@event</span> <span class="o">=</span> <span class="no">Event</span><span class="o">.</span><span class="n">new</span><span class="p">({</span>
</span><span class='line'>        <span class="c1"># Code to instantiate an event</span>
</span><span class='line'>        <span class="p">})</span>
</span><span class='line'>        <span class="vi">@event</span><span class="o">.</span><span class="n">save</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="no">Time</span><span class="o">.</span><span class="n">now</span><span class="si">}</span><span class="s2"> - Success!&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>The above code takes advantage of a few rake-specific keywords, like namespace, desc and task. The namespace:task combination is how you&#8217;ll actually call your rake task - in the Rails rake task &#8220;db:migrate&#8221;, &#8220;db&#8221; is the namespace and &#8220;migrate&#8221; is the task. In this particular instance, I&#8217;m using Whenever to parse event data from Stubhub&#8217;s API and save them to a database using ActiveRecord. After writing the rake task, I am now able to call the above rake task in my console using:</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>rake events:fetch
</span></code></pre></td></tr></table></div></figure>


<p>After I set up my rake task, I need to use Whenever to schedule my task. Thankfully, the schedule.rb that Whenever automatically creates in your config folder comes ready with in-file instructions about how to set-up cron tasks:</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># Use this file to easily define all of your cron jobs.</span>
</span><span class='line'><span class="c1">#</span>
</span><span class='line'><span class="c1"># It&#39;s helpful, but not entirely necessary to understand cron before proceeding.</span>
</span><span class='line'><span class="c1"># http://en.wikipedia.org/wiki/Cron</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># Example:</span>
</span><span class='line'><span class="c1">#</span>
</span><span class='line'><span class="c1"># set :output, &quot;/path/to/my/cron_log.log&quot;</span>
</span><span class='line'><span class="c1">#</span>
</span><span class='line'><span class="c1"># every 2.hours do</span>
</span><span class='line'><span class="c1">#   command &quot;/usr/bin/some_great_command&quot;</span>
</span><span class='line'><span class="c1">#   runner &quot;MyModel.some_method&quot;</span>
</span><span class='line'><span class="c1">#   rake &quot;some:great:rake:task&quot;</span>
</span><span class='line'><span class="c1"># end</span>
</span><span class='line'><span class="c1">#</span>
</span><span class='line'><span class="c1"># every 4.days do</span>
</span><span class='line'><span class="c1">#   runner &quot;AnotherModel.prune_old_records&quot;</span>
</span><span class='line'><span class="c1"># end</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># Learn more: http://github.com/javan/whenever</span>
</span></code></pre></td></tr></table></div></figure>


<p>Whenever applies a simple, intuitive domain-specific language (DSL) with a few keywords to schedule tasks (you can find a more thorough run-down in in the gem&#8217;s README file. Whenever uses a human-readable syntax that takes the form of the below: &#8220;every [x].[minute/hour/day/week/etc.], :at => [time] do&#8221; to schedule tasks. The gem has pretty good support for specialized tasks, and even supports scheduling tasks on just weekdays or weekends.</p>

<p>In the below code, I&#8217;ve told Whenever to run my events:fetch rake task every day at 10:00 pm. I&#8217;ve also set the environment to be my development environment and I set a location in my Rails application for both an error log and a default log so that I can get feedback from Whenever just to make sure that it ran correctly. I don&#8217;t think the &#8220;set :output&#8221; line is absolutely necessary, but when I started using Whenever, I wasn&#8217;t always sure if the job was running correctly, so I made the rake task output to a log so I could follow the execution path.</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">set</span> <span class="ss">:environment</span><span class="p">,</span> <span class="s2">&quot;development&quot;</span>
</span><span class='line'><span class="n">set</span> <span class="ss">:output</span><span class="p">,</span> <span class="p">{</span><span class="ss">:error</span> <span class="o">=&gt;</span> <span class="s2">&quot;log/cron_error_log.log&quot;</span><span class="p">,</span> <span class="ss">:standard</span> <span class="o">=&gt;</span> <span class="s2">&quot;log/cron_log.log&quot;</span><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">every</span> <span class="mi">1</span><span class="o">.</span><span class="n">day</span><span class="p">,</span> <span class="ss">:at</span> <span class="o">=&gt;</span> <span class="s1">&#39;10:00 pm&#39;</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">rake</span> <span class="s2">&quot;events:fetch&quot;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>3) Update the crontab</strong></p>

<p>After setting up the rake task, you need to run following command in the console to tell Whenever to start running your periodic tasks:</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>whenever --update-crontab
</span></code></pre></td></tr></table></div></figure>


<p>You should see a result along the lines of:</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="o">[</span>write<span class="o">]</span> crontab file updated
</span></code></pre></td></tr></table></div></figure>


<p>If you want to check that the gem correctly scheduled your cron task, you can use the command &#8220;crontab -l&#8221; to list all cron tasks.</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>crontab -l
</span><span class='line'><span class="c"># Begin Whenever generated tasks for: /Users/eugenewang/projects/rails/ticket_tracker/config/schedule.rb</span>
</span><span class='line'>0 22 * * * /bin/bash -l -c <span class="s1">&#39;cd /Users/eugenewang/projects/rails/ticket_tracker &amp;&amp; RAILS_ENV=development bundle exec rake events:fetch --silent &gt;&gt; log/cron_log.log 2&gt;&gt; log/cron_error_log.log&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>And that should be it! You can now sit back and watch Whenever automatically execute your rake tasks. When you start using Whenever, I would recommend shortening the feedback loop by writing one or two test rake tasks that just print &#8220;Hello World&#8221; to your cron log every minute. This is what I did just to confirm that the gem was working. Then, I moved progressively onward until I was able to execute large API calls.</p>

<p>One word of caution though when using Whenever - be sure you have a general sense of how long your tasks actually take to execute. One rake task I set up took over a minute to execute on its own, and I inadvertantely scheduled the task to run every minute, so naturally a task backlog quickly built up. Even when I stopped the task and updated the crontab, the backlog caused the task to continue to run until it ran out of gas on its own. When all was said and done, I had over 2 million rows of data in my database - much of it duplicative and unwanted. Although I ended up with way too much data, at least I knew that the gem worked!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How (and When) to Use Single Table Inheritance in Rails]]></title>
    <link href="http://eewang.github.com/blog/2013/03/12/how-and-when-to-use-single-table-inheritance-in-rails/"/>
    <updated>2013-03-12T00:04:00-04:00</updated>
    <id>http://eewang.github.com/blog/2013/03/12/how-and-when-to-use-single-table-inheritance-in-rails</id>
    <content type="html"><![CDATA[<p>Last week as I was developing an application to track and analyze ticket and event postings, I came across a design problem. I had first started working on my ticket tracker application as a way to parallel the learning that we were doing in class. I started with a simple scraper that pulled data out of the Stubhub&#8217;s client-facing HTML documents, then moved on to writing a simple ORM that saved the data to a SQLite database, then moved the application into Sinatra and finally into Rails.</p>

<!--more-->


<p>Along the way, as I was increasing the level of structural complexity, I was also expanding the scope of the project. I had initially started with just NBA tickets, but I&#8217;ve recently started exploring how to broaden the application to any event. This presented me with a design conundrum. I designed my models in the initial Ruby application to just get NBA data - the classes, methods and variables were all had &#8220;NBA&#8221; or &#8220;basketball&#8221; in the name. Also, the model attributes and table fields were specific to the JSON data related to NBA games that I could retrieve. However, this wouldn&#8217;t work exactly for concerts or music festivals. Basketball games have both a home and away team, but the same cannot be said for concerts. Furthermore, sports events - e.g., baseball, basketball, football - are mostly similar in how the data is structured (home and away teams, venue, date, etc.), but each may present idiosyncratic data that is not shared by other sports. On the one hand, each type of event shares many of the same attributes, but each also have their own quirks.</p>

<p>As I explored how to accurately design my models and schema while also striving to remain DRY and not denormalize my data too much, I came across the concept of Single Table Inheritance (hat tip to professor <a href="https://twitter.com/withloudhands/" target="_blank">Bob Whitney</a> for introducing me to the design concept.) And in case you&#8217;re interested, you can find my application <a href="https://github.com/eewang/ticket_tracker" target="_blank">here</a> (very much still a work in progress).</p>

<p><strong>1) What is Single Table Inheritance (STI)?</strong></p>

<p>STI is basically the idea of using a single table to reflect multiple models that inherit from a base model, which itself inherits from ActiveRecord::Base. In the database schema, sub-models are indicated by a single &#8220;type&#8221; column. In Rails, adding a &#8220;type&#8221; column in a database migration is sufficient (after writing the models) to let Rails know that you&#8217;re planning to implement STI. For example, I decided to use STI to convert what could have been one table/model per event type - a different table for football, basketball, hockey, festivals, concerts, etc. - into just two tables, sports and concerts. Conveniently enough, this also mirrors Stubhub&#8217;s API, which categorizes events broadly into three categories - sports, concerts and theater (which I&#8217;ll aim to add at a later date).</p>

<p>Where STI is helpful is in the structure of the models that relate to the table. For my sports table, I have multiple models that each save data to the same table. I have a class called &#8220;Sport&#8221; (I know, an awkward name, but I&#8217;m still getting used to the Rails pluralization conventions) that inherits from ActiveRecord::Base, and separate models called ProBasketball, ProFootball, Baseball, etc. that all inherit from the Sport class. This enables each of the individual sports to take on the functionality of a Sport (and ActiveRecord by default), yet also provides me with sufficient flexibility to write lower-case sport-specific methods, constants and variables. Each of these sports save to the &#8220;sports&#8221; table, with the sole differentiator being the &#8220;type&#8221; column, for which Rails uses the name of the Sport &#8220;sub-class&#8221; as the value (Rails just knows, don&#8217;t ask me how.).</p>

<p><strong>2) When should I use STI?</strong></p>

<p>STIL should be considered when dealing with model classes that share much of the same functionality and data fields, but you as the developer may want more granular control over extending or adding to each class individually. Rather than duplicate the code over and over for multiple tables (and not being DRY) or forego the flexibility of adding idiosyncratic functionality or methods, STI permits you to use keep your data in a single table while writing specialized functionality.</p>

<p>STI enables you to use all the typical model methods in Rails, like .new, .create or any of the .find helper methods that make Rails so awesome, to both the super-class and the sub-classes within a single table. For example, using STI enables me to write code like this:</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">ProBasketball</span><span class="o">.</span><span class="n">where</span><span class="p">(</span><span class="ss">:act_primary</span> <span class="o">=&gt;</span> <span class="s2">&quot;New York Knicks&quot;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>The above code triggers the following SQL code. Notice that ActiveRecord automatically knows that I&#8217;m looking for data from the sports table where the type is equal to ProBasketball.</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">SELECT</span> <span class="ss">&quot;sports&quot;</span><span class="p">.</span><span class="o">*</span> <span class="k">FROM</span> <span class="ss">&quot;sports&quot;</span> <span class="k">WHERE</span> <span class="ss">&quot;sports&quot;</span><span class="p">.</span><span class="ss">&quot;type&quot;</span> <span class="k">IN</span> <span class="p">(</span><span class="s1">&#39;ProBasketball&#39;</span><span class="p">)</span> <span class="k">AND</span> <span class="ss">&quot;sports&quot;</span><span class="p">.</span><span class="ss">&quot;act_primary&quot;</span> <span class="o">=</span> <span class="s1">&#39;New York Knicks&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>What Rails is doing underneath the hood is that its going into the sports table and finding all records where the type is ProBasketball and the value in act_primary (i.e. the home team in the sports example) is the New York Knicks. This makes the above Rails/SQL command equivalent to the following:</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Sport</span><span class="o">.</span><span class="n">where</span><span class="p">(</span><span class="ss">:type</span> <span class="o">=&gt;</span> <span class="s2">&quot;ProBasketball&quot;</span><span class="p">,</span> <span class="ss">:act_primary</span> <span class="o">=&gt;</span> <span class="s2">&quot;New York Knicks&quot;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">SELECT</span> <span class="ss">&quot;sports&quot;</span><span class="p">.</span><span class="o">*</span> <span class="k">FROM</span> <span class="ss">&quot;sports&quot;</span> <span class="k">WHERE</span> <span class="ss">&quot;sports&quot;</span><span class="p">.</span><span class="ss">&quot;type&quot;</span> <span class="o">=</span> <span class="s1">&#39;ProBasketball&#39;</span> <span class="k">AND</span> <span class="ss">&quot;sports&quot;</span><span class="p">.</span><span class="ss">&quot;act_primary&quot;</span> <span class="o">=</span> <span class="s1">&#39;New York Knicks&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>A word of warning when using STI - don&#8217;t use STI just because objects seem similar. Make sure that there is an object-oriented relationship between them. STI is a way to apply a higher-level abstraction to your schema and models, but don&#8217;t get carried away. For example, it wouldn&#8217;t make sense to just have a single table called &#8220;Objects&#8221; that uses STI to manage many relationships among unrelated models, each of which just happen to be an instance of an &#8220;object&#8221; (which everything is in Ruby anyways). A more practical example might be whether to use STI manage a table called &#8220;Vehicles,&#8221; which relate to &#8220;Car&#8221;, &#8220;Bicycle&#8221; and &#8220;Tank&#8221; sub-classes.</p>

<p>In this case, STI probably doesn&#8217;t pass the good design smell task, since a car has different characteristics and functionality than a tank, even if both are technically vehicles. A better use case for STI might be a &#8220;Cars&#8221; table that relates to sub-classes of Car, such as SUV, Hybrid and Sedan. These sub-classes may each have idiosyncratic functionality, but share many of the same characteristics and, more importantly, are intuitively related from an OO perspective. In this case, using STI may be an effective way to streamline data collection and avoiding repetition in your schema.</p>

<p><strong>3) How do I implement STI?</strong></p>

<p>To get started with STI from a database perspective, all you need to do is add a field called &#8220;type&#8221; to the table. Rails takes this type field and applies the name of the sub-classes that inherit from the class for which the table is named as the value for a row of data.</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">CreateSports</span> <span class="o">&lt;</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Migration</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">change</span>
</span><span class='line'>    <span class="n">create_table</span> <span class="ss">:sports</span> <span class="k">do</span> <span class="o">|</span><span class="n">t</span><span class="o">|</span>
</span><span class='line'>      <span class="n">t</span><span class="o">.</span><span class="n">string</span> <span class="ss">:type</span>
</span><span class='line'>      <span class="n">t</span><span class="o">.</span><span class="n">string</span> <span class="ss">:act_primary</span>
</span><span class='line'>      <span class="n">t</span><span class="o">.</span><span class="n">string</span> <span class="ss">:act_secondary</span>
</span><span class='line'>      <span class="c1"># ... more column fields #</span>
</span><span class='line'>      <span class="n">t</span><span class="o">.</span><span class="n">timestamps</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Once the schema is set up, the next step is to get the models set up and the proper inheritance tree established. But, before you do that, make sure to add any subfolders in your app/models folder to the autoload path in the application.rb file. This will ensure that Rails knows to look at subfolders, which may be good to use to effectively organize your model files.</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># /config/application.rb</span>
</span><span class='line'><span class="n">config</span><span class="o">.</span><span class="n">autoload_paths</span> <span class="o">+=</span> <span class="sx">%W(</span><span class="si">#{</span><span class="n">config</span><span class="o">.</span><span class="n">root</span><span class="si">}</span><span class="sx">/app/models/sports)</span>
</span></code></pre></td></tr></table></div></figure>


<p>Next, you can write out the structure of the models. STI in Rails presumes that there is one &#8220;super-class&#8221; that takes on the name of the schema table and inherits from ActiveRecord::Base. In my example, this is the &#8220;Sport&#8221; class. Here is where I keep any variables or methods that relate to sports generally - e.g., the API call requests, for example. Then, you can create separate sub-classes for objects that will inherit the super-class functionality, yet also enable you to write sub-class-specific methods. For example, each individual sport has its own teams that I want to get data for, so I keep the constants (an array of NBA teams, for example) relevant to only one sport in that sport&#8217;s sub-class.</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># /app/models/sports/sport.rb</span>
</span><span class='line'><span class="k">class</span> <span class="nc">Sport</span> <span class="o">&lt;</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span>
</span><span class='line'>  <span class="c1"># Methods, variables and constants</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># /app/models/sports/probasketball.rb</span>
</span><span class='line'><span class="k">class</span> <span class="nc">ProBasketball</span> <span class="o">&lt;</span> <span class="no">Sport</span>
</span><span class='line'>  <span class="c1"># Methods, variables and constants</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># /app/models/sports/profootball.rb</span>
</span><span class='line'><span class="k">class</span> <span class="nc">ProFootball</span> <span class="o">&lt;</span> <span class="no">Sport</span>
</span><span class='line'>  <span class="c1"># Methods, variables and constants</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># /app/models/sports/baseball.rb</span>
</span><span class='line'><span class="k">class</span> <span class="nc">Baseball</span> <span class="o">&lt;</span> <span class="no">Sport</span>
</span><span class='line'>  <span class="c1"># Methods, variables and constants</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>4) What are some drawbacks of STI?</strong></p>

<p>STI isn&#8217;t always the best design choice for your schema. If sub-classes that you intend to use for STI have many different data fields, then including them all in the same table would result in a lot of null values and make it difficult to scale over time. In this case, you may end up with so much code in your model sub-classes that the shared functionality between sub-classes is minimal and warrants separate tables. Also, as I mentioned above, STI shouldn&#8217;t be used just because two object types have similar attributes - both airplanes and bicycles have wheels, but it probalby doesn&#8217;t make sense to group them into the same table, given that intuitively, they&#8217;re different objects that will have vastly different functionality and data fields in an application.</p>

<p>Also, you may have noticed that STI didn&#8217;t exactly solve the problem I mentioned in the beginning of expanding my application to concerts and music festivals. In looking through the Stubhub API documentation, I realized that not all data fields that are applicable to sporting events are also used in describing concerts (e.g., concerts don&#8217;t have an away team), even if about 80% - 90% of the data fields overlapped. In this case, I wanted to err on the side of caution and didn&#8217;t want to deal with a single &#8220;events&#8221; table that included stubbed out columns with null values for concerts or sporting events, so I decided to create two tables - one for concerts and one for sporting events - and then apply STI to the sub-categories inherent in those two classes, such as individual sports for the latter and festivals vs. performances in the former. So, STI didn&#8217;t solve all of my problems in that I still have duplicate data fields between my concerts and sports tables (e.g., event date, event venue, etc.), but it did help make my application flexible enough to scale to other sports or concert types while remaining relatively DRY.</p>

<p><strong>5) Where can I learn more about STI?</strong></p>

<p>There are a few good resources and blog posts online, as well as the requisite StackOverflow inquiries, about STI. I think these resources do a pretty decent job of describing STI, but if you think that STI might be a sensible domain design choice for your application, I&#8217;d recommend playing around with it in a sample application first before relying on it. I imagine that it might be difficult to switch between using STI and not using STI once in production given the significant schema changes that may be required, so prudence in applying the technique is encouraged.</p>

<p><a href="http://www.alexreisner.com/code/single-table-inheritance-in-rails" target="_blank">Alex Reisner - Single Table Inheritance in Rails</a></p>

<p><a href="http://www.therailworld.com/posts/18-Single-Table-Inheritance-with-Rails" target="_blank">The Rail World - Single Table Inheritance with Rails</a></p>

<p><a href="http://www.archonsystems.com/devblog/2011/12/20/rails-single-table-inheritance-with-polymorphic-association/" target="_blank">Archon Systems - Rails Single Table Inheritance with Polymorphic Association</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Flatiron - Week 5]]></title>
    <link href="http://eewang.github.com/blog/2013/03/09/flatiron-week-5/"/>
    <updated>2013-03-09T09:02:00-05:00</updated>
    <id>http://eewang.github.com/blog/2013/03/09/flatiron-week-5</id>
    <content type="html"><![CDATA[<p>When I started at Flatiron, I set myself a goal of trying to blog every day. That goal pretty quickly fell to the wayside, as I realized how much work would be involved just coding and learning alone. Also, after the first few days, the lessons began to group together in longer, multi-day themes - e.g., Rails. This week, the theme was Javascript/jQuery, which controls front-end user interaction and serves as an intermediate, client-side programming language between the user and the back-end (Ruby on Rails, in our case). Learning JS brought together the whole concept of web development, and it really helped coalesce my understanding of how users interact with web applications and send data to and retrieve data from the application&#8217;s back-end.</p>

<!--more-->


<p>To be honest, I have mixed feelings about Javascript. On the one hand, it seems to be a powerful, versatile language that increasingly is being used as a server-side language through frameworks like <a href="http://nodejs.org" target="_blank">Node.js</a>. On the other hand, however, it feels a little clunky to me after learning Ruby. Compared to Ruby, Javascript is syntax heavy, littered with seemingly unnecessary semicolons and braces. This past week, there were definitely moments of frustration when I couldn&#8217;t get my Javascript to work because of a missing semi-colon or a misplaced bracket. I found myself scouring my code to ensure that every open parenthesis or bracket had a corresponding closing character. Additionally, I started to inadvertantly use semicolons to end statements in my Ruby code. Good thing that Ruby is pretty flexible though, so I don&#8217;t think those did too much damage, and the misplaced syntax was easy to spot.</p>

<p>And yet while on one level I find Javascript&#8217;s syntax-heavy nature to be irritating, on a deeper level I think it can actually be beneficial in forcing me to better organize and structure my code. With JS, I&#8217;ve started to put comments to indicate where certain functions end to help me not get lost in the multiple levels of embedded functions. And while this probably isn&#8217;t coding best practices in the end, its helped me think deliberately about variable scope and processing flow within my code, and to not rely on my language of choice to determine that for me. Plus, its always easy to delete the comments after I get my code working to make it more presentable.</p>

<p>In a similar way that learning all the components of Rails separately - learning Rack, building an Object Relational Mapper, or writing SQL statements, for example - helped me understand and appreciate the work Rails does, learning Javascript has enabled me to appreciate good coding design and organization. While having frameworks like Rails or libraries like jQuery are quite useful in abstracting away common patterns and enabling rapid and efficient development, its critical to understand how those tools actually get the job done. Knowing how Rails abstracts away database queries or how jQuery simplifies event handlers makes me not only appreciate the work developers have put into building those libraries, but also enables me to customize features and fix problems more effectively. Avi and Bob have done a great job at Flatiron of demystifying abstract tools and emphasizing that Rails and jQuery are just collections of Ruby and Javascript code, respectively.</p>

<p>Learning Javascript this past week, I felt the pace of the work accelerate at Flatiron (not that we weren&#8217;t moving pretty fast already). As I&#8217;ve gained more confidence in my skillset and I&#8217;ve rounded out my understanding of the many components of web development, I&#8217;ve started working on side projects and exploring areas outside the core Flatiron curriculum. For example, I came across a pretty cool data visualization library called <a href="http://d3js.org" target="_blank">D3.js</a> that I want to explore. I find data visualization fascinating - it can be incredibly powerful tools to quickly communicate complex data in an engaging and beautiful manner. I&#8217;m hoping to spend some time this weekend exploring the documentation and to try and build some basic dynamic charts. Data visualization is the perfect encapsulation of what I find so unique about web development - the weaving together of complex data analytics with beautiful, user-centric design. Left brain and right brain working together seamlessly in awesome harmony. There&#8217;s so many cool and exciting libraries, gems and APIs out there to explore; I need to remind myself to be patient and diligent in learning, to be excited about all the potential out there rather than feel burdened by the sheer amount of material.</p>

<p>This next week we&#8217;ll be turning back to Rails for a few days before starting work on our group projects. I&#8217;m excited about what comes next, for the opportunity to take all that we&#8217;ve learned and combine it into a coherent and engaging product. Creating a black box, in a sense, but knowing exactly what goes into it and how it works. I know the next few weeks will be tiring, frustrating and challenging, but its great to know that I&#8217;m building a new skill set and finally starting to create cool stuff.</p>

<p>Oh, also, in case you haven&#8217;t noticed, I changed the design theme of my blog. I realized that the other theme got to be a little clunky, and I didn&#8217;t quite master the responsiveness of it, so the dynamic card-flip animation that I implemented ended up being more of a hindrance to readers than a cool design element. I got some feedback on the design - some people thought the animation was nice, but more people found it unnecessary and distracting from the actual blog content. And in the end, you&#8217;ve got to give the users what they want!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Flatiron - Week 4]]></title>
    <link href="http://eewang.github.com/blog/2013/03/02/flatiron-week-3/"/>
    <updated>2013-03-02T09:20:00-05:00</updated>
    <id>http://eewang.github.com/blog/2013/03/02/flatiron-week-3</id>
    <content type="html"><![CDATA[<p>As I begin the fifth week of Flatiron School, I&#8217;m feeling pretty good about where things stand. I&#8217;ve been challenged, frustrated and exhausted throughout the previous month, but its been an amazing experience, as I&#8217;ve learned more in the past four weeks than I have since college (and probably before college). The workload has been heavy, and I&#8217;ve been trying to take on some personal projects on the side. Last week was Rails week, and this week we&#8217;re starting to explore front-end web development via JavaScript/jQuery.</p>

<!--more-->


<p>We have a guest lecturer this week, <a href="http://www.slideshare.net/jonathangrover1" target="_blank">Jonathan Grover</a>, who is a front-end specialist. I&#8217;ve been working on a few Rails projects that look pretty bare bones at the moment, so it will be great to add some stylings and a dynamic user interface to the apps. Although this week is front-end focused, I hope to keep learning Rails - both during work time in class and after class - through online tutorials and working on my own projects. Given that I&#8217;ll likely be working with Rails for the foreseeable future, I really want to be fluent in the framework.</p>

<p>Learning Rails last week was challenging, especially to start, since so much of the Rails application building process seems to go on beyond the view of the programmer. Simply starting a new Rails app creates numerous directories and stub files, which can be intimidating to new developers like myself. Compared to Rails, Django starts programmers off with much less scaffolding and support. Django also seems more transparent, as there don&#8217;t seem to be nearly as many helper methods as in Rails. I can see the benefits of working with both frameworks - it was easier for me to grasp what Django was doing when I first starting using it, but I can definitely see how Rails enables rapid prototyping and efficient development of new apps.</p>

<p>As we enter the second month of the Flatiron program, one of my classmates raised the question of jobs and careers post-Flatiron last Friday. Avi mentioned that its probably still too early to think too much about jobs, and I tend to agree with him. I&#8217;m focused right now on building a skill set - learning as much as I can and knowing how to create products. But I&#8217;d be lying if I said that the thought of what will happen post-Flatiron hasn&#8217;t crossed my mind. I&#8217;ve realized that long term, I&#8217;d like to use technology and coding as the lens through which I explore and learn about other industries and professions. All professions and industries have processes and data, some common across industries and some idiosyncratic to specific sectors. I think many of the shared processes have been addressed using technology - e.g., e-mail, scheduling software, project management, note-taking - but many of the idiosyncratic ones have not. Certain industries like tech or consumer goods have had their idiosyncratic data and processes transformed by technology, but other industries have not - e.g., energy is one that comes to mind. I&#8217;m hoping to use technology to explore the data and processes of all industries.</p>

<p>Another thing that I&#8217;ve realized through the program is that balance is critical. Not just work-life balance but even work-work balance. This past week, I spent one night coding until 3:00 am - most of the hours post-midnight were spent in frustration trying to debug a Sinatra app. I hope that I don&#8217;t get into a habit of coding so late into the night. Avi mentioned that you shouldn&#8217;t code for more than 8 hours a day - if you want to keep working after 8 hours, then do some reading, or blogging, or talk to someone about coding. There are ways to keep learning and engaging without actually coding. After hours, read a book or write a blog post. Approaching the same subject in different ways will only help solidify and deepen your understanding. It will help your understanding coalesce more effectively and the mental connections between different technologies to strengthen. While its easy for me to focus on something I enjoy doing, I need to know when to stop so that I don&#8217;t get burnt out or lose efficiency.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Exploring the Black Box (Flatiron - Day 015)]]></title>
    <link href="http://eewang.github.com/blog/2013/02/26/flatiron-day-015/"/>
    <updated>2013-02-26T08:04:00-05:00</updated>
    <id>http://eewang.github.com/blog/2013/02/26/flatiron-day-015</id>
    <content type="html"><![CDATA[<p>Technology is often perceived as a black box, an opaque, mysterious tool that somehow performs magic. We take out our phones, press a few buttons, and suddenly we&#8217;re able to converse with friends, read books, buy food and learn about pretty much anything. However, as I&#8217;ve learned over the past few weeks at <a href="http://www.flatironschool.com/" target="_blank">The Flatiron School</a>, technology is anything but a mysterious process; its just really good at hiding what its doing. The process of learning how to code is all about not being intimidated or frustrated by the black box, but rather excited to learn about how the black box can seem so magical.</p>

<!--more-->


<p>Avi talks a lot about design concepts of modularity and composition. Modularity in code means that individual methods should have one responsibility and objects should be separated into classes that each describe a discrete entity. Composition, on the other hand, serves as a complement to modularity, as it enables us to take discrete, atomistic elements in code and link them together to create what appears to the outside world to be a black box. This design concept of taking a series of distinct but related building blocks and chaining them together is remarkable because it seems so simple in its conception, so complex in its execution and so elegant in its operation.</p>

<p>The past few days at Flatiron we&#8217;ve been learning about the Web and how applications interact with clients (i.e., the browser) and servers. As I&#8217;ve mentioned before, this is often times one of the toughest concepts new programmers need to grasp. We started exploring the Web (instead of just programming, which we&#8217;ve been doing since the first week with Ruby) using <a href="http://www.sinatrarb.com/" target="_blank">Sinatra</a>, a light-weight framework for developing applications. This week, we&#8217;re moving on to <a href="http://rubyonrails.org/" target="_blank">Rails</a>, which is a more robust framework that many modern web applications are built on (Twitter started on Rails). Think of frameworks as the scaffolding upon which an application is built. A framework is just a collection of files that makes it easier to build stuff; it provides ready-to-execute code to streamline more mundane web processes, like connecting to a server or querying a database.</p>

<p>As we&#8217;re moving into web applications, we&#8217;re learning about the <a href="http://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller" target="_blank">model-view-controller</a> design pattern. This MVC concept demonstrates the notions of modularity and composition that make programming complex on its face but learnable at its core. There are a lot of resources online about the MVC pattern, but in short, models provide the analytical engine that defines an application&#8217;s database, views generate the browser-side display that users actually see and controllers connect the two together so that when you type in www.espn.com, the correct HTML page is rendered in your browser (views) with the necessary data from ESPN&#8217;s database (models).</p>

<p>Avi often uses the metaphor of a restaurant to explain the MVC pattern and demonstrate the principles of modularity and composition. Broadly speaking, a restraunt can be broken down into the kitchen (model), staff (controller) and atmosphere/ambiance (view). The chefs in the kitchen need to cook and make dishes. They have to know the food offered on the menu inside-and-out, and their responsibility is to create food. However, they don&#8217;t have any responsibility for actually connecting with the restaurant patrons and figuring out what they want. That&#8217;s the role of the wait staff. They serve the patrons, get their orders and deliver them to the chef. The staff doesn&#8217;t have to know how to actually cook, all they do is transmit information (a very critical task nevertheless, as anyone who has had a bad restaurant experience due to bad service can attest to). Finally, the restaurant atmosphere is how the restaurant-goers experience the restaurant - the lighting, the temperature, the surrounding people, the ambiance - while the food certainly has an impact on the experience, going to a restaurant is about more than just the food.</p>

<p>Taken together, the kitchen, staff and atmosphere need to work together to produce a pleasant restaurant experience for customers. If any one of them fails to do its job - the kitchen produces bad food, the staff is unfriendly or the restaurant smells - the customer has a lousy experience. That said, each part of the restaurant is responsible for its own task and does not need to know the inner workings of the other part. Cooks need to focus on food and how that food gets to customers is not their concern. Wait staff need to get food to customers, but how that food is made is irrelevant. Each component of the restaurant is able to specialize, yet the restaurant experience is best when all three work together.</p>

<p>In much the same way, web applications need to have a well-designed model for the database, intuitive and beautiful views and a controller that is able to transmit user requests effectively. If any one of those three breaks down, the whole system is damaged. However, each of the three does not need to know about the inner workings of any other - that&#8217;s where the modularity comes in. As a programmer, I can work in my application&#8217;s model and focus on writing clean, efficient code that reflects the data I want to gather and use while not caring about how that data is presented to users. Then, I can move onto the views and focus on making sure that people are presented with a beautiful interface and design when using my application. In each of the model, view or controller, the design pattern of modularity and composition is repeated, as individual methods and classes in a single model have responsibilities distinct from other methods and classes, yet also relate and depend on them as well.</p>

<p>These concepts seem simple and intuitive, but can be difficult to implement in practice. I think of the process of refactoring as the hard work necessary to achieve more modularity and loose coupling - the &#8220;make it right&#8221; part of <a href="http://c2.com/cgi/wiki?MakeItWorkMakeItRightMakeItFast" target="_blank">&#8220;make it work, make it right, make it fast&#8221;</a> formulation that I like so much. Just like a restaurant could function with the wait staff both serving, cooking and decorating, a web application could work without the principles of MVC. However, it just wouldn&#8217;t be right and wouldn&#8217;t make much sense. Using modularity and composition as a guide to writing code and designing elegant yet powerful applications has made me appreciate the &#8220;black box&#8221; complexity of technology that we all interact with every day, yet also eager to explore and dive into the details as I come to realize that its not really magic at all, its just good design.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to Visualize Data With Google Charts For Ruby]]></title>
    <link href="http://eewang.github.com/blog/2013/02/20/how-to-visualize-data-with-google-charts/"/>
    <updated>2013-02-20T17:42:00-05:00</updated>
    <id>http://eewang.github.com/blog/2013/02/20/how-to-visualize-data-with-google-charts</id>
    <content type="html"><![CDATA[<p>I love data. Specifically, I love data visualizations. Infographics, charts, whatever you call it, if it displays data visually, chances are I&#8217;ll want to take a look at it. Data graphics tightly integrate the creative and analytical elements that I find so appealing about programming to efficiently communicate information. If a picture is worth a thousand words, an infographic is worth a thousand pictures. Data graphics can take an array of different forms - charts, 3-D graphs, maps, etc., the possibilities are virtually endless. I wanted to explore data visualization tools in Ruby, starting with basic chart functionality.</p>

<!--more-->


<p>In learning how to code over the past few weeks, I&#8217;ve come to appreciate the flexibility of Ruby and the ability for pretty much anything to be structured as a dataset. Conceptually, I was looking for a tool that could take in a data as an array or hash and convert that data into a table or graph. In perusing <a href="http://www.ruby-toolbox.com/" target="_blank">Ruby Toolbox</a>, I came across the Googlecharts gem, which is basically a Ruby wrapper for the <a href="http://developers.google.com/chart/" target="_blank">Google Charts API</a>. In taking a look at the <a href="http://googlecharts.rubyforge.org/" target="_blank">documentation</a> and <a href="http://github.com/mattetti/googlecharts/" target="_blank">code base on GitHub</a>, the instructions seemed pretty straight forward, so I figured I&#8217;d give it a try.</p>

<p><strong>1) Installing Googlecharts</strong></p>

<p>Getting setup with the Googlecharts gem is pretty straightforward. Like other gems, you can install it straight from the command line by running:</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>gem install googlecharts
</span></code></pre></td></tr></table></div></figure>


<p>Once the installation command runs, you just need to be sure to require the gem at the top of your Ruby file by writing:</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;gchart&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>And that&#8217;s it! You&#8217;re ready to start using Googlecharts.</p>

<p><strong>2) Let&#8217;s Chart Some Data!</strong></p>

<p>The primary class that you interact with when using Googlecharts is the Gchart class. In looking at the source code on GitHub, this class has numerous attributes that can be used to define the data and formatting for bar charts, pie charts, line graphs and scatterplots (the gem also seems to support basic 3-D graphing). When you create a new Gchart, you can pass in a number of attributes as parameters to the new Gchart instance. My first time using this gem, my goal was just to create a simple bar chart with dummy data that would successfully save to my filesystem. So I added an array of a few integers as the data input for the chart:</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">data_array</span> <span class="o">=</span> <span class="o">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">9</span><span class="o">]</span>
</span><span class='line'>
</span><span class='line'><span class="n">bar_chart</span> <span class="o">=</span> <span class="no">Gchart</span><span class="o">.</span><span class="n">new</span><span class="p">(</span>
</span><span class='line'>            <span class="ss">:type</span> <span class="o">=&gt;</span> <span class="s1">&#39;bar&#39;</span><span class="p">,</span>
</span><span class='line'>            <span class="ss">:size</span> <span class="o">=&gt;</span> <span class="s1">&#39;400x400&#39;</span><span class="p">,</span>
</span><span class='line'>            <span class="ss">:bar_colors</span> <span class="o">=&gt;</span> <span class="s2">&quot;000000&quot;</span><span class="p">,</span>
</span><span class='line'>            <span class="ss">:title</span> <span class="o">=&gt;</span> <span class="s2">&quot;My Title&quot;</span><span class="p">,</span>
</span><span class='line'>            <span class="ss">:bg</span> <span class="o">=&gt;</span> <span class="s1">&#39;EFEFEF&#39;</span><span class="p">,</span>
</span><span class='line'>            <span class="ss">:legend</span> <span class="o">=&gt;</span> <span class="s1">&#39;first data set label&#39;</span><span class="p">,</span>
</span><span class='line'>            <span class="ss">:data</span> <span class="o">=&gt;</span> <span class="n">data_array</span><span class="p">,</span>
</span><span class='line'>            <span class="ss">:filename</span> <span class="o">=&gt;</span> <span class="s1">&#39;images/bar_chart.png&#39;</span><span class="p">,</span>
</span><span class='line'>            <span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">bar_chart</span><span class="o">.</span><span class="n">file</span>
</span></code></pre></td></tr></table></div></figure>


<p>Running the above code in my terminal (still with &#8220;require &#8216;gchart&#8217;&#8221; at the top) produced this:</p>

<p><img src="http://eewang.github.com/images/post_images/bar_chart_1.png"></img></p>

<p>It gets the job done, but its not too exciting for a few reasons. First, there aren&#8217;t any y-axis labels; I have no sense of scale or measurement. Second, there are no labels on my data bars. Third, only one set of data is displayed; what if I wanted to compare two related datasets next to each other? In order to address these issues, I passed a few more initial values to the Gchart instantiation:</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">data_array_1</span> <span class="o">=</span> <span class="o">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">9</span><span class="o">]</span>
</span><span class='line'><span class="n">data_array_2</span> <span class="o">=</span> <span class="o">[</span><span class="mi">4</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">10</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">7</span><span class="o">]</span>
</span><span class='line'>
</span><span class='line'><span class="n">bar_chart</span> <span class="o">=</span> <span class="no">Gchart</span><span class="o">.</span><span class="n">new</span><span class="p">(</span>
</span><span class='line'>            <span class="ss">:type</span> <span class="o">=&gt;</span> <span class="s1">&#39;bar&#39;</span><span class="p">,</span>
</span><span class='line'>            <span class="ss">:size</span> <span class="o">=&gt;</span> <span class="s1">&#39;600x400&#39;</span><span class="p">,</span>
</span><span class='line'>            <span class="ss">:bar_colors</span> <span class="o">=&gt;</span> <span class="o">[</span><span class="s1">&#39;000000&#39;</span><span class="p">,</span> <span class="s1">&#39;0088FF&#39;</span><span class="o">]</span><span class="p">,</span>
</span><span class='line'>            <span class="ss">:title</span> <span class="o">=&gt;</span> <span class="s2">&quot;My Title&quot;</span><span class="p">,</span>
</span><span class='line'>            <span class="ss">:bg</span> <span class="o">=&gt;</span> <span class="s1">&#39;EFEFEF&#39;</span><span class="p">,</span>
</span><span class='line'>            <span class="ss">:legend</span> <span class="o">=&gt;</span> <span class="o">[</span><span class="s1">&#39;first data set label&#39;</span><span class="p">,</span> <span class="s1">&#39;second data set label&#39;</span><span class="o">]</span><span class="p">,</span>
</span><span class='line'>            <span class="ss">:data</span> <span class="o">=&gt;</span> <span class="o">[</span><span class="n">data_array_1</span><span class="p">,</span> <span class="n">data_array_2</span><span class="o">]</span><span class="p">,</span>
</span><span class='line'>            <span class="ss">:filename</span> <span class="o">=&gt;</span> <span class="s1">&#39;images/bar_chart.png&#39;</span><span class="p">,</span>
</span><span class='line'>            <span class="ss">:stacked</span> <span class="o">=&gt;</span> <span class="kp">false</span><span class="p">,</span>
</span><span class='line'>            <span class="ss">:legend_position</span> <span class="o">=&gt;</span> <span class="s1">&#39;bottom&#39;</span><span class="p">,</span>
</span><span class='line'>            <span class="ss">:axis_with_labels</span> <span class="o">=&gt;</span> <span class="o">[[</span><span class="s1">&#39;x&#39;</span><span class="o">]</span><span class="p">,</span> <span class="o">[</span><span class="s1">&#39;y&#39;</span><span class="o">]]</span><span class="p">,</span>
</span><span class='line'>            <span class="ss">:max_value</span> <span class="o">=&gt;</span> <span class="mi">15</span><span class="p">,</span>
</span><span class='line'>            <span class="ss">:min_value</span> <span class="o">=&gt;</span> <span class="mi">0</span><span class="p">,</span>
</span><span class='line'>            <span class="ss">:axis_labels</span> <span class="o">=&gt;</span> <span class="o">[[</span><span class="s2">&quot;A|B|C|D|E&quot;</span><span class="o">]]</span><span class="p">,</span>
</span><span class='line'>            <span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">bar_chart</span><span class="o">.</span><span class="n">file</span>
</span></code></pre></td></tr></table></div></figure>


<p>Specifically, I added six new attributes compared to the first chart. These new attributes include:</p>

<ul>
  <li><strong>:stacked</strong> - indicates if the bars are to be stacked one on top the other (:stacked => &#8216;true&#8217;; this is the default setting for bar charts) or if they should be side-by-side (:stacked => &#8216;false&#8217;)</li>
  <li><strong>:legend_position</strong> - indicates where the legend will be placed relative to the chart. Options are: &#8216;bottom&#8217;, &#8216;bottom_vertical&#8217;, &#8216;top&#8217;, &#8216;top_vertical&#8217;, &#8216;right&#8217;, and &#8216;left&#8217;.</li>
  <li><strong>:axis_with_labels</strong> - indicates which axis you want to add labels to. I added the primary x-axis and y-axis (left and bottom), but I could have also added &#8216;r&#8217; and &#8216;t&#8217; for &#8216;right&#8217; and &#8216;top&#8217; for the secondary vertical and horizontal axes, respectively</li>
  <li><strong>:max_value</strong> - indicates the maximum value for the x-axis. In tinkering with this attribute, it seems like this max value needs to be set in order to scale the data bars to the y-axis; otherwise they seem to get detached (i.e., you can change the y-axis scale without affecting the relative size of the bars).</li>
  <li><strong>:min_value</strong> - similar to the above, this attribute indicates the starting point of the bar chart.</li>
  <li><strong>:axis_labels</strong> - indicates the labels for the x-axis, separated by pipes (&#8220;|&#8221;). Note the formatting here - the labels in aggregate are a single string but are each delineated by pipes. If you want to replace this value with variable (e.g., if the data you want to chart may have dynamic x-axis labels), you may need to do some intermediate object transformation in order to get the appropriate syntax for Googlecharts. </li>
</ul>


<p>I also added a second array of data at the top to see how my cluster, non-stacked bar chart looks. Note too that the HEX codes for the background (&#8220;bg&#8221;) and bar colors do not need the leading &#8220;#&#8221; symbol as they do in CSS. After updating the code with additional attributes, this is my bar chart:</p>

<p><img src="http://eewang.github.com/images/post_images/bar_chart_2.png"></img></p>

<p>One thing to note is that whenever you have multiple values for a single hash key, you need to wrap them in an array, otherwise the code won&#8217;t properly execute.</p>

<p>This is the same data, except applied to a line chart (I just replaced :type => &#8216;bar&#8217; with :type => &#8216;line&#8217;):</p>

<p><img src="http://eewang.github.com/images/post_images/line_chart_1.png"></img></p>

<p>And here it is again, except with just the first data set and applied to a pie chart:</p>

<p><img src="http://eewang.github.com/images/post_images/pie_chart_1.png"></img></p>

<p>As you can see, its pretty easy to switch between graph/chart types. What&#8217;s more important is to think through the purpose of the graphic and choose the appropriate type. For example, if the data you are presenting is along a continuum (e.g., stock prices, demographic distributions, etc.), line graphs may make the most sense. But if you&#8217;re showing discrete datasets, you may want to use a bar chart.</p>

<p><strong>3) Applying Object Orientation</strong></p>

<p>Playing around with Googlecharts was fun, but ultimately, I wanted to use the gem in the context of a broader application. A typical use case may be wanting to display dynamic content that a user can request and format. I figured that this would be a good chance to extend a scraper for StubHub that I&#8217;ve been building on the side. Basically, this scraper goes through StubHub&#8217;s NBA ticket listings and saves the information about each event (home/away team, date of game, venue, minimum price and number of tickets available, etc.) into a SQLite3 database. I wrote the scraper to be object-oriented, so I thought it would make sense to build in the functionality to auto-generate bar charts using Googlecharts.</p>

<p>For the sake of brevity, I won&#8217;t post all of the code for the scraper and classes here, but you can find the <a href="https://github.com/eewang/tickets/" target="_blank">repository</a> on my <a href="https://github.com/eewang/" target="_blank">GitHub page</a>. The code below spells out the Team class, which houses the functionality to call a &#8220;search_team&#8221; class method and pass it a team name. This method will then create a bar chart dynamically using attributes of the team name that the user specifies. The method calls instance methods that perform actions like querying the database for price (&#8220;price for sql&#8221;), ticket (&#8220;tix_for_sql&#8221;), opposing team (&#8220;away_teams_for_sql&#8221;) and event date (&#8220;date_for_sql&#8221;) data. Additionally, I added in the ability for the class to search a hash of team colors to match the requested team against its primary and secondary team colors to format the chart dynamically. The underlying data map for team colors is housed as a constant in the &#8220;Baller&#8221; module, which is not reflected below. I scaled the y-axis based on the highest price in the price data array for the remaining home games. This way, I could make sure that I wouldn&#8217;t get data that fell outside of my chart&#8217;s range. Unfortunately, I wasn&#8217;t able to disconnect the scale of the primary y-axis (left side) from the secondary y-axis (right side), so the &#8220;Number of Tickets&#8221; bars look a little squished.</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Team</span>
</span><span class='line'>  <span class="kp">extend</span> <span class="no">Baller</span>
</span><span class='line'>
</span><span class='line'>  <span class="kp">attr_accessor</span> <span class="ss">:name</span><span class="p">,</span> <span class="ss">:url</span>
</span><span class='line'>
</span><span class='line'>  <span class="vc">@@color_hash</span> <span class="o">=</span> <span class="p">{}</span>
</span><span class='line'>  <span class="vc">@@db</span> <span class="o">=</span> <span class="ss">SQLite3</span><span class="p">:</span><span class="ss">:Database</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="s2">&quot;tickets_3.db&quot;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">team_list</span>
</span><span class='line'>    <span class="ss">Baller</span><span class="p">:</span><span class="ss">:TEAMS</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">team_colors_list</span>
</span><span class='line'>    <span class="nb">Array</span><span class="p">(</span><span class="ss">Baller</span><span class="p">:</span><span class="ss">:COLORS</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s2">&quot;</span><span class="se">\n</span><span class="s2">&quot;</span><span class="p">))</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">item</span><span class="o">|</span>
</span><span class='line'>      <span class="vc">@@color_hash</span><span class="o">[</span><span class="n">item</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s2">&quot;: &quot;</span><span class="p">)</span><span class="o">[</span><span class="mi">0</span><span class="o">].</span><span class="n">to_sym</span><span class="o">]</span> <span class="o">||=</span> <span class="o">[]</span>
</span><span class='line'>      <span class="vc">@@color_hash</span><span class="o">[</span><span class="n">item</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s2">&quot;: &quot;</span><span class="p">)</span><span class="o">[</span><span class="mi">0</span><span class="o">].</span><span class="n">to_sym</span><span class="o">]</span> <span class="o">&lt;&lt;</span> <span class="n">item</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s2">&quot;: &quot;</span><span class="p">)</span><span class="o">[</span><span class="mi">1</span><span class="o">].</span><span class="n">split</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">)</span><span class="o">[</span><span class="mi">0</span><span class="o">].</span><span class="n">gsub</span><span class="p">(</span><span class="s2">&quot;#&quot;</span><span class="p">,</span> <span class="s2">&quot;&quot;</span><span class="p">)</span>
</span><span class='line'>      <span class="vc">@@color_hash</span><span class="o">[</span><span class="n">item</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s2">&quot;: &quot;</span><span class="p">)</span><span class="o">[</span><span class="mi">0</span><span class="o">].</span><span class="n">to_sym</span><span class="o">]</span> <span class="o">&lt;&lt;</span> <span class="n">item</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s2">&quot;: &quot;</span><span class="p">)</span><span class="o">[</span><span class="mi">1</span><span class="o">].</span><span class="n">split</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">)</span><span class="o">[-</span><span class="mi">2</span><span class="o">].</span><span class="n">gsub</span><span class="p">(</span><span class="s2">&quot;#&quot;</span><span class="p">,</span> <span class="s2">&quot;&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>    <span class="vc">@@color_hash</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="vc">@@teams</span> <span class="o">=</span> <span class="o">[]</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="nb">name</span><span class="p">,</span> <span class="n">url</span> <span class="o">=</span> <span class="s2">&quot;&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="vi">@name</span> <span class="o">=</span> <span class="nb">name</span>
</span><span class='line'>    <span class="vi">@name_for_sql</span> <span class="o">=</span> <span class="vi">@name</span><span class="o">.</span><span class="n">concat</span><span class="p">(</span><span class="s2">&quot; Tickets&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">to_s</span>
</span><span class='line'>    <span class="vi">@url</span> <span class="o">=</span> <span class="n">url</span>
</span><span class='line'>    <span class="vi">@away_teams</span> <span class="o">=</span> <span class="o">[]</span>
</span><span class='line'>    <span class="vi">@away_team_labels</span> <span class="o">=</span> <span class="o">[]</span>
</span><span class='line'>    <span class="vc">@@teams</span> <span class="o">&lt;&lt;</span> <span class="o">[</span><span class="nb">self</span><span class="o">.</span><span class="n">name</span><span class="p">,</span> <span class="nb">self</span><span class="o">.</span><span class="n">url</span><span class="o">]</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">count_teams</span>
</span><span class='line'>    <span class="vc">@@teams</span><span class="o">.</span><span class="n">size</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">name_teams</span>
</span><span class='line'>    <span class="vc">@@teams</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">date_for_sql</span>
</span><span class='line'>    <span class="vc">@@db</span><span class="o">.</span><span class="n">execute</span><span class="p">(</span><span class="s2">&quot;SELECT event_date FROM events WHERE team_home == &#39;</span><span class="si">#{</span><span class="vi">@name_for_sql</span><span class="si">}</span><span class="s2">&#39;&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">flatten</span><span class="o">.</span><span class="n">collect</span> <span class="p">{</span> <span class="o">|</span><span class="n">date</span><span class="o">|</span> <span class="n">date</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s2">&quot;,&quot;</span><span class="p">)</span><span class="o">[</span><span class="mi">1</span><span class="o">].</span><span class="n">strip</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">)</span><span class="o">[</span><span class="mi">0</span><span class="o">].</span><span class="n">split</span><span class="p">(</span><span class="s2">&quot;/&quot;</span><span class="p">)</span><span class="o">[</span><span class="mi">0</span><span class="o">.</span><span class="n">.</span><span class="o">-</span><span class="mi">2</span><span class="o">].</span><span class="n">join</span><span class="p">(</span><span class="s2">&quot;/&quot;</span><span class="p">)}</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">price_for_sql</span>
</span><span class='line'>    <span class="vc">@@db</span><span class="o">.</span><span class="n">execute</span><span class="p">(</span><span class="s2">&quot;SELECT min_price FROM events WHERE team_home == &#39;</span><span class="si">#{</span><span class="vi">@name_for_sql</span><span class="si">}</span><span class="s2">&#39;&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">flatten</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">tix_for_sql</span>
</span><span class='line'>    <span class="vc">@@db</span><span class="o">.</span><span class="n">execute</span><span class="p">(</span><span class="s2">&quot;SELECT tix FROM events WHERE team_home == &#39;</span><span class="si">#{</span><span class="vi">@name_for_sql</span><span class="si">}</span><span class="s2">&#39;&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">flatten</span><span class="o">.</span><span class="n">collect</span> <span class="k">do</span> <span class="o">|</span><span class="n">item</span><span class="o">|</span>
</span><span class='line'>        <span class="k">if</span> <span class="n">item</span><span class="o">.</span><span class="n">is_a?</span> <span class="nb">Integer</span>
</span><span class='line'>          <span class="n">item</span> <span class="o">/</span> <span class="mi">100</span>
</span><span class='line'>        <span class="k">else</span>
</span><span class='line'>          <span class="n">item</span><span class="o">.</span><span class="n">gsub</span><span class="p">(</span><span class="s2">&quot;,&quot;</span><span class="p">,</span> <span class="s2">&quot;&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">to_i</span> <span class="o">/</span> <span class="mi">100</span>
</span><span class='line'>        <span class="k">end</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">away_teams_for_sql</span>
</span><span class='line'>    <span class="vc">@@db</span><span class="o">.</span><span class="n">execute</span><span class="p">(</span><span class="s2">&quot;SELECT team_away FROM events WHERE team_home == &#39;</span><span class="si">#{</span><span class="vi">@name_for_sql</span><span class="si">}</span><span class="s2">&#39;&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">flatten</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">x_labels</span><span class="p">(</span><span class="n">item</span><span class="p">)</span>
</span><span class='line'>    <span class="nb">self</span><span class="o">.</span><span class="n">class</span><span class="o">.</span><span class="n">team_list</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">combo</span><span class="o">|</span>
</span><span class='line'>      <span class="k">if</span> <span class="n">combo</span><span class="o">[</span><span class="mi">1</span><span class="o">]</span> <span class="o">==</span> <span class="n">item</span>
</span><span class='line'>        <span class="vi">@away_teams</span> <span class="o">&lt;&lt;</span> <span class="n">combo</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">x_labels_abbr</span>
</span><span class='line'>    <span class="n">away_teams_for_sql</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">team</span><span class="o">|</span>
</span><span class='line'>      <span class="n">x_labels</span><span class="p">(</span><span class="n">team</span><span class="p">)</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>    <span class="vi">@away_teams</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">away_team_x_labels_abbr</span>
</span><span class='line'>    <span class="vi">@away_team_labels</span> <span class="o">=</span> <span class="n">x_labels_abbr</span><span class="o">.</span><span class="n">zip</span><span class="p">(</span><span class="n">date_for_sql</span><span class="p">)</span><span class="o">.</span><span class="n">collect</span> <span class="p">{</span> <span class="o">|</span><span class="n">array</span><span class="o">|</span> <span class="n">array</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="s2">&quot;: &quot;</span><span class="p">)</span> <span class="p">}</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="s2">&quot;|&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">team_color_primary</span>
</span><span class='line'>    <span class="no">Team</span><span class="o">.</span><span class="n">team_colors_list</span><span class="o">[</span><span class="vi">@name_for_sql</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">)</span><span class="o">[</span><span class="mi">0</span><span class="o">.</span><span class="n">.</span><span class="o">-</span><span class="mi">2</span><span class="o">].</span><span class="n">join</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">)</span><span class="o">.</span><span class="n">to_sym</span><span class="o">][</span><span class="mi">0</span><span class="o">]</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">team_color_secondary</span>
</span><span class='line'>    <span class="no">Team</span><span class="o">.</span><span class="n">team_colors_list</span><span class="o">[</span><span class="vi">@name_for_sql</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">)</span><span class="o">[</span><span class="mi">0</span><span class="o">.</span><span class="n">.</span><span class="o">-</span><span class="mi">2</span><span class="o">].</span><span class="n">join</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">)</span><span class="o">.</span><span class="n">to_sym</span><span class="o">][</span><span class="mi">1</span><span class="o">]</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">chart_filename</span>
</span><span class='line'>    <span class="vi">@name</span><span class="o">.</span><span class="n">downcase</span><span class="o">.</span><span class="n">gsub</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">,</span> <span class="s2">&quot;_&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">insert</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="s2">&quot;nba_charts/&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">concat</span><span class="p">(</span><span class="s2">&quot;.png&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">search_team</span><span class="p">(</span><span class="n">team_name</span><span class="p">)</span>
</span><span class='line'>    <span class="n">nba_team</span> <span class="o">=</span> <span class="no">Team</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">team_name</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">)</span><span class="o">.</span><span class="n">map</span> <span class="p">{</span> <span class="o">|</span><span class="n">word</span><span class="o">|</span> <span class="n">word</span><span class="o">.</span><span class="n">capitalize</span> <span class="p">}</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">)</span> <span class="p">)</span>
</span><span class='line'>    <span class="n">bar_chart</span> <span class="o">=</span> <span class="no">Gchart</span><span class="o">.</span><span class="n">new</span><span class="p">(</span>
</span><span class='line'>                <span class="ss">:type</span> <span class="o">=&gt;</span> <span class="s1">&#39;bar&#39;</span><span class="p">,</span>
</span><span class='line'>                <span class="ss">:size</span> <span class="o">=&gt;</span> <span class="s1">&#39;1000x300&#39;</span><span class="p">,</span>
</span><span class='line'>                <span class="ss">:encoding</span> <span class="o">=&gt;</span> <span class="s1">&#39;extended&#39;</span><span class="p">,</span>
</span><span class='line'>                <span class="ss">:bar_colors</span> <span class="o">=&gt;</span> <span class="o">[[</span><span class="n">nba_team</span><span class="o">.</span><span class="n">team_color_primary</span><span class="o">]</span><span class="p">,</span> <span class="o">[</span><span class="n">nba_team</span><span class="o">.</span><span class="n">team_color_secondary</span><span class="o">]]</span><span class="p">,</span>
</span><span class='line'>                <span class="ss">:title</span> <span class="o">=&gt;</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="vi">@name_for_sql</span><span class="si">}</span><span class="s2">&quot;</span><span class="p">,</span>
</span><span class='line'>                <span class="ss">:bg</span> <span class="o">=&gt;</span> <span class="s1">&#39;FAFAFA&#39;</span><span class="p">,</span>
</span><span class='line'>                <span class="ss">:legend</span> <span class="o">=&gt;</span> <span class="o">[</span><span class="s1">&#39;Minimum Price (LHS)&#39;</span><span class="p">,</span> <span class="s1">&#39;Number of Tickets (RHS)&#39;</span><span class="o">]</span><span class="p">,</span>
</span><span class='line'>                <span class="ss">:legend_position</span> <span class="o">=&gt;</span> <span class="s1">&#39;bottom&#39;</span><span class="p">,</span>
</span><span class='line'>                <span class="ss">:data</span> <span class="o">=&gt;</span> <span class="o">[</span><span class="n">nba_team</span><span class="o">.</span><span class="n">price_for_sql</span><span class="p">,</span> <span class="n">nba_team</span><span class="o">.</span><span class="n">tix_for_sql</span><span class="o">]</span><span class="p">,</span>
</span><span class='line'>                <span class="ss">:stacked</span> <span class="o">=&gt;</span> <span class="kp">false</span><span class="p">,</span>
</span><span class='line'>                <span class="ss">:axis_with_labels</span> <span class="o">=&gt;</span> <span class="o">[[</span><span class="s1">&#39;x&#39;</span><span class="o">]</span><span class="p">,</span> <span class="o">[</span><span class="s1">&#39;y&#39;</span><span class="o">]</span><span class="p">,</span> <span class="o">[</span><span class="s1">&#39;r&#39;</span><span class="o">]]</span><span class="p">,</span>
</span><span class='line'>                <span class="ss">:axis_labels</span> <span class="o">=&gt;</span> <span class="o">[[</span><span class="s2">&quot;</span><span class="si">#{</span><span class="n">nba_team</span><span class="o">.</span><span class="n">away_team_x_labels_abbr</span><span class="si">}</span><span class="s2">&quot;</span><span class="o">]]</span><span class="p">,</span>
</span><span class='line'>                <span class="ss">:bar_width_and_spacing</span> <span class="o">=&gt;</span> <span class="s1">&#39;25&#39;</span><span class="p">,</span>
</span><span class='line'>                <span class="ss">:axis_range</span> <span class="o">=&gt;</span> <span class="o">[[</span><span class="kp">nil</span><span class="o">]</span><span class="p">,</span> <span class="o">[</span><span class="mi">25</span><span class="o">]</span><span class="p">,</span> <span class="o">[</span><span class="mi">25</span><span class="o">]</span><span class="p">,</span> <span class="kp">nil</span><span class="o">]</span><span class="p">,</span>
</span><span class='line'>                <span class="ss">:max_value</span> <span class="o">=&gt;</span> <span class="n">nba_team</span><span class="o">.</span><span class="n">price_for_sql</span><span class="o">.</span><span class="n">max</span> <span class="o">+</span> <span class="mi">25</span><span class="p">,</span>
</span><span class='line'>                <span class="ss">:orientation</span> <span class="o">=&gt;</span> <span class="s1">&#39;v&#39;</span><span class="p">,</span>
</span><span class='line'>                <span class="ss">:filename</span> <span class="o">=&gt;</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">nba_team</span><span class="o">.</span><span class="n">chart_filename</span><span class="si">}</span><span class="s2">&quot;</span><span class="p">,</span>
</span><span class='line'>                <span class="p">)</span>
</span><span class='line'>    <span class="n">bar_chart</span><span class="o">.</span><span class="n">file</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;Creating file... Done&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>When I call &#8220;Team.search_team(&lt;&#8221;input team name&#8221;>)&#8221;, the program creates a file labeled with the appropriate team name in a sub-directory called &#8220;nba_charts&#8221;. As you can see, Googlecharts can be used to create charts dynamically based on variable user input.</p>

<p><strong>4) Adding User Interaction</strong></p>

<p>In order to create charts quickly, I added a command line interface for the program. This code allows users to specify which team they want to see ticket data for and it will create bar charts using the gchart gem and save them to the local filesystem. I went ahead and created four bar charts for the Knicks, Lakers, Thunder and Nuggets. I wanted to create a chart for my beloved Chicago Bulls as well, but the red-and-white combination didn&#8217;t show up very well on an off-white background, so I kept that chart out of this example.</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">response</span> <span class="o">=</span> <span class="s2">&quot;&quot;</span>
</span><span class='line'><span class="k">until</span> <span class="n">response</span><span class="o">.</span><span class="n">downcase</span> <span class="o">==</span> <span class="s2">&quot;done&quot;</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;What team do you want to search for? (&#39;Done&#39; to exit) &quot;</span>
</span><span class='line'>  <span class="n">response</span> <span class="o">=</span> <span class="nb">gets</span><span class="o">.</span><span class="n">chomp</span>
</span><span class='line'>  <span class="k">if</span> <span class="n">response</span><span class="o">.</span><span class="n">downcase</span> <span class="o">!=</span> <span class="s2">&quot;done&quot;</span>
</span><span class='line'>    <span class="no">Team</span><span class="o">.</span><span class="n">search_team</span><span class="p">(</span><span class="n">response</span><span class="p">)</span>
</span><span class='line'>  <span class="k">else</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;Thanks for using my program!&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Here is the code when execute it in the terminal:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ ruby tickets.rb
</span><span class='line'>What team do you want to search for? ('Done' to exit)
</span><span class='line'>New York Knicks
</span><span class='line'>Creating file... Done
</span><span class='line'>What team do you want to search for? ('Done' to exit)
</span><span class='line'>Los Angeles Lakers
</span><span class='line'>Creating file... Done
</span><span class='line'>What team do you want to search for? ('Done' to exit)
</span><span class='line'>Oklahoma City Thunder
</span><span class='line'>Creating file... Done
</span><span class='line'>What team do you want to search for? ('Done' to exit)
</span><span class='line'>Denver Nuggets
</span><span class='line'>Creating file... Done
</span><span class='line'>What team do you want to search for? ('Done' to exit)
</span><span class='line'>Done
</span><span class='line'>Thanks for using my program!</span></code></pre></td></tr></table></div></figure>


<p>And here are the bar charts that are created by the program:</p>

<h6>New York Knicks Tickets - Remaining Home Games</h6>


<p><img src="http://eewang.github.com/images/post_images/new_york_knicks_tickets.png"></img></p>

<h6>Los Angeles Lakers Tickets - Remaining Home Games</h6>


<p><img src="http://eewang.github.com/images/post_images/los_angeles_lakers_tickets.png"></img></p>

<h6>Oklahoma City Thunder Tickets - Remaining Home Games</h6>


<p><img src="http://eewang.github.com/images/post_images/oklahoma_city_thunder_tickets.png"></img></p>

<h6>Denver Nuggets - Remaining Home Games</h6>


<p><img src="http://eewang.github.com/images/post_images/denver_nuggets_tickets.png"></img></p>

<p>The left-hand y-axis refers to the price in dollars of the cheapest ticket, since StubHub&#8217;s primary event page indicates where ticket prices start from (i.e., the lowest price), and the right-hand y-axis refers to the number of tickets remaining in hundreds. I was having difficulty disconnecting the primary and secondary y-axes from each other, so the scale for the remaining tickets is not ideal (the primary y-axis determined the scale).</p>

<p><strong>5) Final Thoughts</strong></p>

<p>As you can see, the Googlecharts gem can be useful for quickly linking up a program with a data visualization tool. While it doesn&#8217;t appear to be the most powerful or most intuitive data graphing tool, its easy to install and the documentation is fairly straightforward, at least for basic functionality. I found it helpful to go through the code base for the Gchart class and try and follow the logic of each method whenever I got stuck. I found it to be a transparent gem in terms of figuring out what was going on &#8220;under the hood&#8221;.</p>

<p>That said, I found the syntax to be finicky, unnecessarily so, in my opinion. Also, it seemed like some of the more advanced functionality that I was looking for, that I was used to from using Excel many times, wasn&#8217;t readily available. Next on my list of graphing tools to try out is <a href="http://www.highcharts.com/" target="_blank">High Charts</a>, a Javascript tool for interactive data graphics that also has an accompanying Ruby gem, <a href="http://github.com/michelson/lazy_high_charts/" target="_blank">Lazy High Charts</a>. Then, I can learn how to create awesome stuff like <a href="http://prafulla.net/interesting-contents/world-interesting-contents/us-presidential-election-2012-ohio-as-critical-state-spending-tv-adsinfographics/" target="_blank">this</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Flatiron - Day 010]]></title>
    <link href="http://eewang.github.com/blog/2013/02/18/flatiron-day-010-week-2-wrap-up/"/>
    <updated>2013-02-18T18:07:00-05:00</updated>
    <id>http://eewang.github.com/blog/2013/02/18/flatiron-day-010-week-2-wrap-up</id>
    <content type="html"><![CDATA[<p>When I look back on the past two weeks, its hard to believe how far the class has come. And while it seems like each day has been more challenging than the last, its clear that we&#8217;re moving forward and covering a lot of ground. Avi mentioned that coding is hard because you&#8217;re always at the edge of your knowledge; it doesn&#8217;t get less difficult, you just move onto more advanced stuff. My classmate Victoria put it well in her <a href="http://vicfriedman.github.com" target="_blank">blog</a> when she mentions that each day brings new frustrations, but only because we&#8217;re pushing ourselves and not resting on what we already know.</p>

<!--more-->


<p>Friday was a half-day, although in the morning we still had lecture and some groupwork. We continued working on our student scrapers and trying to build the scraper into a student class so that the data pulled from the site would populate a database rather than exist in a hash or array. During the lecture, Avi emphasized the importance of breaking down a complex block of code into multiple methods, each of which just perform one action. Each method should have one and only one responsibility - if your perform multiple calculations or actions in a single method, you can likely refactor that method into two or more methods.</p>

<p>This is a coding best practice for a few reasons. First, the code is easier to debug as errors can be more effectively isolated. Second, the code is easier to read and follow along for other developers - rather than have to decipher the effects of multiple nested loops, its easier to trace the logic of a related set of short methods that are well organized and than one large method. Third, it makes your code more reusable. This came up when we were writing the class methods to save scraped student records to our database using SQL. Initially, I had written the code such that the various actions performed to initiate the database, create the tables and save the data to the tables were all in the same method. But as Avi showed us, you can actually break those out into separate methods that are each responsible for doing one action. This way, the methods are written more abstractly and can be used again to save different types of data in other situations to a SQL database.</p>

<p>I&#8217;ve realized that I need to train myself to be more methodical about refactoring and using methods as building blocks. I have a tendency to be overly verbose in my code and to encapsulate too much logic in a single method or block. I noticed this back in my previous job when I built models in Excel; the logic in my functions and macro code were hard to decipher and at times inefficiently written. Even though in the end, the models worked, I admit that they weren&#8217;t very elegant. As I go through the Flatiron program, I need to constantly remind myself that while its important to make the code I&#8217;m writing work, I need to make it right and make it fast (i.e., refactor and refactor again) to get to the next level.</p>

<p>In the afternoon, we went to New York Health &amp; Racquet Club for a fitness bootcamp. Although the class was tough, it was great to get in some exercise; I realized that my exercise schedule has tapered off since starting Flatiron. I&#8217;ve been so consumed by learning and coding that I haven&#8217;t been getting as much sleep or exercise as I&#8217;m used to. My goal will be to try and go to the gym or for a run at least once during the work week - twice if its a good week. I&#8217;ll hopefully have my entire career to code and work on interesting problems; its important that I don&#8217;t burn out in the first 12 weeks.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[This is not a blog post (Flatiron - Day 009)]]></title>
    <link href="http://eewang.github.com/blog/2013/02/14/this-is-not-a-blog-post-flatiron-day-009/"/>
    <updated>2013-02-14T11:58:00-05:00</updated>
    <id>http://eewang.github.com/blog/2013/02/14/this-is-not-a-blog-post-flatiron-day-009</id>
    <content type="html"><![CDATA[<p>This is an instance of a blog post. In object oriented programming languages, like Ruby, the existence of a class, in this case a &#8220;Blog Post,&#8221; is independent of an individual instance of such class (i.e., this blog post). Each blog post has similar attributes with different values, such as title, author and date. These are known as instance methods in Ruby. However, the &#8220;Blog Post&#8221; class may have class-level methods that are inaccesible by a single instance of a blog post.</p>

<!--more-->


<p>An example of this might be a count of blog posts. How many blog posts I&#8217;ve written is not a characteristic of a single blog post; rather, that data can only be found by accessing the &#8220;Blog Post&#8221; class and not a blog post instance. The &#8220;Blog Post&#8221; class has functionality that does not exist for an individual blog post, and vice versa. Confused? Good, now you know how we felt for much of the day.</p>

<p>We spent most of the day covering class constructors and recreating a few of the programs we&#8217;ve already written into object-oriented programs. The lecture and class discussion around object-oriented design was dense and hard to digest. Although I came across <a href="http://www.railstips.org/blog/archives/2009/05/11/class-and-instance-methods-in-ruby/" target="_blank">this useful article</a> covering how class and instance methods differ, I&#8217;m still processing my understanding of classes, and how they fit into the broader Ruby universe.</p>

<p>After lecture today, we focused on trying to take our scraper that we built yesterday, rewrite it using a class constructor and link it to a SQL database. This way, instead of our scraper returning a hash of student attributes as its data structure, we could have our scraper input data directly into a database, which is easier for querying and analyzing than a hash or array. Although its been a difficult task to combine a number of different tools and skills we&#8217;ve learned over the past week, I&#8217;m enjoying the challenge of trying to map out and code how data will flow from the page to the database.</p>

<p>For homework, we continued to work on Ruby Koans and our scrapers. This weekend, I&#8217;m hoping to be able to spend some time starting a few scraper projects that I have in mind. Its funny, since starting this program I&#8217;ve been looking forward to weekends so that I can just spend time coding and trying new things in Ruby. Sounds super nerdy, but its true. That said, I know that I need to seek balance in my life so that I don&#8217;t get burnt out on coding. Hopefully, I&#8217;ll have many fruitful years ahead to keep learning and exploring new horizons in technology. With the frenetic pace of the class and my tendency to dive deep into the weeds of what I&#8217;m working on, my body has been tired and I haven&#8217;t been exercising much recently. However, I&#8217;ve learned more in the past two weeks than I have in quite awhile. And its pretty exhilirating.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Coding, Fast and Slow (Flatiron - Day 008)]]></title>
    <link href="http://eewang.github.com/blog/2013/02/13/coding/"/>
    <updated>2013-02-13T23:56:00-05:00</updated>
    <id>http://eewang.github.com/blog/2013/02/13/coding</id>
    <content type="html"><![CDATA[<p>I am currently reading Daniel Kahneman&#8217;s pop psych book <a href="http://en.wikipedia.org/wiki/Thinking,_Fast_and_Slow" target="_blank">&#8220;Thinking, Fast and Slow&#8221;</a>. The basic premise of the book is that humans have two generalized thought processes - one that is reflexive and instinctual (System 1), and another that is more rational and deliberative (System 2). Book smarts are commonly equated to the latter and streets smarts to the former. I often think that coding has a similar thought pattern to it, which is unsurprising given that computers are designed to mimic human thought and communication, in a context-stripped yet efficient manner.</p>

<!--more-->


<p>When I&#8217;m coding, I often have a large problem that I want to solve. I want to pull all the data from a website, for example. Or I want to create a program that helps me better manage my finances. Conceptually, I can map out the actions and data that these programs will need. However, like most technological advances, coding starts from the bottom-up. Spaceships didn&#8217;t immediately follow horses as a means of transportation; first came bicycles, then trains, then cars, then planes, then spaceships. Technology tends to build on the most recent invention, and while large paradigm shifts can transform a communication platform virtually overnight (e.g., the Internet), most innovative products are built on the backs of countless previously innovative products.</p>

<p>In a similar vein, albeit on a much smaller scale, programming is the same way. While I may have a large problem that I want to solve in mind as I start to code, when I actually get down to writing, I have to take it piece by piece, line by line. Otherwise, communicating a large, abstract concept to a computer that doesn&#8217;t understand context and has to be explicitly told what to do is pretty difficult. I have to distill my program into its most irreducible component, make sure that runs smoothly, then add another layer, make sure that layer runs smoothly, etc. Rinse and repeat.</p>

<p>For example, if you want to create a Blackjack game, you don&#8217;t just create Blackjack. You have to start from the bottom, not just in terms of defining the game attributes, such as deck structure, card values, the number of players, etc., but you also in determining the gameplay. Start by assuming that you only have one player. Master the gameplay for that one player (e.g., what happens when the player stands? What happens if he/she hits?). Map out how a single player would play if he/she were in a bubble. Hold off any sense of betting because that will only make things more complicated at this point. Focus on getting the gameplay for a single player correct, then move on to add a dealer, add more players and introduce betting components.</p>

<p>If I were to create a Blackjack game, I would approach it iteratively - focusing on mastering one small, low-level yet self-sufficient component, then using that as a building block of a larger piece of the game. This means writing one line of code, running the code, debugging it as needed, writing another line of code, running it, debugging, etc. As I&#8217;m doing this, I&#8217;m using a more instinctive, System 1 approach to coding, in that I&#8217;m responding immediately to the output from my IRB shell (Interactive RuBy). I&#8217;m not focusing on the larger, bigger-picture problem, which remains pretty abstract early on. Instead, I&#8217;m iteratively tackling problems one at a time until I end up with a finished product. Okay, so the System 1 / System 2 analogy isn&#8217;t entirely apt as writing a line of code still requires a deliberative, rational thought process, but you get the point. Early on in a project and when actually writing lines of code, I try not to let the larger issue at hand get in the way of progress. If you just focus on the big problem, you&#8217;ll often get overwhelmed and lost in the problem instead of progressing toward a solution.</p>

<p>Avi spoke a lot about this concept of programming slowly and shortening the feedback loop in class today. As I mentioned in a previous post, one of the beauties of coding is that you get immediate gratification; I can write a few lines of code and instantly see the results. Beginners (myself included) often get lost in trying to solve a big problem without thinking through the concrete, small steps that a computer can understand. Personally, I tend to jump too quickly into coding and trying to solve the biggest problems first. I&#8217;ve realized over the past few days that I need to take my time, write more pseudo-code and start small.</p>

<p>In addition to discussing coding best practices, we worked more on our scrapers and tried to refactor some of our code into more efficient class constructors. In the afternoon, Avi taught us about object orientation, recursion and directory/file access in Ruby. Each day I&#8217;m learning new components of my technical skill set, all of which build on top of each other and make what I&#8217;ve learned before even more powerful. Coding is a cumulative skill set; what I learned in the first seven days I used today, and what I&#8217;ve learned today I&#8217;ll use tomorrow, the next day and for the rest of my coding career. This is comforting, as it lessens the pressure to get it 100% right the first time, and its reassuring to know that since practice makes perfect and since we&#8217;ll be getting a lot of practice, we stand a solid chance of getting pretty good.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Semantics and Scrapers (Flatiron - Day 007)]]></title>
    <link href="http://eewang.github.com/blog/2013/02/12/scrapers/"/>
    <updated>2013-02-12T23:55:00-05:00</updated>
    <id>http://eewang.github.com/blog/2013/02/12/scrapers</id>
    <content type="html"><![CDATA[<p>We covered a lot of material today, from the value of semantic mark-up in HTML to how to build web scrapers in Ruby. The day started with a review of our homework from the previous night, which was to recreate a song cataloging program that we had written using hash iteration. Using hashes rather than arrays to organize our song list enabled us to utilize metadata about the artist, album and song title that are accessible via hash keys.</p>

<!--more-->


<p>Later on in the day we went to work on our student profiles, and Avi taught us about the value of semantic markup along the way and other front-end best practices. Applying proper markup to an HTML document enables search engines to more effectively place content and generally aligns with the spirit of the Internet in writing web pages that are aware of the structure of their own content. In creating our student profiles, it was tempting to take semantic shortcuts and place content in the incorrect enclosing tags (e.g., list data in a table, which has a preset formatting). Avi emphasized, however, that the separation of content and style is a fundamental underpinning of the Web and should be respected. Content that is properly structured via HTML can be styled in an infinite number of ways, so we shouldn&#8217;t let our interest in maintaining beautiful design affect how we semantically define our content. A great example of this is the <a href="http://www.csszengarden.com/" target="_blank">CSS Zen Garden</a> project. Take a look at a few of the projects - you&#8217;ll realize that wildly different website designs can be based on the exact same HTML content.</p>

<p>In the afternoon, we were tasked with building our very first web scraper, on the student profile page we had just created, in fact. Using Nokogiri, a Ruby gem, I was able to write a program that parsed the individual student profile pages from the central index page and return a hash of attributes, covering each student&#8217;s work history, education, favorite apps, etc. For those who don&#8217;t know, scrapers are pretty awesome. They allow you to collect and organize data in any way you want from web sites, so long as you know what you&#8217;re looking for. Using scrapers, I could quickly collect sports data, or find all fitness classes at my gym, or pull out information from Wikipedia. Scrapers essentially allow you to extract large amounts of data for your own use. This is pretty powerful, and I&#8217;m excited to try and build more complex scrapers, and even attach those to analytical engines to provide useful intelligence about a topic.</p>

<p>In the evening, I made it over to an event on civic technology and public hacking with a fellow student. The talk focused on the state of civic technology, and included short speeches by politicians, city officials and active members of the civic tech community. Although it was all very interesting and exciting to know that this community is filled with passionate people who care about solving problems, I was exhausted after a long day at Flatiron, so I high-tailed it out of there when I got a chance and went back home to keep working on my scraper and watch the State of the Union.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Flatiron - Day 006]]></title>
    <link href="http://eewang.github.com/blog/2013/02/12/flatiron-day-006/"/>
    <updated>2013-02-12T00:19:00-05:00</updated>
    <id>http://eewang.github.com/blog/2013/02/12/flatiron-day-006</id>
    <content type="html"><![CDATA[<p>Much of the morning today was spent going through the Ruby homework we had over the weekend. In addition to a number of short homework assignments, we had to work on online modules at <a href="http://www.rubymonk.com/" target="_blank">RubyMonk</a> and <a href="http://www.rubykoans.com/" target="_blank">RubyKoans</a>. We explored topics like hash iteration, symbols and data structures in Ruby. In addition, we built a simple jukebox program in Ruby that allows for user interaction to select a song from a playlist. It seems like simple stuff, but it was a great exercise to think about how to break down the larger problem into smaller pieces.</p>

<!--more-->


<p>In the afternoon, we chatted about how the first week had gone, and people provided some feedback on the pace of the class, the structure of homework, etc. The overall theme of the discussion was very positive - everyone seemed to be enjoying their time and really focusing on learning the skill set. Later in the afternoon, we worked on building templates for our student profile pages in HTML and CSS, and continuing to practice coding in Ruby.</p>

<p>Oh, and blogging. Blogging and presenting at meetups will be a large part of our education at Flatiron, which I find exciting because it requires us to not just learn the skill set, but to be able to communicate it effectively, which will be necessary in any future job.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Why I Am at the Flatiron School]]></title>
    <link href="http://eewang.github.com/blog/2013/02/11/why-i-am-at-the-flatiron-school/"/>
    <updated>2013-02-11T22:00:00-05:00</updated>
    <id>http://eewang.github.com/blog/2013/02/11/why-i-am-at-the-flatiron-school</id>
    <content type="html"><![CDATA[<p>Sometime around the middle of last year I realized that I wasn&#8217;t satisfied with my job. I was working at a large alternative asset manager, helping structure hedge fund investment products and doing legal due diligence on hedge funds. It was my first job after graduating college, and I took the position to dip my toes in the corporate waters and explore careers in finance or law - two paths that college seniors from top schools seem to gravitate towards, despite knowing, at least for me, very little about what it means to actually work in finance or law.</p>

<!--more-->


<p>While my experience in finance was great - I learned a lot about what it means to be in a professional services field, how to work well with others and how a global business leader operates - it never really felt like it was the place for me. I considered law out of college because I love reading and writing, but I soon realized that corporate law is not quite like the reading and writing that I enjoyed doing at my college newspaper. I had not contemplated a career in technology, in large part because in college I got swept up in the finance-or-consulting bifurcation of the professional services world. In the years since graduating college, I&#8217;ve seen how quickly the Internet has changed and how dynamic the space is. I&#8217;m convinced that we&#8217;re just beginning to see how technology will change industries and professions (see quote by <a href="http://eewang.github.com/blog/2013/02/05/flatiron-day-002/" target="_blank">Alan Kay</a>), and I figured that the Flatiron School was the best way to jumpstart my journey into the wide and ever-expanding world of technology.</p>

<blockquote><p>The Internet?! Is that thing still around?</p><footer><strong>&#8211;Homer Simpson</strong></footer></blockquote>


<p>Growing up, I never really did much with technology. The only formal learning I had done before Flatiron was a Programming 1 class my sophomore year of high school where we learned Q-BASIC. My parents were engineers and my brother was studying enginnering, so I decided to be the black sheep of the family and pursue economics and public policy in college. I worked as a journalist and editor at <a href="http://www.dukechronicle.com/" target="_blank">my college newspaper</a>, and the little exposure I got to coding or programming was via the econometrics and macroeconomic policy classes I took, where we worked with Stata and mapping software like ArcGIS. However, I had little inclination that I would want to learn how to code and explore programming; I had naively thought programming to be the province of engineers who couldn&#8217;t communicate well or for those stuck in the computer lab for hours on end. I enjoyed journalism and working at the newspaper because it enabled me to be creative when I designed layouts and graphics for the paper yet also intellectually rigorous when I was editing, reporting and writing. In no way did I imagine that I would come to appreciate the technology world as I do now for much the same reasons - the remarkable complementarity between creative inspiration and analytical rigor that is necessary to be successful in the tech sphere.</p>

<p>After college, I went into finance, thinking that I would aim to go to law school or business school after a few years on the job. The position I took was in a hybrid legal and product development group at a large alternative asset manager, which I felt would enable me to get the most exposure quickly to both the corporate law and finance aspects of the business. In that respect, my two-and-a-half years there were successful. I learned that I didn&#8217;t want to be a lawyer, and that while I&#8217;m still not fully decided on whether to attend business school, I came to realize that technology was a better path for me. I enjoyed working with data and thinking about how problems could be solved or processes improved using technology. Thinking back, its funny how I joined the firm expecting to explore a binary path of going either to law school or business school (or both via a joint JD-MBA program), and left the firm to go back to school, just a very different program than what I had anticipated.</p>

<p>I started learning how to code by teaching myself how to write basic macros in Excel using VBA (Visual Basic for Applications). At my firm, I periodically came across business problems and processes that I thought to be slow, outmoded and way too manual. So I started building models to address issues like client reporting and product pricing. These models enabled me to learn more advanced Excel techniques, and a natural extension of that skill set led me to start writing macros. I bought a book on VBA coding early last year and spent a weekend trying to automate a data parsing problem that I had encountered when building a client reporting model. Although the macro I ended up writing worked, I wrote it using a brute force method; in retrospect, it wasn&#8217;t elegantly written, it ran too slowly and it definitely could have used some code refactoring. But, it got the job done. As that model and macro helped speed up tangible business processes at work, I came to realize the impact I could have by exploring the application of technology to business, and I started to explore building a technology skill set.</p>

<blockquote><p>If I had asked people what they wanted, they would have said &#8216;Faster horses.&#8217;</p><footer><strong>&#8211;Henry Ford</strong></footer></blockquote>


<p>In the spring of last year, as I was continuing to build out Excel models at the firm, working on models that evaluated hedge fund liquidity parameters, analyzed pricing plans across financial products and created client reports, I started to learn how to code. My brother was spending more and more time building his start-up <a href="http://www.leaguevine.com/" target="_blank">Leaguevine</a>, and in talking with him about his plan to join <a href="http://www.theironyard.com/" target="_blank">The Iron Yard</a>, a start-up incubator in Greenville, SC, I realized that exploring technology was useful for more than just work, but could be a skill set I build throughout my life. And hearing my brother&#8217;s passion for start-ups and the pretty cool things you could do with technology, I began to see how technology is an amazing tool to pursue passion projects.</p>

<p>So I created a personal &#8220;lesson plan&#8221; to learn how to code. I caught up on the Code Year program at Codecademy, went to a few classes at <a href="https://generalassemb.ly/" target="_blank">General Assembly</a> and generally tried to learn what people were talking about when they dropped references like Ruby on Rails, LAMP or Postgres. I honestly kept a running list of all the words and phrases that I had heard about that I wanted to remind myself to look into - an exercise in futility, I soon found out, as the list kept growing larger and larger and each subject I tried to look into had 10 more subjects I didn&#8217;t know embedded in them. It was like going on a Wikipedia page to learn something and getting lost in an endless rabbit hole of links just to grasp what that first page is talking about.</p>

<p>Having my brother to chat with and bounce ideas off of was invaluable. If you&#8217;re starting to explore technology without a technical background like myself, I would definitely recommend finding someone that you can chat with easily about this stuff. It was pretty intimidating for me going off and exploring on my own - I can&#8217;t imagine what it would have been like if I didn&#8217;t have my brother to help me along the way. There were some real frustrating times when I was trying to get my environment set-up (I was using a PC running off Windows Vista, so my advice would be to not do that), and I would spend a few hours on the phone with my brother just to run into a ton of error messages. He would encourage me to just keep moving through the frustration, which I may have succumbed to if I didn&#8217;t have his help. I feel blessed in this way too - my immediate family all has a technology background (my parents both have graduate degrees in engineering), and my Mom actually went from anthropology into computer science when she was younger, so she knew what I was going through. I also have some great friends here in New York that are involved in start-ups or are developers and are always willing to chat about their experiences and provide helpful advice. I&#8217;m super thankful to them (you know who you are) for patiently answering my annoying questions and generally serving as sounding boards for me as I ventured onto a new career path.</p>

<blockquote><p>When you learn how to program, you do the opposite of knowing everything all the time. You&#8217;ll feel stupid for most of it because you&#8217;re always at the edge of your knowledge.</p><footer><strong>&#8211;Avi Flombaum</strong></footer></blockquote>


<p>The biggest challenge for me in starting to code was to not get overwhelmed. My first question, as is common for many newbies, was &#8220;What language should I learn?&#8221; I quickly realized that I didn&#8217;t really even know what I was asking. What is a computer language? How does it differ from a framework, or a library? How do web applications differ from other applications? What is the Internet? Seriously, when I started out, I just needed someone to explain to me, at a high-level, what happens when I type in &#8220;http://www.google.com&#8221; into my web browser (a whole lot, apparently). From there, I learned the difference between front-end and back-end web development, how frameworks provide scaffolding that makes it easier to quickly build applications and how languages have evolved over time and have become more &#8220;higher-level.&#8221;</p>

<p>After establishing a baseline of understanding with respect to web development and coding, I learned HTML, CSS and Javascript/jQuery through the Codecademy modules and a collection of other web resources. For my server-side language, I decided to first learn Python, which was what my brother and his co-founder used to start Leaguevine. In my interview with Avi for Flatiron, he mentioned that its more important to newbies to find a language that makes sense for them to explore than to obsess over what&#8217;s the &#8220;best&#8221; language to start with. Each language has pros and cons, and focusing solely on language choice overlooks the fact that coding is about more than just the language. In fact, the Flatiron website communicates this pretty well:</p>

<blockquote><p>The language you learn matters least. Programming is about abstractions and expressions: the mechanics of code are universal and exist in all modern languages, whether it&#8217;s Python, Ruby, or Javascript. We teach Ruby because we love it. Thinking that your choice of language matters — especially as a beginner — is like thinking that you can only write poetry in English. The beauty of poetry is in rhyme and meter, in metaphor and simile, in cadence and rhythm, not in the King&#8217;s English. We teach Ruby and the Ruby ecosystem (which includes Rails) but you&#8217;re really learning how to think, how to break problems down, how to express yourself, how to abstract ideas, and how to work together. We just do that through Ruby.</p><footer><strong>&#8211;The Flatiron School</strong></footer></blockquote>


<p>My favorite part of that is: &#8220;Thinking that your choice of language matters - especially as a beginner - is like thinking that you can only write poetry in English.&#8221;</p>

<p>For me, my brother knew Python, so that was good enough for me - this way, I could ask him for help if I got stuck, which was quite often. I started doing Python modules in Codecademy, working on <a href="http://learnpythonthehardway.org/" target="_blank">Learn Python The Hard Way</a> and exploring Django by going through <a href="http://www.djangobook.com/en/2.0/index.html" target="_blank">The Django Book</a>. I built a simple blog site and a few other basic extentions like a contact list and a new vocab word list. None of it was particularly good, but it allowed me to tinker, play around and generally build confidence in working with code.</p>

<p>I found it pretty cool to fire up my localhost server, make a few changes in code, then refresh my browser to see the effects. That immediate feedback and gratification was encouraging for me. When I first got my site up and running on my localhost and could browse through a few pages, I definitely fist-pumped the air a few times. Despite that, progress was slow, and it took me way too long to fix bugs and errors. I didn&#8217;t really understand why certain bugs were appearing, and I tended to copy-paste code that I found on Stack Overflow that I hoped would fix the problem rather than really delving deep to understand the root cause. For example, in my Django app, I was having difficulty getting my CSS stylesheets and Javascript to load. I would write out some basic stylings, but they would never appear in my browser. I struggled with this issue for a few days, and eventually was able to find a solution with the help of a developer that I met at a hackathon last fall. At the end of the day, the solution was simple, but the process to finding that solution was frustrating. I thought, &#8220;It would have been more efficient to be working alongside someone that I could talk with about this issue. I would have not only fixed the bug much faster, I would have also learned more about why the problem was emerging in the first place.&#8221; This was when it dwelled on me that a more community-based, immersive approach to learning technology would be most beneficial for me (not to mention way more fun).</p>

<p>A friend of a friend turned me on to The Flatiron School, and I began to explore going down the immersive technology education route that Flatiron offers. A part of me didn&#8217;t want to consider the program; &#8220;I can learn this stuff on my own, why do I have to pay for this education?&#8221; I thought, pridefully. However, the more I considered potential career paths, I realized that if I allowed my prideful self have its way - wanting to learn all of this on my own and thus maintain the notion of being a wholly indepedent, self-taught programmer - I would never fully learn the skill set. Instead of actually learning how to code, the desire to be fully self-sufficient in my education would have kept me from learning. I applied to the Flatiron School in early November last year, focusing on how I came to realize that I wanted to learn this skill set and how I had demonstrated a structured, analytical thought process in the past through my work at the newspaper and in my job. After an interview with Avi, I was fortunate enough to be accepted in December.</p>

<blockquote><p>You can’t connect the dots looking forward; you can only connect them looking backwards. So you have to trust that the dots will somehow connect in your future. You have to trust in something — your gut, destiny, life, karma, whatever. This approach has never let me down, and it has made all the difference in my life.</p><footer><strong>&#8211;Steve Jobs</strong></footer></blockquote>


<p>After hearing that I was accepted, I spent a lot of time talking with friends and family about my decision. To attend the program, I would have to leave a well-paying job and jump to a school that had just started earlier in the summer. I feel that I was on a good trajectory at my firm; I had been performing well and all indications were that my colleagues enjoyed working with me. Leaving a job that I had grown used to over the previous 2.5 years and leaving co-workers that I valued and respected were not easy decisions to make. Ultimately, however, I realized that if I were going to ever make a career change like the one I had at hand, now was the time to do it. I had worked long enough to save up some money to be self-sufficient, but not so long to feel that there would be large career transition costs. I don&#8217;t have a family to support, my parents and brother are all doing well on their own and I don&#8217;t live particularly lavishly. All signs pointed to taking the leap and pursuing a different path.</p>

<p>And while its only been 6 days into the Flatiron program. I&#8217;m feeling pretty good about my decision. The class has been moving at a brisk pace; I&#8217;ve found it challenging but manageable. The 11 weeks ahead will undoubtedly be filled with long nights, frustrating hours spent debugging code and countless error messages, but I wouldn&#8217;t have it any other way.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[5 Reasons Everyone Should Learn How to Code]]></title>
    <link href="http://eewang.github.com/blog/2013/02/11/5-reasons-everyone-should-learn-how-to-code/"/>
    <updated>2013-02-11T18:33:00-05:00</updated>
    <id>http://eewang.github.com/blog/2013/02/11/5-reasons-everyone-should-learn-how-to-code</id>
    <content type="html"><![CDATA[<p>You should learn how to code. Even if you don&#8217;t want to be a programmer, coding is the new literacy. Don&#8217;t worry if you don&#8217;t have a technical background and never touched code in your life. I came to Flatiron having only taken one programming course ever. I worried that I was too old to learn this stuff; it seemed like everyone was either a computer science major or had been coding since they were kids. However, I&#8217;ve learned that the technology has become much more accessible to beginners in the past few years.</p>

<!--more-->


<p>And at the end of the day, computers are just tools that were built by humans. And while the subject matter isn&#8217;t easy, its not as mystical or obscure as I had initially thought. At the risk of sounding cliche, its never too late to learn a new skill. Here are five reasons why everyone (including you!) should learn how to code.</p>

<p><strong>1) Be Productive and Have an Impact</strong></p>

<p>Coding is a cheap way to be a maker and creator and to connect with the world around you. Its exhilirating to write some code, start your browser and instantly see what you wrote intepreted on screen. I can&#8217;t think of many industries where you can immediately see the fruits of your labor. Coming from asset management, I found it difficult to connect my work back to the end beneficiary - retirees, teachers, etc. - as there seemed to be multiple layers of intermediation such that I couldn&#8217;t see the full impact I was having. With web development, its easier to get immediate gratification from your work.</p>

<p>Coding also enables you to have an outsized impact. Everyone&#8217;s heard how Facebook, Google, etc. grew out of a college dorm room or garage and are now changing the world in tangible ways. While those home run endeavors are few and far between, its empowering to think that I can create something in a short amount of time and instantly let anyone with Internet access see what I&#8217;ve done. Even in launching this blog, I love the fact that my writing could have an impact on people that I&#8217;ve never even met. Programming opens up a whole new method of communicating and expressing ideas that I had never imagined. For many years, I was just a consumer of the Internet - reading blogs, using applications and playing games. Learning how to code is the first step to becoming a productive member of a modern, Web-enabled society and contributing back to the complex system of tubes that has provided me countless hours of enjoyment and learning.</p>

<p><strong>2) Use Your Entire Brain</strong></p>

<p>Its rare to find an activity that engages both your left brain and right brain as actively as web development. Good, modern web applications are both well designed and analytically powerful programs. When I worked as a editor in charge of layout and design at my college newspaper, I had to think creatively about how to display content - what colors, fonts and page structure would attract readers yet not diminish the written content? In finance, I had to move to the other side of the intellectual spectrum and think much more analytically, use data and solve problems in a structured, deliberate manner. I have found web development to be the best of both worlds - a field that tightly integrates the creative with the analytical in such a way that brings people with varied and diverse skill sets to the same table.</p>

<p><strong>3) Build A Valuable Skill Set</strong></p>

<p>Technology is booming, and good developers are in high demand. I&#8217;ve heard from people in the industry that its not uncommon for start-ups to have high turnover - not because of job dissatisfaction, but rather because there are so many good opportunities out there that developers are able to move around to satisfy their desire to work on new, interesting problems. As technology continues to disrupt industries and economies - just look at how Amazon has transformed the consumer market - companies moving this tidal wave of transformation forward will be eagerly seeking out talented people who are able to understand technology and apply it to business problems. And while consumer-oriented industries like fashion or marketing have already been upended by technology, I&#8217;m convinced that the best is still to come for more defensive industries like energy, transportation and healthcare. Even when working in finance, I clearly saw how powerful technology can enhance a company&#8217;s product strategy and give them a leg up on their competition. This trend toward digitization and the application of technology in process and operations isn&#8217;t going away anytime soon - might as well get on the leading edge by learning how to code.</p>

<p><strong>4) Work With Passionate People</strong></p>

<p>One thing I learned about myself from working at my college newspaper was that I love working with passionate people. I draw energy from them, and it makes whatever work I&#8217;m doing more palatable. In the interactions I&#8217;ve had with entrepreneurs and people at start-ups, its clear to me that developers, designers and the start-up community in general are incredibly passionate about what they do. In fact, you pretty much have to be passionate to start a company, since its easier to get a job at a large company than to venture out on your own. When I talk to people who work in this field, I can just hear in their voice how excited they are to have an impact and execute on an idea.</p>

<p>A great example of the passion technologists have for their craft are hackathons. In New York City, you can probably find a hackathon on any given weekend - I have a friend who goes to a few hackathons a month. The simple fact that these exist is a testament to passion; developers are willing to spend an entire Saturday coding and hacking away at a single problem. They are there because they are excited about solving problems and want to think creatively about how to improve the world around them. I&#8217;ve been to two hackathons, one about energy and the environment and the other about music. However, in the past month alone, I&#8217;ve heard about hackathons covering fashion, education and sanitation. There&#8217;s a hackathon in a few months for government and civic institutions. The people going to these hackathons are not going for the money (although some do offer cash prizes); they&#8217;re attending because they&#8217;re passionate.</p>

<p><strong>5) Enjoy a Lifetime of Learning</strong></p>

<p>When you first begin to explore technology, you&#8217;ll quickly learn (as I did) how much there is out there to learn. Each concept I learned about opened the door to 10 more concepts. Technology is a very, very long rabbit hole, but once you get started, you&#8217;ll never run out of concepts to explore, in large part because its such a dynamic and fast-growing field. Each year, developers produce new frameworks and new languages; in fact, Ruby itself is only two decades old, and didn&#8217;t really catch fire until the mid-2000s. The scope of technology is increasing faster than I can learn new skills.</p>

<p>In addition to learning Ruby and web development, I&#8217;m interested in exploring design, writing iOS applications and creating data visualizations. Obviously, I won&#8217;t be able to tackle all of those goals in the 12-week Flatiron program. But learning how to code is the bedrock foundation for really understanding technology, so I&#8217;m excited to take what I&#8217;m learning here and extending that over and over again in the future as I continue my education.</p>

<hr />

<p>I hope those 5 reasons provide enough motivation to start the lifelong journey of learning how to use technology as a tool through code. If you&#8217;re a developer or learning how to program, what made you first want to code? What were some of the difficulties in getting started? If you don&#8217;t have any interest in coding, why not? I don&#8217;t think everyone is meant to be a programmer, but there are certainly misconceptions and assumptions about coding that cause people to establish mental obstacles to actually trying to learn, and I&#8217;d like to hear what people think.</p>
]]></content>
  </entry>
  
</feed>
